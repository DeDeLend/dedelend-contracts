{"id":"76e885d9f93ad2a9c0d9fa6962580038","_format":"hh-sol-build-info-1","solcVersion":"0.8.6","solcLongVersion":"0.8.6+commit.11564f7e","input":{"language":"Solidity","sources":{"contracts/DDL.sol":{"content":"pragma solidity 0.8.6;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"./IHegicOperationalTreasury.sol\";\nimport \"./IHegicStrategy.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"./IPoolDDL.sol\";\n\ncontract DDL is Ownable {\n    using SafeERC20 for IERC20;\n\n    uint256 public LTV;\n    uint256 public LTV_DECIMALS = 10**4;\n\n    IERC721 public collateralToken;\n    IHegicOperationalTreasury public operationalPool;\n    IERC20 public USDC;\n\n    uint256 public interestRate = 19025875190258754083880960;\n    uint256 public INTEREST_RATE_DECIMALS = 10**30;\n\n    uint256 public minBorrowLimit;\n    uint256 public COLLATERAL_DECIMALS;\n\n    uint256 public PriorLiqPriceCoef;\n\n    IPoolDDL public pool;\n\n    struct BorrowedByOption {\n        uint256 borrowed;\n        uint256 newBorrowTimestamp;\n    }\n    struct optionInfo {\n        address strategyAddress;\n        uint256 amount;\n        uint256 strike;\n        uint256 expiration;\n        bool isLong;\n    }\n    struct CollateralInfo {\n        address owner;\n        optionInfo strategy;\n    }\n\n    enum HegicStrategyType {\n        Invalid,\n        Long,\n        Short\n    }\n\n    mapping(uint256 => CollateralInfo) public collateralInfo;\n    mapping(uint256 => BorrowedByOption) public borrowedByOption;\n    mapping(address => HegicStrategyType) public strategyType;\n\n    event Borrow(\n        address indexed user,\n        uint256 indexed optionID,\n        uint256 amount,\n        address strategy,\n        uint256 timestamp\n    );\n    event Repay(address indexed user, uint256 indexed optionID, uint256 amount);\n    event Liquidate(\n        address indexed user,\n        uint256 indexed optionID,\n        uint256 amount,\n        uint256 poolProfit,\n        uint256 liqFee\n    );\n    event Unlock(address indexed user, uint256 indexed optionID);\n    event ForcedExercise(\n        address indexed user,\n        uint256 indexed optionID,\n        uint256 amount,\n        uint256 poolProfit,\n        uint256 liqFee\n    );\n    event ExerciseByPriorLiqPrice(\n        address indexed user,\n        uint256 indexed optionID,\n        uint256 userReturn,\n        uint256 poolReturn,\n        uint256 liqFee\n    );\n\n    constructor(\n        address[4] memory _arrLongHegicStrategy,\n        address[4] memory _arrShortHegicStrategy,\n        IERC721 _collateralToken,\n        IHegicOperationalTreasury _operationalPool,\n        IERC20 _USDC,\n        uint256 _minBorrowLimit,\n        uint256 _ltv,\n        uint256 _COLLATERAL_DECIMALS,\n        uint256 _PriorLiqPriceCoef\n    ) {\n        for (uint256 i = 0; i < _arrLongHegicStrategy.length; i++) {\n            strategyType[_arrLongHegicStrategy[i]] = HegicStrategyType.Long;\n        }\n        for (uint256 i = 0; i < _arrShortHegicStrategy.length; i++) {\n            strategyType[_arrShortHegicStrategy[i]] = HegicStrategyType.Short;\n        }\n        collateralToken = _collateralToken;\n        operationalPool = _operationalPool;\n        USDC = _USDC;\n        minBorrowLimit = _minBorrowLimit;\n        LTV = _ltv;\n        COLLATERAL_DECIMALS = 10**_COLLATERAL_DECIMALS;\n        PriorLiqPriceCoef = _PriorLiqPriceCoef;\n    }\n\n    function setLTV(uint256 value) external onlyOwner {\n        require(value <= 8000, \"invalid value\");\n        LTV = value;\n    }\n\n    function setInterestRate(uint256 value) external onlyOwner {\n        interestRate = value;\n    }\n\n    function setInterestRateDecimals(uint256 value) external onlyOwner {\n        INTEREST_RATE_DECIMALS = value;\n    }\n\n    function setMinBorrowLimit(uint256 value) external onlyOwner {\n        minBorrowLimit = value;\n    }\n\n    function setPool(address value) external onlyOwner {\n        pool = IPoolDDL(value);\n    }\n\n    function lockOption(uint256 id) external {\n        require(pool.openDeDeLend(), \"pauseDeDeLend\");\n        (\n            IHegicOperationalTreasury.LockedLiquidityState state,\n            address strategy,\n            ,\n            ,\n            uint32 expiration\n        ) = operationalPool.lockedLiquidity(id);\n        require(block.timestamp <= uint256(expiration) - 60*60, \"too late\");\n        (uint128 amount, uint128 strike) = IHegicStrategy(strategy)\n            .strategyData(id);\n        require(\n            state == IHegicOperationalTreasury.LockedLiquidityState.Locked,\n            \"option is active\"\n        );\n        require(collateralToken.ownerOf(id) == msg.sender, \"you not owner\");\n        require(\n            strategyType[strategy] != HegicStrategyType.Invalid,\n            \"strategy not supported\"\n        );\n        collateralToken.transferFrom(msg.sender, address(this), id);\n        bool isLong = strategyType[strategy] == HegicStrategyType.Long ? true: false;\n        collateralInfo[id] = CollateralInfo(\n            msg.sender,\n            optionInfo(\n                strategy,\n                uint256(amount),\n                uint256(strike),\n                uint256(expiration),\n                isLong\n            )\n        );\n    }\n\n    function maxBorrowLimit(uint256 id) public view returns (uint256) {\n        return (profitByOption(id) / LTV_DECIMALS) * LTV;\n    }\n\n    function borrow(uint256 id, uint256 amount) external {\n        require(pool.openDeDeLend(), \"pauseDeDeLend\");\n        BorrowedByOption storage data = borrowedByOption[id];\n        uint256 maxLimit = maxBorrowLimit(id);\n        (\n            IHegicOperationalTreasury.LockedLiquidityState state,\n            ,\n            ,\n            ,\n\n        ) = operationalPool.lockedLiquidity(id);\n        uint256 totalBalance = pool.getTotalBalance(); \n        require(amount >= minBorrowLimit, \"amount less minBorrowLimit\");\n        require(amount + data.borrowed <= maxLimit, \"amount + data.borrowed less maxLimit\");\n        require(state == IHegicOperationalTreasury.LockedLiquidityState.Locked, \"invalid state\");\n        require(msg.sender == collateralInfo[id].owner, \"you are not the owner\");\n        require(amount <= totalBalance, \"there is not enough money in the pool\");\n        require(block.timestamp <= collateralInfo[id].strategy.expiration - 60*60, \"too late\");\n        if (collateralInfo[id].strategy.isLong) {\n            require(currentPrice(id) > priorLiqPrice(id), \"the price is too low\");\n        } else {\n            require(currentPrice(id) < priorLiqPrice(id), \"the price is too high\");\n        }\n        uint256 upcomingFee = calculateUpcomingFee(id);\n        borrowedByOption[id] = BorrowedByOption(\n            amount + data.borrowed + upcomingFee,\n            block.timestamp\n        );\n        pool.addTotalLocked(amount + upcomingFee);\n        pool.send(collateralInfo[id].owner, amount);\n        emit Borrow(\n            msg.sender,\n            id,\n            amount,\n            collateralInfo[id].strategy.strategyAddress,\n            block.timestamp\n        );\n    }\n\n    function liquidate(uint256 id) external {\n        require(loanState(id), \"invalid price\");\n        BorrowedByOption storage data = borrowedByOption[id];\n        uint256 profit = profitByOption(id);\n        exerciseOption(id);\n        uint256 diff = 0;\n        if (profit > data.borrowed) {\n            diff = profit - data.borrowed;\n            USDC.transfer(address(pool), data.borrowed+diff*90/100);\n            USDC.transfer(msg.sender, diff*10/100);\n        } else {\n            USDC.transfer(address(pool), profit);\n        }\n        emit Liquidate(\n            collateralInfo[id].owner,\n            id,\n            data.borrowed,\n            diff*90/100,\n            diff*10/100\n        );\n    }\n\n    function forcedExercise(uint256 id) external {\n        require(\n            block.timestamp > collateralInfo[id].strategy.expiration - 30 * 60\n        );\n        BorrowedByOption storage data = borrowedByOption[id];\n        uint256 profit = profitByOption(id);\n        exerciseOption(id);\n        uint256 diff = 0;\n        if (profit > data.borrowed) {\n            diff = profit - data.borrowed;\n            USDC.transfer(address(pool), data.borrowed+diff*90/100);\n            USDC.transfer(msg.sender, diff*10/100);\n        } else {\n            USDC.transfer(address(pool), profit);\n        }\n        emit ForcedExercise(\n            collateralInfo[id].owner,\n            id,\n            data.borrowed,\n            diff*90/100,\n            diff*10/100\n        );\n    }\n\n    function exerciseByPriorLiqPrice(uint256 id) external {\n        require(loanStateByPriorLiqPrice(id), \"invalid price\");\n        BorrowedByOption storage data = borrowedByOption[id];\n        uint256 profit = profitByOption(id);\n        exerciseOption(id);\n        USDC.transfer(address(pool), data.borrowed);\n        USDC.transfer(collateralInfo[id].owner, profit - (data.borrowed + data.borrowed*10/100));\n        USDC.transfer(msg.sender, data.borrowed*10/100);\n        emit ExerciseByPriorLiqPrice(\n            collateralInfo[id].owner,\n            id,\n            profit - (data.borrowed + data.borrowed*10/100),\n            data.borrowed,\n            data.borrowed*10/100\n        );\n    }\n\n    function calculateUpcomingFee(uint256 id)\n        public\n        view\n        returns (uint256 upcomingFee)\n    {\n        BorrowedByOption storage data = borrowedByOption[id];\n        uint256 periodInMinutes = (block.timestamp - data.newBorrowTimestamp) /\n            60;\n        upcomingFee =\n            ((data.borrowed / 100) * (periodInMinutes * interestRate)) /\n            INTEREST_RATE_DECIMALS;\n    }\n\n    function repay(uint256 id, uint256 amount) external {\n        require(borrowedByOption[id].borrowed > 0, \"option redeemed\");\n        uint256 upcomingFee = calculateUpcomingFee(id);\n        require(\n            amount <= borrowedByOption[id].borrowed + upcomingFee,\n            \"too much amount\"\n        );\n        require(msg.sender == collateralInfo[id].owner);\n        uint256 newBorrow = borrowedByOption[id].borrowed +\n            upcomingFee -\n            amount;\n        pool.subTotalLocked(amount - upcomingFee);\n        borrowedByOption[id] = BorrowedByOption(\n            newBorrow,\n            block.timestamp\n        );\n        USDC.transferFrom(collateralInfo[id].owner, address(this), amount);\n        USDC.transfer(address(pool), amount);\n        emit Repay(msg.sender, id, amount);\n    }\n\n    function unlock(uint256 id) external {\n        require(borrowedByOption[id].borrowed == 0, \"option is blocked\");\n        collateralToken.transferFrom(\n            address(this),\n            collateralInfo[id].owner,\n            id\n        );\n        emit Unlock(msg.sender, id);\n    }\n\n    function loanState(uint256 id) public view returns (bool) {\n        CollateralInfo storage collateral = collateralInfo[id];\n        if (collateral.strategy.isLong) {\n            return currentPrice(id) <= liqPrice(id);\n        } else {\n            return currentPrice(id) >= liqPrice(id);\n        }\n    }\n\n    function loanStateByPriorLiqPrice(uint256 id) public view returns (bool) {\n        CollateralInfo storage collateral = collateralInfo[id];\n        if (collateral.strategy.isLong) {\n            return currentPrice(id) <= priorLiqPrice(id);\n        } else {\n            return currentPrice(id) >= priorLiqPrice(id);\n        }\n    }\n\n    function currentPrice(uint256 id) public view returns (uint256 price) {\n        CollateralInfo storage data = collateralInfo[id];\n        (, int256 latestPrice, , , ) = IHegicStrategy(\n            data.strategy.strategyAddress\n        ).priceProvider().latestRoundData();\n        price = uint256(latestPrice);\n    }\n\n    function priorLiqPrice(uint256 id) public view returns (uint256 price) {\n        (\n            ,\n            address strategy,\n            ,\n            ,\n        ) = operationalPool.lockedLiquidity(id);\n        (, uint128 strike) = IHegicStrategy(strategy).strategyData(id);\n        if (collateralInfo[id].strategy.isLong) {\n            return uint256(strike)*(100+PriorLiqPriceCoef)/100; \n        } \n        return uint256(strike)*(100-PriorLiqPriceCoef)/100;\n    }\n    function liqPrice(uint256 id) public view returns (uint256 price) {\n        BorrowedByOption storage optionData = borrowedByOption[id];\n        CollateralInfo storage data = collateralInfo[id];\n        (\n            ,\n            address strategy,\n            ,\n            ,\n        ) = operationalPool.lockedLiquidity(id);\n        (uint128 amount, uint128 strike) = IHegicStrategy(strategy)\n        .strategyData(id);\n        if (data.strategy.isLong) {\n            return uint256(strike) + (optionData.borrowed*COLLATERAL_DECIMALS)/(uint256(amount))*120;\n        }\n        return uint256(strike) - (optionData.borrowed*COLLATERAL_DECIMALS)/(uint256(amount))*120;\n    }\n\n    function currentLiqPrice(uint256 id) public view returns (uint256 price) {\n        CollateralInfo storage data = collateralInfo[id];\n        if (data.strategy.isLong){\n            if (priorLiqPrice(id) > liqPrice(id)) {\n                return priorLiqPrice(id);\n            }\n            return liqPrice(id);\n        }\n        if (priorLiqPrice(id) < liqPrice(id)) {\n            return priorLiqPrice(id);\n        }\n        return liqPrice(id);\n    }\n\n    function profitByOption(uint256 id) public view returns (uint256 profit) {\n        (,address strategy,,,) = operationalPool.lockedLiquidity(id);\n        return IHegicStrategy(strategy).profitOf(id);\n    }\n\n    function exerciseOption(uint256 id) private {\n        CollateralInfo storage data = collateralInfo[id];\n        return IHegicStrategy(data.strategy.strategyAddress).exercise(id);\n    }\n}\n"},"contracts/IHegicOperationalTreasury.sol":{"content":"pragma solidity 0.8.6;\n\ninterface IHegicOperationalTreasury {\n    enum LockedLiquidityState {Unlocked, Locked}\n\n    function lockedLiquidity(uint256 id)\n        external\n        view\n        returns (\n            LockedLiquidityState state,\n            address strategy,\n            uint128 negativepnl,\n            uint128 positivepnl,\n            uint32 expiration\n        );\n}\n"},"contracts/IHegicStrategy.sol":{"content":"pragma solidity 0.8.6;\n\n import \"@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol\";\n\ninterface IHegicStrategy {\n    function exercise(uint256 optionID) external;\n\n    function profitOf(uint256 optionID) external view returns (uint256 amount);\n\n    function priceProvider() external view returns (AggregatorV3Interface priceProvider);\n\n    function strategyData(uint256 id) external view returns (uint128 amount, uint128 strike);\n}\n"},"contracts/IPoolDDL.sol":{"content":"pragma solidity 0.8.6;\n\ninterface IPoolDDL {\n    function send(address to, uint amount) external;\n    function getTotalBalance() external view returns (uint256 balance);\n    function addTotalLocked(uint256 value) external;\n    function subTotalLocked(uint256 value) external; \n    function openDeDeLend() external view returns (bool openDeDeLend);\n}"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner nor approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"},"@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0;\n\ninterface AggregatorV3Interface {\n\n  function decimals() external view returns (uint8);\n  function description() external view returns (string memory);\n  function version() external view returns (uint256);\n\n  // getRoundData and latestRoundData should both raise \"No data present\"\n  // if they do not have data to report, instead of returning unset values\n  // which could be misinterpreted as actual reported values.\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"},"contracts/PoolDDL.sol":{"content":"pragma solidity 0.8.6;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract PoolDDL is Ownable, ERC20(\"Writing DDL\", \"DDL\") {\n    uint256 public constant INITIAL_RATE = 1e18;\n    uint256 public maxDepositAmount = type(uint256).max;\n    mapping(address => bool) public ddlContracts;\n    IERC20 public token;\n    uint256 public totalLocked;\n    bool public openDeDeLend = true;\n\n    event Provide(address indexed user, uint256 amount);\n    event Withdraw(address indexed user, uint256 amount);\n\n    function changeOpenDeDeLend(bool value) external onlyOwner {\n        openDeDeLend = value;\n    }\n\n    function addTotalLocked(uint256 value) public {\n        require(ddlContracts[msg.sender]);\n        totalLocked += value;\n    }\n\n    function subTotalLocked(uint256 value) public {\n        require(ddlContracts[msg.sender]);\n        totalLocked -= value;\n    }\n\n    function getTotalBalance() public view returns (uint256 balance) {\n        balance = token.balanceOf(address(this));\n    }\n\n    function shareOf(address account) external view returns (uint256 share) {\n        if (totalSupply() > 0)\n            share = (getTotalBalance() * balanceOf(account)) / totalSupply();\n        else share = 0;\n    }\n\n    constructor(\n        IERC20 _token,\n        address ddlContract1,\n        address ddlContract2\n    ) {\n        token = _token;\n        ddlContracts[ddlContract1] = true;\n        ddlContracts[ddlContract2] = true;\n    }\n\n    function provideFrom(\n        address account,\n        uint256 amount,\n        uint256 minShare\n    ) external returns (uint256 share) {\n        require(openDeDeLend, \"pauseDeDeLend\");\n        uint256 totalBalance = getTotalBalance() + totalLocked;\n        share = totalSupply() > 0 && totalBalance > 0\n            ? (amount * totalSupply()) / totalBalance\n            : amount * INITIAL_RATE;\n        uint256 limit = maxDepositAmount - totalBalance;\n        require(share >= minShare, \"Pool Error: The mint limit is too large\");\n        require(share > 0, \"Pool Error: The amount is too small\");\n        require(\n            amount <= limit,\n            \"Pool Error: Depositing into the pool is not available\"\n        );\n\n        token.transferFrom(msg.sender, address(this), amount);\n        _mint(msg.sender, share);\n        emit Provide(msg.sender, amount);\n    }\n\n    function withdraw(uint256 amount) external {\n        uint256 totalBalance = getTotalBalance() + totalLocked;\n        require(amount <= getTotalBalance());\n        uint256 burn = (amount * totalSupply()) / totalBalance;\n        require(burn <= balanceOf(msg.sender), \"Amount is too large\");\n        _burn(msg.sender, burn);\n        token.transfer(msg.sender, amount);\n        emit Withdraw(msg.sender, amount);\n    }\n\n    function send(address to, uint256 amount) public {\n        require(ddlContracts[msg.sender]);\n        require(amount <= getTotalBalance());\n        token.transfer(to, amount);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/DDL.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/DDL.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/IHegicOperationalTreasury.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/IHegicOperationalTreasury.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/IHegicStrategy.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/IHegicStrategy.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/IPoolDDL.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/IPoolDDL.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/PoolDDL.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/PoolDDL.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/PoolDDL.sol:52:9:\n   |\n52 |         address account,\n   |         ^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":1545,"file":"contracts/PoolDDL.sol","start":1530},"type":"Warning"}],"sources":{"@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[45]},"id":46,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.7",".0"],"nodeType":"PragmaDirective","src":"32:24:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":45,"linearizedBaseContracts":[45],"name":"AggregatorV3Interface","nameLocation":"68:21:0","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":6,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"104:8:0","nodeType":"FunctionDefinition","parameters":{"id":2,"nodeType":"ParameterList","parameters":[],"src":"112:2:0"},"returnParameters":{"id":5,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6,"src":"138:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3,"name":"uint8","nodeType":"ElementaryTypeName","src":"138:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"137:7:0"},"scope":45,"src":"95:50:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":11,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"157:11:0","nodeType":"FunctionDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[],"src":"168:2:0"},"returnParameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11,"src":"194:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8,"name":"string","nodeType":"ElementaryTypeName","src":"194:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"193:15:0"},"scope":45,"src":"148:61:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":16,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"221:7:0","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"228:2:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16,"src":"254:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"253:9:0"},"scope":45,"src":"212:51:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":31,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"487:12:0","nodeType":"FunctionDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"mutability":"mutable","name":"_roundId","nameLocation":"507:8:0","nodeType":"VariableDeclaration","scope":31,"src":"500:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":17,"name":"uint80","nodeType":"ElementaryTypeName","src":"500:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"499:17:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"roundId","nameLocation":"566:7:0","nodeType":"VariableDeclaration","scope":31,"src":"559:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":20,"name":"uint80","nodeType":"ElementaryTypeName","src":"559:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":23,"mutability":"mutable","name":"answer","nameLocation":"588:6:0","nodeType":"VariableDeclaration","scope":31,"src":"581:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":22,"name":"int256","nodeType":"ElementaryTypeName","src":"581:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25,"mutability":"mutable","name":"startedAt","nameLocation":"610:9:0","nodeType":"VariableDeclaration","scope":31,"src":"602:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"updatedAt","nameLocation":"635:9:0","nodeType":"VariableDeclaration","scope":31,"src":"627:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29,"mutability":"mutable","name":"answeredInRound","nameLocation":"659:15:0","nodeType":"VariableDeclaration","scope":31,"src":"652:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":28,"name":"uint80","nodeType":"ElementaryTypeName","src":"652:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"551:129:0"},"scope":45,"src":"478:203:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":44,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"693:15:0","nodeType":"FunctionDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[],"src":"708:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"roundId","nameLocation":"760:7:0","nodeType":"VariableDeclaration","scope":44,"src":"753:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":33,"name":"uint80","nodeType":"ElementaryTypeName","src":"753:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":36,"mutability":"mutable","name":"answer","nameLocation":"782:6:0","nodeType":"VariableDeclaration","scope":44,"src":"775:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":35,"name":"int256","nodeType":"ElementaryTypeName","src":"775:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":38,"mutability":"mutable","name":"startedAt","nameLocation":"804:9:0","nodeType":"VariableDeclaration","scope":44,"src":"796:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37,"name":"uint256","nodeType":"ElementaryTypeName","src":"796:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":40,"mutability":"mutable","name":"updatedAt","nameLocation":"829:9:0","nodeType":"VariableDeclaration","scope":44,"src":"821:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42,"mutability":"mutable","name":"answeredInRound","nameLocation":"853:15:0","nodeType":"VariableDeclaration","scope":44,"src":"846:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":41,"name":"uint80","nodeType":"ElementaryTypeName","src":"846:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"745:129:0"},"scope":45,"src":"684:191:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":46,"src":"58:820:0","usedErrors":[]}],"src":"32:847:0"},"id":0},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2509],"Ownable":[158]},"id":159,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":47,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":48,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":159,"sourceUnit":2510,"src":"127:30:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":50,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":2509,"src":"683:7:1"},"id":51,"nodeType":"InheritanceSpecifier","src":"683:7:1"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":49,"nodeType":"StructuredDocumentation","src":"159:494:1","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":158,"linearizedBaseContracts":[158,2509],"name":"Ownable","nameLocation":"672:7:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":53,"mutability":"mutable","name":"_owner","nameLocation":"713:6:1","nodeType":"VariableDeclaration","scope":158,"src":"697:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":52,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":59,"name":"OwnershipTransferred","nameLocation":"732:20:1","nodeType":"EventDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:1","nodeType":"VariableDeclaration","scope":59,"src":"753:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":54,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":57,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:1","nodeType":"VariableDeclaration","scope":59,"src":"784:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:1"},"src":"726:84:1"},{"body":{"id":68,"nodeType":"Block","src":"926:49:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":64,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"955:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":63,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"936:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":67,"nodeType":"ExpressionStatement","src":"936:32:1"}]},"documentation":{"id":60,"nodeType":"StructuredDocumentation","src":"816:91:1","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":69,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":61,"nodeType":"ParameterList","parameters":[],"src":"923:2:1"},"returnParameters":{"id":62,"nodeType":"ParameterList","parameters":[],"src":"926:0:1"},"scope":158,"src":"912:63:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":76,"nodeType":"Block","src":"1084:41:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":72,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"1094:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":73,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":74,"nodeType":"ExpressionStatement","src":"1094:13:1"},{"id":75,"nodeType":"PlaceholderStatement","src":"1117:1:1"}]},"documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"981:77:1","text":" @dev Throws if called by any account other than the owner."},"id":77,"name":"onlyOwner","nameLocation":"1072:9:1","nodeType":"ModifierDefinition","parameters":{"id":71,"nodeType":"ParameterList","parameters":[],"src":"1081:2:1"},"src":"1063:62:1","virtual":false,"visibility":"internal"},{"body":{"id":85,"nodeType":"Block","src":"1256:30:1","statements":[{"expression":{"id":83,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"1273:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":82,"id":84,"nodeType":"Return","src":"1266:13:1"}]},"documentation":{"id":78,"nodeType":"StructuredDocumentation","src":"1131:65:1","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":86,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:1","nodeType":"FunctionDefinition","parameters":{"id":79,"nodeType":"ParameterList","parameters":[],"src":"1215:2:1"},"returnParameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":86,"src":"1247:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:1"},"scope":158,"src":"1201:85:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":99,"nodeType":"Block","src":"1404:85:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":91,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"1422:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":92,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":93,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"1433:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":94,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":96,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":90,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":97,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":98,"nodeType":"ExpressionStatement","src":"1414:68:1"}]},"documentation":{"id":87,"nodeType":"StructuredDocumentation","src":"1292:62:1","text":" @dev Throws if the sender is not the owner."},"id":100,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:1","nodeType":"FunctionDefinition","parameters":{"id":88,"nodeType":"ParameterList","parameters":[],"src":"1379:2:1"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"1404:0:1"},"scope":158,"src":"1359:130:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"1885:47:1","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:1","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":106,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"1895:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":112,"nodeType":"ExpressionStatement","src":"1895:30:1"}]},"documentation":{"id":101,"nodeType":"StructuredDocumentation","src":"1495:331:1","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":114,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"1875:9:1"},"nodeType":"ModifierInvocation","src":"1875:9:1"}],"name":"renounceOwnership","nameLocation":"1840:17:1","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[],"src":"1857:2:1"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"1885:0:1"},"scope":158,"src":"1831:101:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":136,"nodeType":"Block","src":"2151:128:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":123,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2169:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":124,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:1","typeDescriptions":{}}},"id":127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":122,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":131,"nodeType":"ExpressionStatement","src":"2161:73:1"},{"expression":{"arguments":[{"id":133,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2263:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":132,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2244:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":135,"nodeType":"ExpressionStatement","src":"2244:28:1"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"1938:138:1","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":137,"implemented":true,"kind":"function","modifiers":[{"id":120,"kind":"modifierInvocation","modifierName":{"id":119,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"2141:9:1"},"nodeType":"ModifierInvocation","src":"2141:9:1"}],"name":"transferOwnership","nameLocation":"2090:17:1","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:1","nodeType":"VariableDeclaration","scope":137,"src":"2108:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":116,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:1"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[],"src":"2151:0:1"},"scope":158,"src":"2081:198:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":156,"nodeType":"Block","src":"2496:124:1","statements":[{"assignments":[144],"declarations":[{"constant":false,"id":144,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:1","nodeType":"VariableDeclaration","scope":156,"src":"2506:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":146,"initialValue":{"id":145,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"2525:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:1"},{"expression":{"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":147,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"2541:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":148,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2550:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":150,"nodeType":"ExpressionStatement","src":"2541:17:1"},{"eventCall":{"arguments":[{"id":152,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"2594:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":153,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2604:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":151,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"2573:20:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":155,"nodeType":"EmitStatement","src":"2568:45:1"}]},"documentation":{"id":138,"nodeType":"StructuredDocumentation","src":"2285:143:1","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":157,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:1","nodeType":"FunctionDefinition","parameters":{"id":141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:1","nodeType":"VariableDeclaration","scope":157,"src":"2461:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":139,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:1"},"returnParameters":{"id":142,"nodeType":"ParameterList","parameters":[],"src":"2496:0:1"},"scope":158,"src":"2433:187:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":159,"src":"654:1968:1","usedErrors":[]}],"src":"102:2521:1"},"id":1},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2509],"ERC20":[744],"IERC20":[822],"IERC20Metadata":[847]},"id":745,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":160,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":161,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":745,"sourceUnit":823,"src":"130:22:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":162,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":745,"sourceUnit":848,"src":"153:41:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":163,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":745,"sourceUnit":2510,"src":"195:33:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":165,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":2509,"src":"1421:7:2"},"id":166,"nodeType":"InheritanceSpecifier","src":"1421:7:2"},{"baseName":{"id":167,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":822,"src":"1430:6:2"},"id":168,"nodeType":"InheritanceSpecifier","src":"1430:6:2"},{"baseName":{"id":169,"name":"IERC20Metadata","nodeType":"IdentifierPath","referencedDeclaration":847,"src":"1438:14:2"},"id":170,"nodeType":"InheritanceSpecifier","src":"1438:14:2"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":164,"nodeType":"StructuredDocumentation","src":"230:1172:2","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":744,"linearizedBaseContracts":[744,847,822,2509],"name":"ERC20","nameLocation":"1412:5:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":174,"mutability":"mutable","name":"_balances","nameLocation":"1495:9:2","nodeType":"VariableDeclaration","scope":744,"src":"1459:45:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":173,"keyType":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1467:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1459:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"1478:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":180,"mutability":"mutable","name":"_allowances","nameLocation":"1567:11:2","nodeType":"VariableDeclaration","scope":744,"src":"1511:67:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":179,"keyType":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1511:47:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":178,"keyType":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"1538:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1530:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":177,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":182,"mutability":"mutable","name":"_totalSupply","nameLocation":"1601:12:2","nodeType":"VariableDeclaration","scope":744,"src":"1585:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"1585:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":184,"mutability":"mutable","name":"_name","nameLocation":"1635:5:2","nodeType":"VariableDeclaration","scope":744,"src":"1620:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":183,"name":"string","nodeType":"ElementaryTypeName","src":"1620:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":186,"mutability":"mutable","name":"_symbol","nameLocation":"1661:7:2","nodeType":"VariableDeclaration","scope":744,"src":"1646:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":185,"name":"string","nodeType":"ElementaryTypeName","src":"1646:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":202,"nodeType":"Block","src":"2034:57:2","statements":[{"expression":{"id":196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":194,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"2044:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":195,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"2052:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2044:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":197,"nodeType":"ExpressionStatement","src":"2044:13:2"},{"expression":{"id":200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":198,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"2067:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":199,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"2077:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2067:17:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":201,"nodeType":"ExpressionStatement","src":"2067:17:2"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"1675:298:2","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":203,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"name_","nameLocation":"2004:5:2","nodeType":"VariableDeclaration","scope":203,"src":"1990:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":188,"name":"string","nodeType":"ElementaryTypeName","src":"1990:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"symbol_","nameLocation":"2025:7:2","nodeType":"VariableDeclaration","scope":203,"src":"2011:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":190,"name":"string","nodeType":"ElementaryTypeName","src":"2011:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1989:44:2"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[],"src":"2034:0:2"},"scope":744,"src":"1978:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[834],"body":{"id":212,"nodeType":"Block","src":"2225:29:2","statements":[{"expression":{"id":210,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"2242:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":209,"id":211,"nodeType":"Return","src":"2235:12:2"}]},"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"2097:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":213,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2165:4:2","nodeType":"FunctionDefinition","overrides":{"id":206,"nodeType":"OverrideSpecifier","overrides":[],"src":"2192:8:2"},"parameters":{"id":205,"nodeType":"ParameterList","parameters":[],"src":"2169:2:2"},"returnParameters":{"id":209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":213,"src":"2210:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":207,"name":"string","nodeType":"ElementaryTypeName","src":"2210:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2209:15:2"},"scope":744,"src":"2156:98:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[840],"body":{"id":222,"nodeType":"Block","src":"2438:31:2","statements":[{"expression":{"id":220,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"2455:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":219,"id":221,"nodeType":"Return","src":"2448:14:2"}]},"documentation":{"id":214,"nodeType":"StructuredDocumentation","src":"2260:102:2","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":223,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2376:6:2","nodeType":"FunctionDefinition","overrides":{"id":216,"nodeType":"OverrideSpecifier","overrides":[],"src":"2405:8:2"},"parameters":{"id":215,"nodeType":"ParameterList","parameters":[],"src":"2382:2:2"},"returnParameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":223,"src":"2423:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":217,"name":"string","nodeType":"ElementaryTypeName","src":"2423:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2422:15:2"},"scope":744,"src":"2367:102:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[846],"body":{"id":232,"nodeType":"Block","src":"3158:26:2","statements":[{"expression":{"hexValue":"3138","id":230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3175:2:2","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":229,"id":231,"nodeType":"Return","src":"3168:9:2"}]},"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"2475:613:2","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":233,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3102:8:2","nodeType":"FunctionDefinition","overrides":{"id":226,"nodeType":"OverrideSpecifier","overrides":[],"src":"3133:8:2"},"parameters":{"id":225,"nodeType":"ParameterList","parameters":[],"src":"3110:2:2"},"returnParameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":233,"src":"3151:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":227,"name":"uint8","nodeType":"ElementaryTypeName","src":"3151:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3150:7:2"},"scope":744,"src":"3093:91:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[771],"body":{"id":242,"nodeType":"Block","src":"3314:36:2","statements":[{"expression":{"id":240,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"3331:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":239,"id":241,"nodeType":"Return","src":"3324:19:2"}]},"documentation":{"id":234,"nodeType":"StructuredDocumentation","src":"3190:49:2","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":243,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3253:11:2","nodeType":"FunctionDefinition","overrides":{"id":236,"nodeType":"OverrideSpecifier","overrides":[],"src":"3287:8:2"},"parameters":{"id":235,"nodeType":"ParameterList","parameters":[],"src":"3264:2:2"},"returnParameters":{"id":239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":243,"src":"3305:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":237,"name":"uint256","nodeType":"ElementaryTypeName","src":"3305:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3304:9:2"},"scope":744,"src":"3244:106:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[779],"body":{"id":256,"nodeType":"Block","src":"3491:42:2","statements":[{"expression":{"baseExpression":{"id":252,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"3508:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":254,"indexExpression":{"id":253,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"3518:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3508:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":251,"id":255,"nodeType":"Return","src":"3501:25:2"}]},"documentation":{"id":244,"nodeType":"StructuredDocumentation","src":"3356:47:2","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":257,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3417:9:2","nodeType":"FunctionDefinition","overrides":{"id":248,"nodeType":"OverrideSpecifier","overrides":[],"src":"3464:8:2"},"parameters":{"id":247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"mutability":"mutable","name":"account","nameLocation":"3435:7:2","nodeType":"VariableDeclaration","scope":257,"src":"3427:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":245,"name":"address","nodeType":"ElementaryTypeName","src":"3427:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3426:17:2"},"returnParameters":{"id":251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":257,"src":"3482:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":249,"name":"uint256","nodeType":"ElementaryTypeName","src":"3482:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3481:9:2"},"scope":744,"src":"3408:125:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[789],"body":{"id":281,"nodeType":"Block","src":"3814:104:2","statements":[{"assignments":[269],"declarations":[{"constant":false,"id":269,"mutability":"mutable","name":"owner","nameLocation":"3832:5:2","nodeType":"VariableDeclaration","scope":281,"src":"3824:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"3824:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":272,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":270,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"3840:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3840:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3824:28:2"},{"expression":{"arguments":[{"id":274,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"3872:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":275,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"3879:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":276,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"3883:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":273,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"3862:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3862:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":278,"nodeType":"ExpressionStatement","src":"3862:28:2"},{"expression":{"hexValue":"74727565","id":279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3907:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":267,"id":280,"nodeType":"Return","src":"3900:11:2"}]},"documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"3539:185:2","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":282,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3738:8:2","nodeType":"FunctionDefinition","overrides":{"id":264,"nodeType":"OverrideSpecifier","overrides":[],"src":"3790:8:2"},"parameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"mutability":"mutable","name":"to","nameLocation":"3755:2:2","nodeType":"VariableDeclaration","scope":282,"src":"3747:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":259,"name":"address","nodeType":"ElementaryTypeName","src":"3747:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":262,"mutability":"mutable","name":"amount","nameLocation":"3767:6:2","nodeType":"VariableDeclaration","scope":282,"src":"3759:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":261,"name":"uint256","nodeType":"ElementaryTypeName","src":"3759:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3746:28:2"},"returnParameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":282,"src":"3808:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":265,"name":"bool","nodeType":"ElementaryTypeName","src":"3808:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3807:6:2"},"scope":744,"src":"3729:189:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[799],"body":{"id":299,"nodeType":"Block","src":"4074:51:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":293,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"4091:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":295,"indexExpression":{"id":294,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"4103:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4091:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":297,"indexExpression":{"id":296,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"4110:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4091:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":292,"id":298,"nodeType":"Return","src":"4084:34:2"}]},"documentation":{"id":283,"nodeType":"StructuredDocumentation","src":"3924:47:2","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":300,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3985:9:2","nodeType":"FunctionDefinition","overrides":{"id":289,"nodeType":"OverrideSpecifier","overrides":[],"src":"4047:8:2"},"parameters":{"id":288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"mutability":"mutable","name":"owner","nameLocation":"4003:5:2","nodeType":"VariableDeclaration","scope":300,"src":"3995:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":284,"name":"address","nodeType":"ElementaryTypeName","src":"3995:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":287,"mutability":"mutable","name":"spender","nameLocation":"4018:7:2","nodeType":"VariableDeclaration","scope":300,"src":"4010:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"4010:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3994:32:2"},"returnParameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":300,"src":"4065:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":290,"name":"uint256","nodeType":"ElementaryTypeName","src":"4065:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4064:9:2"},"scope":744,"src":"3976:149:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[809],"body":{"id":324,"nodeType":"Block","src":"4522:108:2","statements":[{"assignments":[312],"declarations":[{"constant":false,"id":312,"mutability":"mutable","name":"owner","nameLocation":"4540:5:2","nodeType":"VariableDeclaration","scope":324,"src":"4532:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":311,"name":"address","nodeType":"ElementaryTypeName","src":"4532:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":315,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":313,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"4548:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4548:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4532:28:2"},{"expression":{"arguments":[{"id":317,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"4579:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":318,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"4586:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":319,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"4595:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":316,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"4570:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4570:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":321,"nodeType":"ExpressionStatement","src":"4570:32:2"},{"expression":{"hexValue":"74727565","id":322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4619:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":310,"id":323,"nodeType":"Return","src":"4612:11:2"}]},"documentation":{"id":301,"nodeType":"StructuredDocumentation","src":"4131:297:2","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":325,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4442:7:2","nodeType":"FunctionDefinition","overrides":{"id":307,"nodeType":"OverrideSpecifier","overrides":[],"src":"4498:8:2"},"parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":303,"mutability":"mutable","name":"spender","nameLocation":"4458:7:2","nodeType":"VariableDeclaration","scope":325,"src":"4450:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":302,"name":"address","nodeType":"ElementaryTypeName","src":"4450:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":305,"mutability":"mutable","name":"amount","nameLocation":"4475:6:2","nodeType":"VariableDeclaration","scope":325,"src":"4467:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":304,"name":"uint256","nodeType":"ElementaryTypeName","src":"4467:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4449:33:2"},"returnParameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":325,"src":"4516:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":308,"name":"bool","nodeType":"ElementaryTypeName","src":"4516:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4515:6:2"},"scope":744,"src":"4433:197:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[821],"body":{"id":357,"nodeType":"Block","src":"5325:153:2","statements":[{"assignments":[339],"declarations":[{"constant":false,"id":339,"mutability":"mutable","name":"spender","nameLocation":"5343:7:2","nodeType":"VariableDeclaration","scope":357,"src":"5335:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"5335:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":342,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":340,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"5353:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5353:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5335:30:2"},{"expression":{"arguments":[{"id":344,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"5391:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":345,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5397:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":346,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"5406:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":343,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"5375:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5375:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":348,"nodeType":"ExpressionStatement","src":"5375:38:2"},{"expression":{"arguments":[{"id":350,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"5433:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":351,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"5439:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":352,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"5443:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":349,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"5423:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5423:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"5423:27:2"},{"expression":{"hexValue":"74727565","id":355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5467:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":337,"id":356,"nodeType":"Return","src":"5460:11:2"}]},"documentation":{"id":326,"nodeType":"StructuredDocumentation","src":"4636:551:2","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":358,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5201:12:2","nodeType":"FunctionDefinition","overrides":{"id":334,"nodeType":"OverrideSpecifier","overrides":[],"src":"5301:8:2"},"parameters":{"id":333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"mutability":"mutable","name":"from","nameLocation":"5231:4:2","nodeType":"VariableDeclaration","scope":358,"src":"5223:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":327,"name":"address","nodeType":"ElementaryTypeName","src":"5223:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":330,"mutability":"mutable","name":"to","nameLocation":"5253:2:2","nodeType":"VariableDeclaration","scope":358,"src":"5245:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"5245:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":332,"mutability":"mutable","name":"amount","nameLocation":"5273:6:2","nodeType":"VariableDeclaration","scope":358,"src":"5265:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":331,"name":"uint256","nodeType":"ElementaryTypeName","src":"5265:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5213:72:2"},"returnParameters":{"id":337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":358,"src":"5319:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":335,"name":"bool","nodeType":"ElementaryTypeName","src":"5319:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5318:6:2"},"scope":744,"src":"5192:286:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":386,"nodeType":"Block","src":"5967:140:2","statements":[{"assignments":[369],"declarations":[{"constant":false,"id":369,"mutability":"mutable","name":"owner","nameLocation":"5985:5:2","nodeType":"VariableDeclaration","scope":386,"src":"5977:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":368,"name":"address","nodeType":"ElementaryTypeName","src":"5977:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":372,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":370,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"5993:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5993:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5977:28:2"},{"expression":{"arguments":[{"id":374,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"6024:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":375,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"6031:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":377,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"6050:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":378,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"6057:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":376,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"6040:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6040:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":380,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"6068:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":373,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"6015:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6015:64:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":383,"nodeType":"ExpressionStatement","src":"6015:64:2"},{"expression":{"hexValue":"74727565","id":384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6096:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":367,"id":385,"nodeType":"Return","src":"6089:11:2"}]},"documentation":{"id":359,"nodeType":"StructuredDocumentation","src":"5484:384:2","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":387,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5882:17:2","nodeType":"FunctionDefinition","parameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"spender","nameLocation":"5908:7:2","nodeType":"VariableDeclaration","scope":387,"src":"5900:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"5900:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":363,"mutability":"mutable","name":"addedValue","nameLocation":"5925:10:2","nodeType":"VariableDeclaration","scope":387,"src":"5917:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":362,"name":"uint256","nodeType":"ElementaryTypeName","src":"5917:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5899:37:2"},"returnParameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":387,"src":"5961:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":365,"name":"bool","nodeType":"ElementaryTypeName","src":"5961:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5960:6:2"},"scope":744,"src":"5873:234:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":427,"nodeType":"Block","src":"6693:328:2","statements":[{"assignments":[398],"declarations":[{"constant":false,"id":398,"mutability":"mutable","name":"owner","nameLocation":"6711:5:2","nodeType":"VariableDeclaration","scope":427,"src":"6703:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":397,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":401,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":399,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"6719:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6719:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6703:28:2"},{"assignments":[403],"declarations":[{"constant":false,"id":403,"mutability":"mutable","name":"currentAllowance","nameLocation":"6749:16:2","nodeType":"VariableDeclaration","scope":427,"src":"6741:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"6741:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":408,"initialValue":{"arguments":[{"id":405,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"6778:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":406,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"6785:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":404,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"6768:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6768:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6741:52:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":410,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6811:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":411,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"6831:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6811:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6848:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":409,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6803:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6803:85:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":415,"nodeType":"ExpressionStatement","src":"6803:85:2"},{"id":424,"nodeType":"UncheckedBlock","src":"6898:95:2","statements":[{"expression":{"arguments":[{"id":417,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"6931:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":418,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"6938:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":419,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6947:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":420,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"6966:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6947:34:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":416,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"6922:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6922:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":423,"nodeType":"ExpressionStatement","src":"6922:60:2"}]},{"expression":{"hexValue":"74727565","id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7010:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":396,"id":426,"nodeType":"Return","src":"7003:11:2"}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"6113:476:2","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":428,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6603:17:2","nodeType":"FunctionDefinition","parameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"spender","nameLocation":"6629:7:2","nodeType":"VariableDeclaration","scope":428,"src":"6621:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"6621:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"subtractedValue","nameLocation":"6646:15:2","nodeType":"VariableDeclaration","scope":428,"src":"6638:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"6638:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6620:42:2"},"returnParameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":428,"src":"6687:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":394,"name":"bool","nodeType":"ElementaryTypeName","src":"6687:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6686:6:2"},"scope":744,"src":"6594:427:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":504,"nodeType":"Block","src":"7583:543:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":439,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"7601:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7617:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7609:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":440,"name":"address","nodeType":"ElementaryTypeName","src":"7609:7:2","typeDescriptions":{}}},"id":443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7609:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7601:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7621:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":438,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7593:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7593:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":447,"nodeType":"ExpressionStatement","src":"7593:68:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":449,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"7679:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7693:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7685:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":450,"name":"address","nodeType":"ElementaryTypeName","src":"7685:7:2","typeDescriptions":{}}},"id":453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7685:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7679:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7697:37:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":448,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7671:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7671:64:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":457,"nodeType":"ExpressionStatement","src":"7671:64:2"},{"expression":{"arguments":[{"id":459,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"7767:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":460,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"7773:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":461,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"7777:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":458,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"7746:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7746:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":463,"nodeType":"ExpressionStatement","src":"7746:38:2"},{"assignments":[465],"declarations":[{"constant":false,"id":465,"mutability":"mutable","name":"fromBalance","nameLocation":"7803:11:2","nodeType":"VariableDeclaration","scope":504,"src":"7795:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":464,"name":"uint256","nodeType":"ElementaryTypeName","src":"7795:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":469,"initialValue":{"baseExpression":{"id":466,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"7817:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":468,"indexExpression":{"id":467,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"7827:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7817:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7795:37:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":471,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"7850:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":472,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"7865:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7873:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":470,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7842:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7842:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":476,"nodeType":"ExpressionStatement","src":"7842:72:2"},{"id":485,"nodeType":"UncheckedBlock","src":"7924:73:2","statements":[{"expression":{"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":477,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"7948:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":479,"indexExpression":{"id":478,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"7958:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7948:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":480,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"7966:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":481,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"7980:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7966:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":484,"nodeType":"ExpressionStatement","src":"7948:38:2"}]},{"expression":{"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":486,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"8006:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":488,"indexExpression":{"id":487,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"8016:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8006:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":489,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"8023:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8006:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":491,"nodeType":"ExpressionStatement","src":"8006:23:2"},{"eventCall":{"arguments":[{"id":493,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"8054:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":494,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"8060:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":495,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"8064:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":492,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"8045:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8045:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":497,"nodeType":"EmitStatement","src":"8040:31:2"},{"expression":{"arguments":[{"id":499,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"8102:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":500,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"8108:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":501,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"8112:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":498,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"8082:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8082:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"8082:37:2"}]},"documentation":{"id":429,"nodeType":"StructuredDocumentation","src":"7027:443:2","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":505,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7484:9:2","nodeType":"FunctionDefinition","parameters":{"id":436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"from","nameLocation":"7511:4:2","nodeType":"VariableDeclaration","scope":505,"src":"7503:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":430,"name":"address","nodeType":"ElementaryTypeName","src":"7503:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":433,"mutability":"mutable","name":"to","nameLocation":"7533:2:2","nodeType":"VariableDeclaration","scope":505,"src":"7525:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":432,"name":"address","nodeType":"ElementaryTypeName","src":"7525:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":435,"mutability":"mutable","name":"amount","nameLocation":"7553:6:2","nodeType":"VariableDeclaration","scope":505,"src":"7545:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":434,"name":"uint256","nodeType":"ElementaryTypeName","src":"7545:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7493:72:2"},"returnParameters":{"id":437,"nodeType":"ParameterList","parameters":[],"src":"7583:0:2"},"scope":744,"src":"7475:651:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":560,"nodeType":"Block","src":"8467:324:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":514,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"8485:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8504:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8496:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":515,"name":"address","nodeType":"ElementaryTypeName","src":"8496:7:2","typeDescriptions":{}}},"id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8496:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8485:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8508:33:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":513,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8477:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8477:65:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":522,"nodeType":"ExpressionStatement","src":"8477:65:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8582:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8574:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"8574:7:2","typeDescriptions":{}}},"id":527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8574:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":528,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"8586:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":529,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"8595:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":523,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"8553:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8553:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":531,"nodeType":"ExpressionStatement","src":"8553:49:2"},{"expression":{"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":532,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"8613:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":533,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"8629:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":535,"nodeType":"ExpressionStatement","src":"8613:22:2"},{"expression":{"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":536,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"8645:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":538,"indexExpression":{"id":537,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"8655:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8645:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":539,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"8667:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8645:28:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":541,"nodeType":"ExpressionStatement","src":"8645:28:2"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8705:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8697:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":543,"name":"address","nodeType":"ElementaryTypeName","src":"8697:7:2","typeDescriptions":{}}},"id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8697:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":547,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"8709:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":548,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"8718:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":542,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"8688:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8688:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":550,"nodeType":"EmitStatement","src":"8683:42:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8764:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8756:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":552,"name":"address","nodeType":"ElementaryTypeName","src":"8756:7:2","typeDescriptions":{}}},"id":555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8756:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":556,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"8768:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":557,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"8777:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":551,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"8736:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8736:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":559,"nodeType":"ExpressionStatement","src":"8736:48:2"}]},"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"8132:265:2","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":561,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8411:5:2","nodeType":"FunctionDefinition","parameters":{"id":511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"account","nameLocation":"8425:7:2","nodeType":"VariableDeclaration","scope":561,"src":"8417:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"8417:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":510,"mutability":"mutable","name":"amount","nameLocation":"8442:6:2","nodeType":"VariableDeclaration","scope":561,"src":"8434:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":509,"name":"uint256","nodeType":"ElementaryTypeName","src":"8434:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8416:33:2"},"returnParameters":{"id":512,"nodeType":"ParameterList","parameters":[],"src":"8467:0:2"},"scope":744,"src":"8402:389:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":632,"nodeType":"Block","src":"9176:511:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":570,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"9194:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9213:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9205:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":571,"name":"address","nodeType":"ElementaryTypeName","src":"9205:7:2","typeDescriptions":{}}},"id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9205:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9194:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9217:35:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":569,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9186:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9186:67:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":578,"nodeType":"ExpressionStatement","src":"9186:67:2"},{"expression":{"arguments":[{"id":580,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"9285:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9302:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9294:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":581,"name":"address","nodeType":"ElementaryTypeName","src":"9294:7:2","typeDescriptions":{}}},"id":584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9294:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":585,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"9306:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":579,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"9264:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9264:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":587,"nodeType":"ExpressionStatement","src":"9264:49:2"},{"assignments":[589],"declarations":[{"constant":false,"id":589,"mutability":"mutable","name":"accountBalance","nameLocation":"9332:14:2","nodeType":"VariableDeclaration","scope":632,"src":"9324:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":588,"name":"uint256","nodeType":"ElementaryTypeName","src":"9324:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":593,"initialValue":{"baseExpression":{"id":590,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"9349:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":592,"indexExpression":{"id":591,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"9359:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9349:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9324:43:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":595,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"9385:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":596,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"9403:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9385:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9411:36:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":594,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9377:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9377:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":600,"nodeType":"ExpressionStatement","src":"9377:71:2"},{"id":609,"nodeType":"UncheckedBlock","src":"9458:79:2","statements":[{"expression":{"id":607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":601,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"9482:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":603,"indexExpression":{"id":602,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"9492:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9482:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":604,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"9503:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":605,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"9520:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9503:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9482:44:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":608,"nodeType":"ExpressionStatement","src":"9482:44:2"}]},{"expression":{"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":610,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"9546:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":611,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"9562:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9546:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":613,"nodeType":"ExpressionStatement","src":"9546:22:2"},{"eventCall":{"arguments":[{"id":615,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"9593:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9610:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9602:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":616,"name":"address","nodeType":"ElementaryTypeName","src":"9602:7:2","typeDescriptions":{}}},"id":619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9602:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":620,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"9614:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":614,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"9584:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9584:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":622,"nodeType":"EmitStatement","src":"9579:42:2"},{"expression":{"arguments":[{"id":624,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"9652:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9669:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9661:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"9661:7:2","typeDescriptions":{}}},"id":628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9661:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":629,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"9673:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":623,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"9632:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9632:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":631,"nodeType":"ExpressionStatement","src":"9632:48:2"}]},"documentation":{"id":562,"nodeType":"StructuredDocumentation","src":"8797:309:2","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":633,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9120:5:2","nodeType":"FunctionDefinition","parameters":{"id":567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"mutability":"mutable","name":"account","nameLocation":"9134:7:2","nodeType":"VariableDeclaration","scope":633,"src":"9126:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":563,"name":"address","nodeType":"ElementaryTypeName","src":"9126:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":566,"mutability":"mutable","name":"amount","nameLocation":"9151:6:2","nodeType":"VariableDeclaration","scope":633,"src":"9143:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":565,"name":"uint256","nodeType":"ElementaryTypeName","src":"9143:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9125:33:2"},"returnParameters":{"id":568,"nodeType":"ParameterList","parameters":[],"src":"9176:0:2"},"scope":744,"src":"9111:576:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":677,"nodeType":"Block","src":"10223:257:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":644,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"10241:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10258:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10250:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"10250:7:2","typeDescriptions":{}}},"id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10250:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10241:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10262:38:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":643,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10233:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10233:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":652,"nodeType":"ExpressionStatement","src":"10233:68:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":654,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"10319:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10338:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10330:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"10330:7:2","typeDescriptions":{}}},"id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10330:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10319:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10342:36:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":653,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10311:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10311:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"ExpressionStatement","src":"10311:68:2"},{"expression":{"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":663,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"10390:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":666,"indexExpression":{"id":664,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"10402:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10390:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":667,"indexExpression":{"id":665,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"10409:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10390:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":668,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"10420:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10390:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":670,"nodeType":"ExpressionStatement","src":"10390:36:2"},{"eventCall":{"arguments":[{"id":672,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"10450:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":673,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"10457:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":674,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"10466:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":671,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"10441:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10441:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":676,"nodeType":"EmitStatement","src":"10436:37:2"}]},"documentation":{"id":634,"nodeType":"StructuredDocumentation","src":"9693:412:2","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":678,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10119:8:2","nodeType":"FunctionDefinition","parameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"owner","nameLocation":"10145:5:2","nodeType":"VariableDeclaration","scope":678,"src":"10137:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":638,"mutability":"mutable","name":"spender","nameLocation":"10168:7:2","nodeType":"VariableDeclaration","scope":678,"src":"10160:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"10160:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":640,"mutability":"mutable","name":"amount","nameLocation":"10193:6:2","nodeType":"VariableDeclaration","scope":678,"src":"10185:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":639,"name":"uint256","nodeType":"ElementaryTypeName","src":"10185:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10127:78:2"},"returnParameters":{"id":642,"nodeType":"ParameterList","parameters":[],"src":"10223:0:2"},"scope":744,"src":"10110:370:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":720,"nodeType":"Block","src":"10881:321:2","statements":[{"assignments":[689],"declarations":[{"constant":false,"id":689,"mutability":"mutable","name":"currentAllowance","nameLocation":"10899:16:2","nodeType":"VariableDeclaration","scope":720,"src":"10891:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":688,"name":"uint256","nodeType":"ElementaryTypeName","src":"10891:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":694,"initialValue":{"arguments":[{"id":691,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"10928:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":692,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"10935:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":690,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"10918:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10918:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10891:52:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":695,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"10957:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10982:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":697,"name":"uint256","nodeType":"ElementaryTypeName","src":"10982:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":696,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10977:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10977:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10977:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10957:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":719,"nodeType":"IfStatement","src":"10953:243:2","trueBody":{"id":718,"nodeType":"Block","src":"10996:200:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":703,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"11018:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":704,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"11038:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11018:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11046:31:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":702,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11010:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11010:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":708,"nodeType":"ExpressionStatement","src":"11010:68:2"},{"id":717,"nodeType":"UncheckedBlock","src":"11092:94:2","statements":[{"expression":{"arguments":[{"id":710,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"11129:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":711,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"11136:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":712,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"11145:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":713,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"11164:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11145:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":709,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"11120:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11120:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":716,"nodeType":"ExpressionStatement","src":"11120:51:2"}]}]}}]},"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"10486:270:2","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":721,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10770:15:2","nodeType":"FunctionDefinition","parameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"owner","nameLocation":"10803:5:2","nodeType":"VariableDeclaration","scope":721,"src":"10795:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"10795:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":683,"mutability":"mutable","name":"spender","nameLocation":"10826:7:2","nodeType":"VariableDeclaration","scope":721,"src":"10818:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":682,"name":"address","nodeType":"ElementaryTypeName","src":"10818:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":685,"mutability":"mutable","name":"amount","nameLocation":"10851:6:2","nodeType":"VariableDeclaration","scope":721,"src":"10843:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":684,"name":"uint256","nodeType":"ElementaryTypeName","src":"10843:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10785:78:2"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"10881:0:2"},"scope":744,"src":"10761:441:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":731,"nodeType":"Block","src":"11905:2:2","statements":[]},"documentation":{"id":722,"nodeType":"StructuredDocumentation","src":"11208:573:2","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":732,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"11795:20:2","nodeType":"FunctionDefinition","parameters":{"id":729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"from","nameLocation":"11833:4:2","nodeType":"VariableDeclaration","scope":732,"src":"11825:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"11825:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":726,"mutability":"mutable","name":"to","nameLocation":"11855:2:2","nodeType":"VariableDeclaration","scope":732,"src":"11847:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":725,"name":"address","nodeType":"ElementaryTypeName","src":"11847:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":728,"mutability":"mutable","name":"amount","nameLocation":"11875:6:2","nodeType":"VariableDeclaration","scope":732,"src":"11867:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":727,"name":"uint256","nodeType":"ElementaryTypeName","src":"11867:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11815:72:2"},"returnParameters":{"id":730,"nodeType":"ParameterList","parameters":[],"src":"11905:0:2"},"scope":744,"src":"11786:121:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":742,"nodeType":"Block","src":"12613:2:2","statements":[]},"documentation":{"id":733,"nodeType":"StructuredDocumentation","src":"11913:577:2","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":743,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12504:19:2","nodeType":"FunctionDefinition","parameters":{"id":740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"mutability":"mutable","name":"from","nameLocation":"12541:4:2","nodeType":"VariableDeclaration","scope":743,"src":"12533:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"12533:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":737,"mutability":"mutable","name":"to","nameLocation":"12563:2:2","nodeType":"VariableDeclaration","scope":743,"src":"12555:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"12555:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":739,"mutability":"mutable","name":"amount","nameLocation":"12583:6:2","nodeType":"VariableDeclaration","scope":743,"src":"12575:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":738,"name":"uint256","nodeType":"ElementaryTypeName","src":"12575:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12523:72:2"},"returnParameters":{"id":741,"nodeType":"ParameterList","parameters":[],"src":"12613:0:2"},"scope":744,"src":"12495:120:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":745,"src":"1403:11214:2","usedErrors":[]}],"src":"105:12513:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[822]},"id":823,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":746,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:3"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":747,"nodeType":"StructuredDocumentation","src":"131:70:3","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":822,"linearizedBaseContracts":[822],"name":"IERC20","nameLocation":"212:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":748,"nodeType":"StructuredDocumentation","src":"225:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":756,"name":"Transfer","nameLocation":"394:8:3","nodeType":"EventDefinition","parameters":{"id":755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:3","nodeType":"VariableDeclaration","scope":756,"src":"403:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":749,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":752,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:3","nodeType":"VariableDeclaration","scope":756,"src":"425:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":751,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":754,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:3","nodeType":"VariableDeclaration","scope":756,"src":"445:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":753,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:3"},"src":"388:72:3"},{"anonymous":false,"documentation":{"id":757,"nodeType":"StructuredDocumentation","src":"466:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":765,"name":"Approval","nameLocation":"625:8:3","nodeType":"EventDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":759,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:3","nodeType":"VariableDeclaration","scope":765,"src":"634:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":758,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":761,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:3","nodeType":"VariableDeclaration","scope":765,"src":"657:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":763,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:3","nodeType":"VariableDeclaration","scope":765,"src":"682:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":762,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:3"},"src":"619:78:3"},{"documentation":{"id":766,"nodeType":"StructuredDocumentation","src":"703:66:3","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":771,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:3","nodeType":"FunctionDefinition","parameters":{"id":767,"nodeType":"ParameterList","parameters":[],"src":"794:2:3"},"returnParameters":{"id":770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":771,"src":"820:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:3"},"scope":822,"src":"774:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":772,"nodeType":"StructuredDocumentation","src":"835:72:3","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":779,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:3","nodeType":"FunctionDefinition","parameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"account","nameLocation":"939:7:3","nodeType":"VariableDeclaration","scope":779,"src":"931:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":773,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:3"},"returnParameters":{"id":778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":779,"src":"971:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":776,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:3"},"scope":822,"src":"912:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":780,"nodeType":"StructuredDocumentation","src":"986:202:3","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":789,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:3","nodeType":"FunctionDefinition","parameters":{"id":785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"to","nameLocation":"1219:2:3","nodeType":"VariableDeclaration","scope":789,"src":"1211:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":781,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"amount","nameLocation":"1231:6:3","nodeType":"VariableDeclaration","scope":789,"src":"1223:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":783,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:3"},"returnParameters":{"id":788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":789,"src":"1257:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":786,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:3"},"scope":822,"src":"1193:70:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":790,"nodeType":"StructuredDocumentation","src":"1269:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":799,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:3","nodeType":"FunctionDefinition","parameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"mutability":"mutable","name":"owner","nameLocation":"1565:5:3","nodeType":"VariableDeclaration","scope":799,"src":"1557:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":791,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":794,"mutability":"mutable","name":"spender","nameLocation":"1580:7:3","nodeType":"VariableDeclaration","scope":799,"src":"1572:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:3"},"returnParameters":{"id":798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":799,"src":"1612:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":796,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:3"},"scope":822,"src":"1538:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":800,"nodeType":"StructuredDocumentation","src":"1627:642:3","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":809,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:3","nodeType":"FunctionDefinition","parameters":{"id":805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":802,"mutability":"mutable","name":"spender","nameLocation":"2299:7:3","nodeType":"VariableDeclaration","scope":809,"src":"2291:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":801,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":804,"mutability":"mutable","name":"amount","nameLocation":"2316:6:3","nodeType":"VariableDeclaration","scope":809,"src":"2308:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":803,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:3"},"returnParameters":{"id":808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":809,"src":"2342:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":806,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:3"},"scope":822,"src":"2274:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":810,"nodeType":"StructuredDocumentation","src":"2354:287:3","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":821,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:3","nodeType":"FunctionDefinition","parameters":{"id":817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"from","nameLocation":"2685:4:3","nodeType":"VariableDeclaration","scope":821,"src":"2677:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":811,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":814,"mutability":"mutable","name":"to","nameLocation":"2707:2:3","nodeType":"VariableDeclaration","scope":821,"src":"2699:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":816,"mutability":"mutable","name":"amount","nameLocation":"2727:6:3","nodeType":"VariableDeclaration","scope":821,"src":"2719:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":815,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:3"},"returnParameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":821,"src":"2758:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":818,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:3"},"scope":822,"src":"2646:118:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":823,"src":"202:2564:3","usedErrors":[]}],"src":"106:2661:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[822],"IERC20Metadata":[847]},"id":848,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":824,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":825,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":848,"sourceUnit":823,"src":"135:23:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":827,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":822,"src":"305:6:4"},"id":828,"nodeType":"InheritanceSpecifier","src":"305:6:4"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":826,"nodeType":"StructuredDocumentation","src":"160:116:4","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":847,"linearizedBaseContracts":[847,822],"name":"IERC20Metadata","nameLocation":"287:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":829,"nodeType":"StructuredDocumentation","src":"318:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":834,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:4","nodeType":"FunctionDefinition","parameters":{"id":830,"nodeType":"ParameterList","parameters":[],"src":"390:2:4"},"returnParameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":834,"src":"416:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":831,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:4"},"scope":847,"src":"377:54:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"437:56:4","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":840,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:4","nodeType":"FunctionDefinition","parameters":{"id":836,"nodeType":"ParameterList","parameters":[],"src":"513:2:4"},"returnParameters":{"id":839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":840,"src":"539:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":837,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:4"},"scope":847,"src":"498:56:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":841,"nodeType":"StructuredDocumentation","src":"560:65:4","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":846,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:4","nodeType":"FunctionDefinition","parameters":{"id":842,"nodeType":"ParameterList","parameters":[],"src":"647:2:4"},"returnParameters":{"id":845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":846,"src":"673:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":843,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:4"},"scope":847,"src":"630:50:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":848,"src":"277:405:4","usedErrors":[]}],"src":"110:573:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[883]},"id":884,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":849,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:5"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":850,"nodeType":"StructuredDocumentation","src":"139:480:5","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":883,"linearizedBaseContracts":[883],"name":"IERC20Permit","nameLocation":"630:12:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":851,"nodeType":"StructuredDocumentation","src":"649:792:5","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":868,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1455:6:5","nodeType":"FunctionDefinition","parameters":{"id":866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":853,"mutability":"mutable","name":"owner","nameLocation":"1479:5:5","nodeType":"VariableDeclaration","scope":868,"src":"1471:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":852,"name":"address","nodeType":"ElementaryTypeName","src":"1471:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":855,"mutability":"mutable","name":"spender","nameLocation":"1502:7:5","nodeType":"VariableDeclaration","scope":868,"src":"1494:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":854,"name":"address","nodeType":"ElementaryTypeName","src":"1494:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":857,"mutability":"mutable","name":"value","nameLocation":"1527:5:5","nodeType":"VariableDeclaration","scope":868,"src":"1519:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"1519:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"deadline","nameLocation":"1550:8:5","nodeType":"VariableDeclaration","scope":868,"src":"1542:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":861,"mutability":"mutable","name":"v","nameLocation":"1574:1:5","nodeType":"VariableDeclaration","scope":868,"src":"1568:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":860,"name":"uint8","nodeType":"ElementaryTypeName","src":"1568:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":863,"mutability":"mutable","name":"r","nameLocation":"1593:1:5","nodeType":"VariableDeclaration","scope":868,"src":"1585:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":862,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1585:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":865,"mutability":"mutable","name":"s","nameLocation":"1612:1:5","nodeType":"VariableDeclaration","scope":868,"src":"1604:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":864,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1604:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1461:158:5"},"returnParameters":{"id":867,"nodeType":"ParameterList","parameters":[],"src":"1628:0:5"},"scope":883,"src":"1446:183:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":869,"nodeType":"StructuredDocumentation","src":"1635:294:5","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":876,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1943:6:5","nodeType":"FunctionDefinition","parameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":871,"mutability":"mutable","name":"owner","nameLocation":"1958:5:5","nodeType":"VariableDeclaration","scope":876,"src":"1950:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":870,"name":"address","nodeType":"ElementaryTypeName","src":"1950:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1949:15:5"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":876,"src":"1988:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":873,"name":"uint256","nodeType":"ElementaryTypeName","src":"1988:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1987:9:5"},"scope":883,"src":"1934:63:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":877,"nodeType":"StructuredDocumentation","src":"2003:128:5","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":882,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2198:16:5","nodeType":"FunctionDefinition","parameters":{"id":878,"nodeType":"ParameterList","parameters":[],"src":"2214:2:5"},"returnParameters":{"id":881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":882,"src":"2240:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":879,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2240:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2239:9:5"},"scope":883,"src":"2189:60:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":884,"src":"620:1631:5","usedErrors":[]}],"src":"114:2138:5"},"id":5},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[2487],"IERC20":[822],"IERC20Permit":[883],"SafeERC20":[1164]},"id":1165,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":885,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":886,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1165,"sourceUnit":823,"src":"140:23:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","file":"../extensions/draft-IERC20Permit.sol","id":887,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1165,"sourceUnit":884,"src":"164:46:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":888,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1165,"sourceUnit":2488,"src":"211:36:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":889,"nodeType":"StructuredDocumentation","src":"249:457:6","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1164,"linearizedBaseContracts":[1164],"name":"SafeERC20","nameLocation":"715:9:6","nodeType":"ContractDefinition","nodes":[{"id":892,"libraryName":{"id":890,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":2487,"src":"737:7:6"},"nodeType":"UsingForDirective","src":"731:26:6","typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"749:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":914,"nodeType":"Block","src":"865:103:6","statements":[{"expression":{"arguments":[{"id":903,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"895:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":906,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"925:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":789,"src":"925:14:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"925:23:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":909,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"950:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"954:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":904,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"902:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"902:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"902:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":902,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"875:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$822_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"875:86:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":913,"nodeType":"ExpressionStatement","src":"875:86:6"}]},"id":915,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"772:12:6","nodeType":"FunctionDefinition","parameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":895,"mutability":"mutable","name":"token","nameLocation":"801:5:6","nodeType":"VariableDeclaration","scope":915,"src":"794:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"},"typeName":{"id":894,"nodeType":"UserDefinedTypeName","pathNode":{"id":893,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":822,"src":"794:6:6"},"referencedDeclaration":822,"src":"794:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":897,"mutability":"mutable","name":"to","nameLocation":"824:2:6","nodeType":"VariableDeclaration","scope":915,"src":"816:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":896,"name":"address","nodeType":"ElementaryTypeName","src":"816:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":899,"mutability":"mutable","name":"value","nameLocation":"844:5:6","nodeType":"VariableDeclaration","scope":915,"src":"836:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":898,"name":"uint256","nodeType":"ElementaryTypeName","src":"836:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"784:71:6"},"returnParameters":{"id":901,"nodeType":"ParameterList","parameters":[],"src":"865:0:6"},"scope":1164,"src":"763:205:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":940,"nodeType":"Block","src":"1102:113:6","statements":[{"expression":{"arguments":[{"id":928,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"1132:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":931,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"1162:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":821,"src":"1162:18:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1162:27:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":934,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"1191:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":935,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"1197:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"1201:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":929,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1139:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1139:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1139:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":927,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"1112:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$822_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1112:96:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":939,"nodeType":"ExpressionStatement","src":"1112:96:6"}]},"id":941,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"983:16:6","nodeType":"FunctionDefinition","parameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"mutability":"mutable","name":"token","nameLocation":"1016:5:6","nodeType":"VariableDeclaration","scope":941,"src":"1009:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"},"typeName":{"id":917,"nodeType":"UserDefinedTypeName","pathNode":{"id":916,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":822,"src":"1009:6:6"},"referencedDeclaration":822,"src":"1009:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":920,"mutability":"mutable","name":"from","nameLocation":"1039:4:6","nodeType":"VariableDeclaration","scope":941,"src":"1031:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"1031:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"to","nameLocation":"1061:2:6","nodeType":"VariableDeclaration","scope":941,"src":"1053:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":924,"mutability":"mutable","name":"value","nameLocation":"1081:5:6","nodeType":"VariableDeclaration","scope":941,"src":"1073:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"1073:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"999:93:6"},"returnParameters":{"id":926,"nodeType":"ParameterList","parameters":[],"src":"1102:0:6"},"scope":1164,"src":"974:241:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":984,"nodeType":"Block","src":"1581:497:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"1830:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1839:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1830:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":956,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1829:12:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":961,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1870:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1164","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1164","typeString":"library SafeERC20"}],"id":960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1862:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":959,"name":"address","nodeType":"ElementaryTypeName","src":"1862:7:6","typeDescriptions":{}}},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1862:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":963,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"1877:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":957,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"1846:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":799,"src":"1846:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1846:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1846:44:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":967,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1845:46:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1829:62:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1905:56:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":952,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1808:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1808:163:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":971,"nodeType":"ExpressionStatement","src":"1808:163:6"},{"expression":{"arguments":[{"id":973,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"2001:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":976,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"2031:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":809,"src":"2031:13:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2031:22:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":979,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"2055:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"2064:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":974,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2008:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2008:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2008:62:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":972,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"1981:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$822_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1981:90:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":983,"nodeType":"ExpressionStatement","src":"1981:90:6"}]},"documentation":{"id":942,"nodeType":"StructuredDocumentation","src":"1221:249:6","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":985,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1484:11:6","nodeType":"FunctionDefinition","parameters":{"id":950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":945,"mutability":"mutable","name":"token","nameLocation":"1512:5:6","nodeType":"VariableDeclaration","scope":985,"src":"1505:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"},"typeName":{"id":944,"nodeType":"UserDefinedTypeName","pathNode":{"id":943,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":822,"src":"1505:6:6"},"referencedDeclaration":822,"src":"1505:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":947,"mutability":"mutable","name":"spender","nameLocation":"1535:7:6","nodeType":"VariableDeclaration","scope":985,"src":"1527:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"1527:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":949,"mutability":"mutable","name":"value","nameLocation":"1560:5:6","nodeType":"VariableDeclaration","scope":985,"src":"1552:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":948,"name":"uint256","nodeType":"ElementaryTypeName","src":"1552:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:76:6"},"returnParameters":{"id":951,"nodeType":"ParameterList","parameters":[],"src":"1581:0:6"},"scope":1164,"src":"1475:603:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1020,"nodeType":"Block","src":"2200:194:6","statements":[{"assignments":[996],"declarations":[{"constant":false,"id":996,"mutability":"mutable","name":"newAllowance","nameLocation":"2218:12:6","nodeType":"VariableDeclaration","scope":1020,"src":"2210:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":995,"name":"uint256","nodeType":"ElementaryTypeName","src":"2210:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1007,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1001,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2257:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1164","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1164","typeString":"library SafeERC20"}],"id":1000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2249:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"2249:7:6","typeDescriptions":{}}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2249:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1003,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"2264:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":997,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"2233:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":799,"src":"2233:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2233:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"2275:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2233:47:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2210:70:6"},{"expression":{"arguments":[{"id":1009,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"2310:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1012,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"2340:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":809,"src":"2340:13:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2340:22:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1015,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"2364:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1016,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"2373:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1010,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2317:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2317:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2317:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1008,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"2290:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$822_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2290:97:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1019,"nodeType":"ExpressionStatement","src":"2290:97:6"}]},"id":1021,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2093:21:6","nodeType":"FunctionDefinition","parameters":{"id":993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":988,"mutability":"mutable","name":"token","nameLocation":"2131:5:6","nodeType":"VariableDeclaration","scope":1021,"src":"2124:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"},"typeName":{"id":987,"nodeType":"UserDefinedTypeName","pathNode":{"id":986,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":822,"src":"2124:6:6"},"referencedDeclaration":822,"src":"2124:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":990,"mutability":"mutable","name":"spender","nameLocation":"2154:7:6","nodeType":"VariableDeclaration","scope":1021,"src":"2146:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":989,"name":"address","nodeType":"ElementaryTypeName","src":"2146:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":992,"mutability":"mutable","name":"value","nameLocation":"2179:5:6","nodeType":"VariableDeclaration","scope":1021,"src":"2171:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"2171:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2114:76:6"},"returnParameters":{"id":994,"nodeType":"ParameterList","parameters":[],"src":"2200:0:6"},"scope":1164,"src":"2084:310:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1068,"nodeType":"Block","src":"2516:370:6","statements":[{"id":1067,"nodeType":"UncheckedBlock","src":"2526:354:6","statements":[{"assignments":[1032],"declarations":[{"constant":false,"id":1032,"mutability":"mutable","name":"oldAllowance","nameLocation":"2558:12:6","nodeType":"VariableDeclaration","scope":1067,"src":"2550:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1031,"name":"uint256","nodeType":"ElementaryTypeName","src":"2550:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1041,"initialValue":{"arguments":[{"arguments":[{"id":1037,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2597:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1164","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1164","typeString":"library SafeERC20"}],"id":1036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2589:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"2589:7:6","typeDescriptions":{}}},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2589:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1039,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"2604:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1033,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"2573:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":799,"src":"2573:15:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2550:62:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1043,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"2634:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"2650:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2634:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2657:43:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":1042,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2626:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2626:75:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1048,"nodeType":"ExpressionStatement","src":"2626:75:6"},{"assignments":[1050],"declarations":[{"constant":false,"id":1050,"mutability":"mutable","name":"newAllowance","nameLocation":"2723:12:6","nodeType":"VariableDeclaration","scope":1067,"src":"2715:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1049,"name":"uint256","nodeType":"ElementaryTypeName","src":"2715:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1054,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1051,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"2738:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"2753:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2738:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2715:43:6"},{"expression":{"arguments":[{"id":1056,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"2792:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":1059,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"2822:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":809,"src":"2822:13:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2822:22:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1062,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"2846:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1063,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"2855:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1057,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2799:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2799:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2799:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1055,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"2772:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$822_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2772:97:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1066,"nodeType":"ExpressionStatement","src":"2772:97:6"}]}]},"id":1069,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2409:21:6","nodeType":"FunctionDefinition","parameters":{"id":1029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1024,"mutability":"mutable","name":"token","nameLocation":"2447:5:6","nodeType":"VariableDeclaration","scope":1069,"src":"2440:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"},"typeName":{"id":1023,"nodeType":"UserDefinedTypeName","pathNode":{"id":1022,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":822,"src":"2440:6:6"},"referencedDeclaration":822,"src":"2440:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1026,"mutability":"mutable","name":"spender","nameLocation":"2470:7:6","nodeType":"VariableDeclaration","scope":1069,"src":"2462:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1025,"name":"address","nodeType":"ElementaryTypeName","src":"2462:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1028,"mutability":"mutable","name":"value","nameLocation":"2495:5:6","nodeType":"VariableDeclaration","scope":1069,"src":"2487:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1027,"name":"uint256","nodeType":"ElementaryTypeName","src":"2487:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:76:6"},"returnParameters":{"id":1030,"nodeType":"ParameterList","parameters":[],"src":"2516:0:6"},"scope":1164,"src":"2400:486:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1124,"nodeType":"Block","src":"3107:257:6","statements":[{"assignments":[1090],"declarations":[{"constant":false,"id":1090,"mutability":"mutable","name":"nonceBefore","nameLocation":"3125:11:6","nodeType":"VariableDeclaration","scope":1124,"src":"3117:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1089,"name":"uint256","nodeType":"ElementaryTypeName","src":"3117:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1095,"initialValue":{"arguments":[{"id":1093,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"3152:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1091,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"3139:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$883","typeString":"contract IERC20Permit"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":876,"src":"3139:12:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3139:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3117:41:6"},{"expression":{"arguments":[{"id":1099,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"3181:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1100,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"3188:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"3197:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1102,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"3204:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1103,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"3214:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1104,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"3217:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1105,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"3220:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1096,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"3168:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$883","typeString":"contract IERC20Permit"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":868,"src":"3168:12:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3168:54:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1107,"nodeType":"ExpressionStatement","src":"3168:54:6"},{"assignments":[1109],"declarations":[{"constant":false,"id":1109,"mutability":"mutable","name":"nonceAfter","nameLocation":"3240:10:6","nodeType":"VariableDeclaration","scope":1124,"src":"3232:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"3232:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1114,"initialValue":{"arguments":[{"id":1112,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"3266:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1110,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"3253:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$883","typeString":"contract IERC20Permit"}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":876,"src":"3253:12:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3253:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3232:40:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1116,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"3290:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1117,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"3304:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3318:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3304:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3290:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3321:35:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":1115,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3282:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3282:75:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1123,"nodeType":"ExpressionStatement","src":"3282:75:6"}]},"id":1125,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"2901:10:6","nodeType":"FunctionDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1072,"mutability":"mutable","name":"token","nameLocation":"2934:5:6","nodeType":"VariableDeclaration","scope":1125,"src":"2921:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$883","typeString":"contract IERC20Permit"},"typeName":{"id":1071,"nodeType":"UserDefinedTypeName","pathNode":{"id":1070,"name":"IERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":883,"src":"2921:12:6"},"referencedDeclaration":883,"src":"2921:12:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$883","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":1074,"mutability":"mutable","name":"owner","nameLocation":"2957:5:6","nodeType":"VariableDeclaration","scope":1125,"src":"2949:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1073,"name":"address","nodeType":"ElementaryTypeName","src":"2949:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1076,"mutability":"mutable","name":"spender","nameLocation":"2980:7:6","nodeType":"VariableDeclaration","scope":1125,"src":"2972:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"2972:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1078,"mutability":"mutable","name":"value","nameLocation":"3005:5:6","nodeType":"VariableDeclaration","scope":1125,"src":"2997:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1077,"name":"uint256","nodeType":"ElementaryTypeName","src":"2997:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1080,"mutability":"mutable","name":"deadline","nameLocation":"3028:8:6","nodeType":"VariableDeclaration","scope":1125,"src":"3020:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1079,"name":"uint256","nodeType":"ElementaryTypeName","src":"3020:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1082,"mutability":"mutable","name":"v","nameLocation":"3052:1:6","nodeType":"VariableDeclaration","scope":1125,"src":"3046:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1081,"name":"uint8","nodeType":"ElementaryTypeName","src":"3046:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1084,"mutability":"mutable","name":"r","nameLocation":"3071:1:6","nodeType":"VariableDeclaration","scope":1125,"src":"3063:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1083,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3063:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1086,"mutability":"mutable","name":"s","nameLocation":"3090:1:6","nodeType":"VariableDeclaration","scope":1125,"src":"3082:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1085,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3082:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2911:186:6"},"returnParameters":{"id":1088,"nodeType":"ParameterList","parameters":[],"src":"3107:0:6"},"scope":1164,"src":"2892:472:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1162,"nodeType":"Block","src":"3817:636:6","statements":[{"assignments":[1135],"declarations":[{"constant":false,"id":1135,"mutability":"mutable","name":"returndata","nameLocation":"4179:10:6","nodeType":"VariableDeclaration","scope":1162,"src":"4166:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1134,"name":"bytes","nodeType":"ElementaryTypeName","src":"4166:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1144,"initialValue":{"arguments":[{"id":1141,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"4220:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":1142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4226:34:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":1138,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"4200:5:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}],"id":1137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1136,"name":"address","nodeType":"ElementaryTypeName","src":"4192:7:6","typeDescriptions":{}}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4192:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":2281,"src":"4192:27:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4192:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4166:95:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1145,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"4275:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4275:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4295:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4275:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1161,"nodeType":"IfStatement","src":"4271:176:6","trueBody":{"id":1160,"nodeType":"Block","src":"4298:149:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":1152,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"4370:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4383:4:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1153,"name":"bool","nodeType":"ElementaryTypeName","src":"4383:4:6","typeDescriptions":{}}}],"id":1155,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4382:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1150,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4359:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"4359:10:6","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4359:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4391:44:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":1149,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4351:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4351:85:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1159,"nodeType":"ExpressionStatement","src":"4351:85:6"}]}}]},"documentation":{"id":1126,"nodeType":"StructuredDocumentation","src":"3370:372:6","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1163,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"3756:19:6","nodeType":"FunctionDefinition","parameters":{"id":1132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"token","nameLocation":"3783:5:6","nodeType":"VariableDeclaration","scope":1163,"src":"3776:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"},"typeName":{"id":1128,"nodeType":"UserDefinedTypeName","pathNode":{"id":1127,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":822,"src":"3776:6:6"},"referencedDeclaration":822,"src":"3776:6:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1131,"mutability":"mutable","name":"data","nameLocation":"3803:4:6","nodeType":"VariableDeclaration","scope":1163,"src":"3790:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1130,"name":"bytes","nodeType":"ElementaryTypeName","src":"3790:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:33:6"},"returnParameters":{"id":1133,"nodeType":"ParameterList","parameters":[],"src":"3817:0:6"},"scope":1164,"src":"3747:706:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1165,"src":"707:3748:6","usedErrors":[]}],"src":"115:4341:6"},"id":6},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[2487],"Context":[2509],"ERC165":[2759],"ERC721":[2031],"IERC165":[2771],"IERC721":[2147],"IERC721Metadata":[2192],"IERC721Receiver":[2165],"Strings":[2735]},"id":2032,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1166,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":1167,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2032,"sourceUnit":2148,"src":"132:23:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":1168,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2032,"sourceUnit":2166,"src":"156:31:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":1169,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2032,"sourceUnit":2193,"src":"188:42:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":1170,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2032,"sourceUnit":2488,"src":"231:33:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1171,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2032,"sourceUnit":2510,"src":"265:33:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":1172,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2032,"sourceUnit":2736,"src":"299:33:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":1173,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2032,"sourceUnit":2760,"src":"333:46:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1175,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":2509,"src":"647:7:7"},"id":1176,"nodeType":"InheritanceSpecifier","src":"647:7:7"},{"baseName":{"id":1177,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":2759,"src":"656:6:7"},"id":1178,"nodeType":"InheritanceSpecifier","src":"656:6:7"},{"baseName":{"id":1179,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":2147,"src":"664:7:7"},"id":1180,"nodeType":"InheritanceSpecifier","src":"664:7:7"},{"baseName":{"id":1181,"name":"IERC721Metadata","nodeType":"IdentifierPath","referencedDeclaration":2192,"src":"673:15:7"},"id":1182,"nodeType":"InheritanceSpecifier","src":"673:15:7"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1174,"nodeType":"StructuredDocumentation","src":"381:246:7","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":2031,"linearizedBaseContracts":[2031,2192,2147,2759,2771,2509],"name":"ERC721","nameLocation":"637:6:7","nodeType":"ContractDefinition","nodes":[{"id":1185,"libraryName":{"id":1183,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":2487,"src":"701:7:7"},"nodeType":"UsingForDirective","src":"695:26:7","typeName":{"id":1184,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"id":1188,"libraryName":{"id":1186,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":2735,"src":"732:7:7"},"nodeType":"UsingForDirective","src":"726:26:7","typeName":{"id":1187,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1190,"mutability":"mutable","name":"_name","nameLocation":"791:5:7","nodeType":"VariableDeclaration","scope":2031,"src":"776:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1189,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1192,"mutability":"mutable","name":"_symbol","nameLocation":"838:7:7","nodeType":"VariableDeclaration","scope":2031,"src":"823:22:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1191,"name":"string","nodeType":"ElementaryTypeName","src":"823:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1196,"mutability":"mutable","name":"_owners","nameLocation":"934:7:7","nodeType":"VariableDeclaration","scope":2031,"src":"898:43:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1195,"keyType":{"id":1193,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":1194,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1200,"mutability":"mutable","name":"_balances","nameLocation":"1028:9:7","nodeType":"VariableDeclaration","scope":2031,"src":"992:45:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1199,"keyType":{"id":1197,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1204,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1129:15:7","nodeType":"VariableDeclaration","scope":2031,"src":"1093:51:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1203,"keyType":{"id":1201,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":1202,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1210,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1252:18:7","nodeType":"VariableDeclaration","scope":2031,"src":"1199:71:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":1209,"keyType":{"id":1205,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:44:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":1208,"keyType":{"id":1206,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1218:24:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1207,"name":"bool","nodeType":"ElementaryTypeName","src":"1237:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":1226,"nodeType":"Block","src":"1446:57:7","statements":[{"expression":{"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1218,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"1456:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1219,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"1464:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:13:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1221,"nodeType":"ExpressionStatement","src":"1456:13:7"},{"expression":{"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1222,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"1479:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1223,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"1489:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1479:17:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1225,"nodeType":"ExpressionStatement","src":"1479:17:7"}]},"documentation":{"id":1211,"nodeType":"StructuredDocumentation","src":"1277:108:7","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":1227,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1213,"mutability":"mutable","name":"name_","nameLocation":"1416:5:7","nodeType":"VariableDeclaration","scope":1227,"src":"1402:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1212,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1215,"mutability":"mutable","name":"symbol_","nameLocation":"1437:7:7","nodeType":"VariableDeclaration","scope":1227,"src":"1423:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1214,"name":"string","nodeType":"ElementaryTypeName","src":"1423:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:44:7"},"returnParameters":{"id":1217,"nodeType":"ParameterList","parameters":[],"src":"1446:0:7"},"scope":2031,"src":"1390:113:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2758,2770],"body":{"id":1257,"nodeType":"Block","src":"1678:192:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1238,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"1707:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1240,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"1727:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$2147_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$2147_$","typeString":"type(contract IERC721)"}],"id":1239,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1722:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1722:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$2147","typeString":"type(contract IERC721)"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1722:25:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1707:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1244,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"1763:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1246,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"1783:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2192_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2192_$","typeString":"type(contract IERC721Metadata)"}],"id":1245,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1778:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1778:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$2192","typeString":"type(contract IERC721Metadata)"}},"id":1248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1778:33:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1763:48:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:104:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1253,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"1851:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1251,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1827:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$2031_$","typeString":"type(contract super ERC721)"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2758,"src":"1827:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1827:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:156:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1237,"id":1256,"nodeType":"Return","src":"1688:175:7"}]},"documentation":{"id":1228,"nodeType":"StructuredDocumentation","src":"1509:56:7","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1258,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1579:17:7","nodeType":"FunctionDefinition","overrides":{"id":1234,"nodeType":"OverrideSpecifier","overrides":[{"id":1232,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":2759,"src":"1646:6:7"},{"id":1233,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2771,"src":"1654:7:7"}],"src":"1637:25:7"},"parameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1230,"mutability":"mutable","name":"interfaceId","nameLocation":"1604:11:7","nodeType":"VariableDeclaration","scope":1258,"src":"1597:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1229,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1597:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1596:20:7"},"returnParameters":{"id":1237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1258,"src":"1672:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1235,"name":"bool","nodeType":"ElementaryTypeName","src":"1672:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1671:6:7"},"scope":2031,"src":"1570:300:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2072],"body":{"id":1281,"nodeType":"Block","src":"2010:123:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1268,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"2028:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2037:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1269,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:7","typeDescriptions":{}}},"id":1272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2037:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2028:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":1274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2049:43:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":1267,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2020:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1276,"nodeType":"ExpressionStatement","src":"2020:73:7"},{"expression":{"baseExpression":{"id":1277,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"2110:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1279,"indexExpression":{"id":1278,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"2120:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2110:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1266,"id":1280,"nodeType":"Return","src":"2103:23:7"}]},"documentation":{"id":1259,"nodeType":"StructuredDocumentation","src":"1876:48:7","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":1282,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1938:9:7","nodeType":"FunctionDefinition","overrides":{"id":1263,"nodeType":"OverrideSpecifier","overrides":[],"src":"1983:8:7"},"parameters":{"id":1262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1261,"mutability":"mutable","name":"owner","nameLocation":"1956:5:7","nodeType":"VariableDeclaration","scope":1282,"src":"1948:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1260,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:15:7"},"returnParameters":{"id":1266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1282,"src":"2001:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1264,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:7"},"scope":2031,"src":"1929:204:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2080],"body":{"id":1309,"nodeType":"Block","src":"2271:137:7","statements":[{"assignments":[1292],"declarations":[{"constant":false,"id":1292,"mutability":"mutable","name":"owner","nameLocation":"2289:5:7","nodeType":"VariableDeclaration","scope":1309,"src":"2281:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1291,"name":"address","nodeType":"ElementaryTypeName","src":"2281:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1296,"initialValue":{"baseExpression":{"id":1293,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"2297:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1295,"indexExpression":{"id":1294,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"2305:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2297:16:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2281:32:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1298,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"2331:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2348:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2340:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1299,"name":"address","nodeType":"ElementaryTypeName","src":"2340:7:7","typeDescriptions":{}}},"id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2340:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2331:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":1304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2352:26:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":1297,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2323:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2323:56:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1306,"nodeType":"ExpressionStatement","src":"2323:56:7"},{"expression":{"id":1307,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"2396:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1290,"id":1308,"nodeType":"Return","src":"2389:12:7"}]},"documentation":{"id":1283,"nodeType":"StructuredDocumentation","src":"2139:46:7","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":1310,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2199:7:7","nodeType":"FunctionDefinition","overrides":{"id":1287,"nodeType":"OverrideSpecifier","overrides":[],"src":"2244:8:7"},"parameters":{"id":1286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1285,"mutability":"mutable","name":"tokenId","nameLocation":"2215:7:7","nodeType":"VariableDeclaration","scope":1310,"src":"2207:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1284,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2206:17:7"},"returnParameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1310,"src":"2262:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2261:9:7"},"scope":2031,"src":"2190:218:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2177],"body":{"id":1319,"nodeType":"Block","src":"2539:29:7","statements":[{"expression":{"id":1317,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"2556:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1316,"id":1318,"nodeType":"Return","src":"2549:12:7"}]},"documentation":{"id":1311,"nodeType":"StructuredDocumentation","src":"2414:51:7","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":1320,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2479:4:7","nodeType":"FunctionDefinition","overrides":{"id":1313,"nodeType":"OverrideSpecifier","overrides":[],"src":"2506:8:7"},"parameters":{"id":1312,"nodeType":"ParameterList","parameters":[],"src":"2483:2:7"},"returnParameters":{"id":1316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1320,"src":"2524:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1314,"name":"string","nodeType":"ElementaryTypeName","src":"2524:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2523:15:7"},"scope":2031,"src":"2470:98:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2183],"body":{"id":1329,"nodeType":"Block","src":"2703:31:7","statements":[{"expression":{"id":1327,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"2720:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1326,"id":1328,"nodeType":"Return","src":"2713:14:7"}]},"documentation":{"id":1321,"nodeType":"StructuredDocumentation","src":"2574:53:7","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":1330,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2641:6:7","nodeType":"FunctionDefinition","overrides":{"id":1323,"nodeType":"OverrideSpecifier","overrides":[],"src":"2670:8:7"},"parameters":{"id":1322,"nodeType":"ParameterList","parameters":[],"src":"2647:2:7"},"returnParameters":{"id":1326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1330,"src":"2688:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1324,"name":"string","nodeType":"ElementaryTypeName","src":"2688:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2687:15:7"},"scope":2031,"src":"2632:102:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2191],"body":{"id":1368,"nodeType":"Block","src":"2888:188:7","statements":[{"expression":{"arguments":[{"id":1340,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"2913:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1339,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"2898:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2898:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1342,"nodeType":"ExpressionStatement","src":"2898:23:7"},{"assignments":[1344],"declarations":[{"constant":false,"id":1344,"mutability":"mutable","name":"baseURI","nameLocation":"2946:7:7","nodeType":"VariableDeclaration","scope":1368,"src":"2932:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1343,"name":"string","nodeType":"ElementaryTypeName","src":"2932:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1347,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1345,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"2956:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2956:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2932:34:7"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1350,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"2989:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2983:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1348,"name":"bytes","nodeType":"ElementaryTypeName","src":"2983:5:7","typeDescriptions":{}}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2983:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2983:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3007:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2983:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3067:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2983:86:7","trueExpression":{"arguments":[{"arguments":[{"id":1359,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"3035:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1360,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"3044:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2597,"src":"3044:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3044:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1357,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3018:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3018:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3018:45:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3011:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1355,"name":"string","nodeType":"ElementaryTypeName","src":"3011:6:7","typeDescriptions":{}}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3011:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1338,"id":1367,"nodeType":"Return","src":"2976:93:7"}]},"documentation":{"id":1331,"nodeType":"StructuredDocumentation","src":"2740:55:7","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1369,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2809:8:7","nodeType":"FunctionDefinition","overrides":{"id":1335,"nodeType":"OverrideSpecifier","overrides":[],"src":"2855:8:7"},"parameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1333,"mutability":"mutable","name":"tokenId","nameLocation":"2826:7:7","nodeType":"VariableDeclaration","scope":1369,"src":"2818:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1332,"name":"uint256","nodeType":"ElementaryTypeName","src":"2818:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2817:17:7"},"returnParameters":{"id":1338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1369,"src":"2873:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1336,"name":"string","nodeType":"ElementaryTypeName","src":"2873:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2872:15:7"},"scope":2031,"src":"2800:276:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1377,"nodeType":"Block","src":"3384:26:7","statements":[{"expression":{"hexValue":"","id":1375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3401:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1374,"id":1376,"nodeType":"Return","src":"3394:9:7"}]},"documentation":{"id":1370,"nodeType":"StructuredDocumentation","src":"3082:231:7","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1378,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3327:8:7","nodeType":"FunctionDefinition","parameters":{"id":1371,"nodeType":"ParameterList","parameters":[],"src":"3335:2:7"},"returnParameters":{"id":1374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1378,"src":"3369:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1372,"name":"string","nodeType":"ElementaryTypeName","src":"3369:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3368:15:7"},"scope":2031,"src":"3318:92:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2120],"body":{"id":1420,"nodeType":"Block","src":"3537:337:7","statements":[{"assignments":[1388],"declarations":[{"constant":false,"id":1388,"mutability":"mutable","name":"owner","nameLocation":"3555:5:7","nodeType":"VariableDeclaration","scope":1420,"src":"3547:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1387,"name":"address","nodeType":"ElementaryTypeName","src":"3547:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1393,"initialValue":{"arguments":[{"id":1391,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"3578:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1389,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"3563:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2031_$","typeString":"type(contract ERC721)"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1310,"src":"3563:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3563:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3547:39:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1395,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"3604:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1396,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"3610:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3604:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":1398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3617:35:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":1394,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3596:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3596:57:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1400,"nodeType":"ExpressionStatement","src":"3596:57:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1402,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"3685:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3685:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1404,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"3701:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3685:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1407,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"3727:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1408,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"3734:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3734:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1406,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"3710:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3710:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3685:62:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c","id":1412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3761:64:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","typeString":"literal_string \"ERC721: approve caller is not token owner nor approved for all\""},"value":"ERC721: approve caller is not token owner nor approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","typeString":"literal_string \"ERC721: approve caller is not token owner nor approved for all\""}],"id":1401,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3664:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3664:171:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1414,"nodeType":"ExpressionStatement","src":"3664:171:7"},{"expression":{"arguments":[{"id":1416,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"3855:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1417,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"3859:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1415,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"3846:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3846:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1419,"nodeType":"ExpressionStatement","src":"3846:21:7"}]},"documentation":{"id":1379,"nodeType":"StructuredDocumentation","src":"3416:46:7","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":1421,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3476:7:7","nodeType":"FunctionDefinition","overrides":{"id":1385,"nodeType":"OverrideSpecifier","overrides":[],"src":"3528:8:7"},"parameters":{"id":1384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1381,"mutability":"mutable","name":"to","nameLocation":"3492:2:7","nodeType":"VariableDeclaration","scope":1421,"src":"3484:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1380,"name":"address","nodeType":"ElementaryTypeName","src":"3484:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1383,"mutability":"mutable","name":"tokenId","nameLocation":"3504:7:7","nodeType":"VariableDeclaration","scope":1421,"src":"3496:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1382,"name":"uint256","nodeType":"ElementaryTypeName","src":"3496:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3483:29:7"},"returnParameters":{"id":1386,"nodeType":"ParameterList","parameters":[],"src":"3537:0:7"},"scope":2031,"src":"3467:407:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2136],"body":{"id":1438,"nodeType":"Block","src":"4020:82:7","statements":[{"expression":{"arguments":[{"id":1431,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"4045:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1430,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"4030:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4030:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1433,"nodeType":"ExpressionStatement","src":"4030:23:7"},{"expression":{"baseExpression":{"id":1434,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"4071:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1436,"indexExpression":{"id":1435,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"4087:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4071:24:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1429,"id":1437,"nodeType":"Return","src":"4064:31:7"}]},"documentation":{"id":1422,"nodeType":"StructuredDocumentation","src":"3880:50:7","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":1439,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3944:11:7","nodeType":"FunctionDefinition","overrides":{"id":1426,"nodeType":"OverrideSpecifier","overrides":[],"src":"3993:8:7"},"parameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"tokenId","nameLocation":"3964:7:7","nodeType":"VariableDeclaration","scope":1439,"src":"3956:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1423,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3955:17:7"},"returnParameters":{"id":1429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1439,"src":"4011:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1427,"name":"address","nodeType":"ElementaryTypeName","src":"4011:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4010:9:7"},"scope":2031,"src":"3935:167:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2128],"body":{"id":1455,"nodeType":"Block","src":"4253:69:7","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1449,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"4282:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4282:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1451,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"4296:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1452,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"4306:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1448,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"4263:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4263:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1454,"nodeType":"ExpressionStatement","src":"4263:52:7"}]},"documentation":{"id":1440,"nodeType":"StructuredDocumentation","src":"4108:56:7","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":1456,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4178:17:7","nodeType":"FunctionDefinition","overrides":{"id":1446,"nodeType":"OverrideSpecifier","overrides":[],"src":"4244:8:7"},"parameters":{"id":1445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1442,"mutability":"mutable","name":"operator","nameLocation":"4204:8:7","nodeType":"VariableDeclaration","scope":1456,"src":"4196:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1441,"name":"address","nodeType":"ElementaryTypeName","src":"4196:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1444,"mutability":"mutable","name":"approved","nameLocation":"4219:8:7","nodeType":"VariableDeclaration","scope":1456,"src":"4214:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1443,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4195:33:7"},"returnParameters":{"id":1447,"nodeType":"ParameterList","parameters":[],"src":"4253:0:7"},"scope":2031,"src":"4169:153:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2146],"body":{"id":1473,"nodeType":"Block","src":"4491:59:7","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1467,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"4508:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1469,"indexExpression":{"id":1468,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"4527:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:25:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1471,"indexExpression":{"id":1470,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"4534:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1466,"id":1472,"nodeType":"Return","src":"4501:42:7"}]},"documentation":{"id":1457,"nodeType":"StructuredDocumentation","src":"4328:55:7","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1474,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4397:16:7","nodeType":"FunctionDefinition","overrides":{"id":1463,"nodeType":"OverrideSpecifier","overrides":[],"src":"4467:8:7"},"parameters":{"id":1462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1459,"mutability":"mutable","name":"owner","nameLocation":"4422:5:7","nodeType":"VariableDeclaration","scope":1474,"src":"4414:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1458,"name":"address","nodeType":"ElementaryTypeName","src":"4414:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1461,"mutability":"mutable","name":"operator","nameLocation":"4437:8:7","nodeType":"VariableDeclaration","scope":1474,"src":"4429:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1460,"name":"address","nodeType":"ElementaryTypeName","src":"4429:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4413:33:7"},"returnParameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1474,"src":"4485:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1464,"name":"bool","nodeType":"ElementaryTypeName","src":"4485:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4484:6:7"},"scope":2031,"src":"4388:162:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2112],"body":{"id":1500,"nodeType":"Block","src":"4731:208:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1487,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"4820:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4820:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1489,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"4834:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1486,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"4801:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4801:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564","id":1491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4844:48:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""},"value":"ERC721: caller is not token owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""}],"id":1485,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4793:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4793:100:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1493,"nodeType":"ExpressionStatement","src":"4793:100:7"},{"expression":{"arguments":[{"id":1495,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"4914:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1496,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"4920:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1497,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"4924:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1494,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"4904:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4904:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1499,"nodeType":"ExpressionStatement","src":"4904:28:7"}]},"documentation":{"id":1475,"nodeType":"StructuredDocumentation","src":"4556:51:7","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":1501,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4621:12:7","nodeType":"FunctionDefinition","overrides":{"id":1483,"nodeType":"OverrideSpecifier","overrides":[],"src":"4722:8:7"},"parameters":{"id":1482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1477,"mutability":"mutable","name":"from","nameLocation":"4651:4:7","nodeType":"VariableDeclaration","scope":1501,"src":"4643:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1476,"name":"address","nodeType":"ElementaryTypeName","src":"4643:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1479,"mutability":"mutable","name":"to","nameLocation":"4673:2:7","nodeType":"VariableDeclaration","scope":1501,"src":"4665:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1478,"name":"address","nodeType":"ElementaryTypeName","src":"4665:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1481,"mutability":"mutable","name":"tokenId","nameLocation":"4693:7:7","nodeType":"VariableDeclaration","scope":1501,"src":"4685:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1480,"name":"uint256","nodeType":"ElementaryTypeName","src":"4685:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:73:7"},"returnParameters":{"id":1484,"nodeType":"ParameterList","parameters":[],"src":"4731:0:7"},"scope":2031,"src":"4612:327:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2102],"body":{"id":1519,"nodeType":"Block","src":"5128:56:7","statements":[{"expression":{"arguments":[{"id":1513,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"5155:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1514,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"5161:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1515,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"5165:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5174:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1512,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1520,1550],"referencedDeclaration":1550,"src":"5138:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5138:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1518,"nodeType":"ExpressionStatement","src":"5138:39:7"}]},"documentation":{"id":1502,"nodeType":"StructuredDocumentation","src":"4945:55:7","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":1520,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5014:16:7","nodeType":"FunctionDefinition","overrides":{"id":1510,"nodeType":"OverrideSpecifier","overrides":[],"src":"5119:8:7"},"parameters":{"id":1509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"mutability":"mutable","name":"from","nameLocation":"5048:4:7","nodeType":"VariableDeclaration","scope":1520,"src":"5040:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1503,"name":"address","nodeType":"ElementaryTypeName","src":"5040:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1506,"mutability":"mutable","name":"to","nameLocation":"5070:2:7","nodeType":"VariableDeclaration","scope":1520,"src":"5062:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1505,"name":"address","nodeType":"ElementaryTypeName","src":"5062:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1508,"mutability":"mutable","name":"tokenId","nameLocation":"5090:7:7","nodeType":"VariableDeclaration","scope":1520,"src":"5082:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1507,"name":"uint256","nodeType":"ElementaryTypeName","src":"5082:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5030:73:7"},"returnParameters":{"id":1511,"nodeType":"ParameterList","parameters":[],"src":"5128:0:7"},"scope":2031,"src":"5005:179:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2092],"body":{"id":1549,"nodeType":"Block","src":"5400:165:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1535,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"5437:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5437:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1537,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"5451:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1534,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"5418:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5418:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564","id":1539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5461:48:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""},"value":"ERC721: caller is not token owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""}],"id":1533,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5410:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5410:100:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1541,"nodeType":"ExpressionStatement","src":"5410:100:7"},{"expression":{"arguments":[{"id":1543,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"5534:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1544,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"5540:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1545,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"5544:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1546,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"5553:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1542,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"5520:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5520:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1548,"nodeType":"ExpressionStatement","src":"5520:38:7"}]},"documentation":{"id":1521,"nodeType":"StructuredDocumentation","src":"5190:55:7","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":1550,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5259:16:7","nodeType":"FunctionDefinition","overrides":{"id":1531,"nodeType":"OverrideSpecifier","overrides":[],"src":"5391:8:7"},"parameters":{"id":1530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1523,"mutability":"mutable","name":"from","nameLocation":"5293:4:7","nodeType":"VariableDeclaration","scope":1550,"src":"5285:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1522,"name":"address","nodeType":"ElementaryTypeName","src":"5285:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1525,"mutability":"mutable","name":"to","nameLocation":"5315:2:7","nodeType":"VariableDeclaration","scope":1550,"src":"5307:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1524,"name":"address","nodeType":"ElementaryTypeName","src":"5307:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1527,"mutability":"mutable","name":"tokenId","nameLocation":"5335:7:7","nodeType":"VariableDeclaration","scope":1550,"src":"5327:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1526,"name":"uint256","nodeType":"ElementaryTypeName","src":"5327:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1529,"mutability":"mutable","name":"data","nameLocation":"5365:4:7","nodeType":"VariableDeclaration","scope":1550,"src":"5352:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1528,"name":"bytes","nodeType":"ElementaryTypeName","src":"5352:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5275:100:7"},"returnParameters":{"id":1532,"nodeType":"ParameterList","parameters":[],"src":"5400:0:7"},"scope":2031,"src":"5250:315:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1578,"nodeType":"Block","src":"6566:165:7","statements":[{"expression":{"arguments":[{"id":1563,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"6586:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1564,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"6592:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1565,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"6596:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1562,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"6576:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6576:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1567,"nodeType":"ExpressionStatement","src":"6576:28:7"},{"expression":{"arguments":[{"arguments":[{"id":1570,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"6645:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1571,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"6651:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1572,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"6655:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1573,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"6664:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1569,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"6622:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6622:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6671:52:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1568,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6614:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6614:110:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1577,"nodeType":"ExpressionStatement","src":"6614:110:7"}]},"documentation":{"id":1551,"nodeType":"StructuredDocumentation","src":"5571:850:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1579,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6435:13:7","nodeType":"FunctionDefinition","parameters":{"id":1560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1553,"mutability":"mutable","name":"from","nameLocation":"6466:4:7","nodeType":"VariableDeclaration","scope":1579,"src":"6458:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1552,"name":"address","nodeType":"ElementaryTypeName","src":"6458:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1555,"mutability":"mutable","name":"to","nameLocation":"6488:2:7","nodeType":"VariableDeclaration","scope":1579,"src":"6480:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1554,"name":"address","nodeType":"ElementaryTypeName","src":"6480:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1557,"mutability":"mutable","name":"tokenId","nameLocation":"6508:7:7","nodeType":"VariableDeclaration","scope":1579,"src":"6500:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1556,"name":"uint256","nodeType":"ElementaryTypeName","src":"6500:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1559,"mutability":"mutable","name":"data","nameLocation":"6538:4:7","nodeType":"VariableDeclaration","scope":1579,"src":"6525:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1558,"name":"bytes","nodeType":"ElementaryTypeName","src":"6525:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6448:100:7"},"returnParameters":{"id":1561,"nodeType":"ParameterList","parameters":[],"src":"6566:0:7"},"scope":2031,"src":"6426:305:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1596,"nodeType":"Block","src":"7105:54:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1587,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"7122:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1589,"indexExpression":{"id":1588,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"7130:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7122:16:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7150:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7142:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1590,"name":"address","nodeType":"ElementaryTypeName","src":"7142:7:7","typeDescriptions":{}}},"id":1593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7142:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7122:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1586,"id":1595,"nodeType":"Return","src":"7115:37:7"}]},"documentation":{"id":1580,"nodeType":"StructuredDocumentation","src":"6737:292:7","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":1597,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7043:7:7","nodeType":"FunctionDefinition","parameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1582,"mutability":"mutable","name":"tokenId","nameLocation":"7059:7:7","nodeType":"VariableDeclaration","scope":1597,"src":"7051:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1581,"name":"uint256","nodeType":"ElementaryTypeName","src":"7051:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7050:17:7"},"returnParameters":{"id":1586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1597,"src":"7099:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1584,"name":"bool","nodeType":"ElementaryTypeName","src":"7099:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7098:6:7"},"scope":2031,"src":"7034:125:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1630,"nodeType":"Block","src":"7416:162:7","statements":[{"assignments":[1608],"declarations":[{"constant":false,"id":1608,"mutability":"mutable","name":"owner","nameLocation":"7434:5:7","nodeType":"VariableDeclaration","scope":1630,"src":"7426:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1607,"name":"address","nodeType":"ElementaryTypeName","src":"7426:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1613,"initialValue":{"arguments":[{"id":1611,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"7457:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1609,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"7442:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2031_$","typeString":"type(contract ERC721)"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1310,"src":"7442:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7442:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7426:39:7"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1614,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"7483:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1615,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"7494:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7483:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1618,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"7520:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1619,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"7527:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1617,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"7503:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7503:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7483:52:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1623,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"7551:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1622,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"7539:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7539:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1625,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"7563:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7539:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7483:87:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1628,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7482:89:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1606,"id":1629,"nodeType":"Return","src":"7475:96:7"}]},"documentation":{"id":1598,"nodeType":"StructuredDocumentation","src":"7165:147:7","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":1631,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7326:18:7","nodeType":"FunctionDefinition","parameters":{"id":1603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1600,"mutability":"mutable","name":"spender","nameLocation":"7353:7:7","nodeType":"VariableDeclaration","scope":1631,"src":"7345:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1599,"name":"address","nodeType":"ElementaryTypeName","src":"7345:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1602,"mutability":"mutable","name":"tokenId","nameLocation":"7370:7:7","nodeType":"VariableDeclaration","scope":1631,"src":"7362:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1601,"name":"uint256","nodeType":"ElementaryTypeName","src":"7362:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7344:34:7"},"returnParameters":{"id":1606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1631,"src":"7410:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1604,"name":"bool","nodeType":"ElementaryTypeName","src":"7410:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7409:6:7"},"scope":2031,"src":"7317:261:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1645,"nodeType":"Block","src":"7973:43:7","statements":[{"expression":{"arguments":[{"id":1640,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"7993:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1641,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"7997:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8006:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1639,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1646,1675],"referencedDeclaration":1675,"src":"7983:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7983:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1644,"nodeType":"ExpressionStatement","src":"7983:26:7"}]},"documentation":{"id":1632,"nodeType":"StructuredDocumentation","src":"7584:319:7","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1646,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"7917:9:7","nodeType":"FunctionDefinition","parameters":{"id":1637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1634,"mutability":"mutable","name":"to","nameLocation":"7935:2:7","nodeType":"VariableDeclaration","scope":1646,"src":"7927:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1633,"name":"address","nodeType":"ElementaryTypeName","src":"7927:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1636,"mutability":"mutable","name":"tokenId","nameLocation":"7947:7:7","nodeType":"VariableDeclaration","scope":1646,"src":"7939:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1635,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7926:29:7"},"returnParameters":{"id":1638,"nodeType":"ParameterList","parameters":[],"src":"7973:0:7"},"scope":2031,"src":"7908:108:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1674,"nodeType":"Block","src":"8351:195:7","statements":[{"expression":{"arguments":[{"id":1657,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"8367:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1658,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"8371:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1656,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"8361:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8361:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1660,"nodeType":"ExpressionStatement","src":"8361:18:7"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8441:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8433:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1663,"name":"address","nodeType":"ElementaryTypeName","src":"8433:7:7","typeDescriptions":{}}},"id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8433:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1667,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"8445:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1668,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"8449:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1669,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"8458:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1662,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"8410:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8410:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8477:52:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1661,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8389:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8389:150:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1673,"nodeType":"ExpressionStatement","src":"8389:150:7"}]},"documentation":{"id":1647,"nodeType":"StructuredDocumentation","src":"8022:210:7","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1675,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8246:9:7","nodeType":"FunctionDefinition","parameters":{"id":1654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1649,"mutability":"mutable","name":"to","nameLocation":"8273:2:7","nodeType":"VariableDeclaration","scope":1675,"src":"8265:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1648,"name":"address","nodeType":"ElementaryTypeName","src":"8265:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1651,"mutability":"mutable","name":"tokenId","nameLocation":"8293:7:7","nodeType":"VariableDeclaration","scope":1675,"src":"8285:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1650,"name":"uint256","nodeType":"ElementaryTypeName","src":"8285:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1653,"mutability":"mutable","name":"data","nameLocation":"8323:4:7","nodeType":"VariableDeclaration","scope":1675,"src":"8310:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1652,"name":"bytes","nodeType":"ElementaryTypeName","src":"8310:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8255:78:7"},"returnParameters":{"id":1655,"nodeType":"ParameterList","parameters":[],"src":"8351:0:7"},"scope":2031,"src":"8237:309:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1740,"nodeType":"Block","src":"8929:366:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1684,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"8947:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8961:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8953:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1685,"name":"address","nodeType":"ElementaryTypeName","src":"8953:7:7","typeDescriptions":{}}},"id":1688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8953:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8947:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":1690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8965:34:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":1683,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8939:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8939:61:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1692,"nodeType":"ExpressionStatement","src":"8939:61:7"},{"expression":{"arguments":[{"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9018:17:7","subExpression":{"arguments":[{"id":1695,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"9027:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1694,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"9019:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9019:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":1698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9037:30:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":1693,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9010:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9010:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1700,"nodeType":"ExpressionStatement","src":"9010:58:7"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9108:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9100:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1702,"name":"address","nodeType":"ElementaryTypeName","src":"9100:7:7","typeDescriptions":{}}},"id":1705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9100:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1706,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"9112:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1707,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"9116:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1701,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"9079:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9079:45:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1709,"nodeType":"ExpressionStatement","src":"9079:45:7"},{"expression":{"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1710,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"9135:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1712,"indexExpression":{"id":1711,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"9145:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9135:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9152:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9135:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1715,"nodeType":"ExpressionStatement","src":"9135:18:7"},{"expression":{"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1716,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"9163:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1718,"indexExpression":{"id":1717,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"9171:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9163:16:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1719,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"9182:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9163:21:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1721,"nodeType":"ExpressionStatement","src":"9163:21:7"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9217:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9209:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1723,"name":"address","nodeType":"ElementaryTypeName","src":"9209:7:7","typeDescriptions":{}}},"id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9209:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1727,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"9221:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1728,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"9225:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1722,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"9200:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9200:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1730,"nodeType":"EmitStatement","src":"9195:38:7"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9264:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1732,"name":"address","nodeType":"ElementaryTypeName","src":"9264:7:7","typeDescriptions":{}}},"id":1735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9264:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1736,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"9276:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1737,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"9280:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1731,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"9244:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9244:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1739,"nodeType":"ExpressionStatement","src":"9244:44:7"}]},"documentation":{"id":1676,"nodeType":"StructuredDocumentation","src":"8552:311:7","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1741,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8877:5:7","nodeType":"FunctionDefinition","parameters":{"id":1681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1678,"mutability":"mutable","name":"to","nameLocation":"8891:2:7","nodeType":"VariableDeclaration","scope":1741,"src":"8883:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1677,"name":"address","nodeType":"ElementaryTypeName","src":"8883:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1680,"mutability":"mutable","name":"tokenId","nameLocation":"8903:7:7","nodeType":"VariableDeclaration","scope":1741,"src":"8895:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1679,"name":"uint256","nodeType":"ElementaryTypeName","src":"8895:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8882:29:7"},"returnParameters":{"id":1682,"nodeType":"ParameterList","parameters":[],"src":"8929:0:7"},"scope":2031,"src":"8868:427:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1800,"nodeType":"Block","src":"9561:357:7","statements":[{"assignments":[1748],"declarations":[{"constant":false,"id":1748,"mutability":"mutable","name":"owner","nameLocation":"9579:5:7","nodeType":"VariableDeclaration","scope":1800,"src":"9571:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1747,"name":"address","nodeType":"ElementaryTypeName","src":"9571:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1753,"initialValue":{"arguments":[{"id":1751,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"9602:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1749,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"9587:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2031_$","typeString":"type(contract ERC721)"}},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1310,"src":"9587:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9587:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9571:39:7"},{"expression":{"arguments":[{"id":1755,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"9642:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9657:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9649:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1756,"name":"address","nodeType":"ElementaryTypeName","src":"9649:7:7","typeDescriptions":{}}},"id":1759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9649:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1760,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"9661:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1754,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"9621:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9621:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1762,"nodeType":"ExpressionStatement","src":"9621:48:7"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9724:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9716:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1764,"name":"address","nodeType":"ElementaryTypeName","src":"9716:7:7","typeDescriptions":{}}},"id":1767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9716:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1768,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"9728:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1763,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"9707:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9707:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1770,"nodeType":"ExpressionStatement","src":"9707:29:7"},{"expression":{"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1771,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"9747:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1773,"indexExpression":{"id":1772,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"9757:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9747:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9767:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9747:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1776,"nodeType":"ExpressionStatement","src":"9747:21:7"},{"expression":{"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"9778:23:7","subExpression":{"baseExpression":{"id":1777,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"9785:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1779,"indexExpression":{"id":1778,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"9793:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9785:16:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1781,"nodeType":"ExpressionStatement","src":"9778:23:7"},{"eventCall":{"arguments":[{"id":1783,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"9826:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9841:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9833:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1784,"name":"address","nodeType":"ElementaryTypeName","src":"9833:7:7","typeDescriptions":{}}},"id":1787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9833:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1788,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"9845:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1782,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"9817:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9817:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1790,"nodeType":"EmitStatement","src":"9812:41:7"},{"expression":{"arguments":[{"id":1792,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"9884:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9899:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9891:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1793,"name":"address","nodeType":"ElementaryTypeName","src":"9891:7:7","typeDescriptions":{}}},"id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9891:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1797,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"9903:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1791,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"9864:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9864:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1799,"nodeType":"ExpressionStatement","src":"9864:47:7"}]},"documentation":{"id":1742,"nodeType":"StructuredDocumentation","src":"9301:206:7","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1801,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9521:5:7","nodeType":"FunctionDefinition","parameters":{"id":1745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1744,"mutability":"mutable","name":"tokenId","nameLocation":"9535:7:7","nodeType":"VariableDeclaration","scope":1801,"src":"9527:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1743,"name":"uint256","nodeType":"ElementaryTypeName","src":"9527:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9526:17:7"},"returnParameters":{"id":1746,"nodeType":"ParameterList","parameters":[],"src":"9561:0:7"},"scope":2031,"src":"9512:406:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1875,"nodeType":"Block","src":"10351:496:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1814,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"10384:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1812,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"10369:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2031_$","typeString":"type(contract ERC721)"}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1310,"src":"10369:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10369:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1816,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"10396:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10369:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10402:39:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":1811,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10361:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10361:81:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1820,"nodeType":"ExpressionStatement","src":"10361:81:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1822,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"10460:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10474:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10466:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1823,"name":"address","nodeType":"ElementaryTypeName","src":"10466:7:7","typeDescriptions":{}}},"id":1826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10466:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10460:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":1828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10478:38:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":1821,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10452:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10452:65:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1830,"nodeType":"ExpressionStatement","src":"10452:65:7"},{"expression":{"arguments":[{"id":1832,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"10549:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1833,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"10555:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1834,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"10559:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1831,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"10528:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10528:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1836,"nodeType":"ExpressionStatement","src":"10528:39:7"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10646:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10638:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1838,"name":"address","nodeType":"ElementaryTypeName","src":"10638:7:7","typeDescriptions":{}}},"id":1841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10638:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1842,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"10650:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1837,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"10629:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10629:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1844,"nodeType":"ExpressionStatement","src":"10629:29:7"},{"expression":{"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1845,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"10669:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1847,"indexExpression":{"id":1846,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"10679:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10669:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10688:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10669:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1850,"nodeType":"ExpressionStatement","src":"10669:20:7"},{"expression":{"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1851,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"10699:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1853,"indexExpression":{"id":1852,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"10709:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10699:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10716:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10699:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1856,"nodeType":"ExpressionStatement","src":"10699:18:7"},{"expression":{"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1857,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"10727:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1859,"indexExpression":{"id":1858,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"10735:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10727:16:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1860,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"10746:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10727:21:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1862,"nodeType":"ExpressionStatement","src":"10727:21:7"},{"eventCall":{"arguments":[{"id":1864,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"10773:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1865,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"10779:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1866,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"10783:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1863,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"10764:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10764:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1868,"nodeType":"EmitStatement","src":"10759:32:7"},{"expression":{"arguments":[{"id":1870,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"10822:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1871,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"10828:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1872,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"10832:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1869,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"10802:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10802:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1874,"nodeType":"ExpressionStatement","src":"10802:38:7"}]},"documentation":{"id":1802,"nodeType":"StructuredDocumentation","src":"9924:313:7","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1876,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"10251:9:7","nodeType":"FunctionDefinition","parameters":{"id":1809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"mutability":"mutable","name":"from","nameLocation":"10278:4:7","nodeType":"VariableDeclaration","scope":1876,"src":"10270:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1803,"name":"address","nodeType":"ElementaryTypeName","src":"10270:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1806,"mutability":"mutable","name":"to","nameLocation":"10300:2:7","nodeType":"VariableDeclaration","scope":1876,"src":"10292:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1805,"name":"address","nodeType":"ElementaryTypeName","src":"10292:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1808,"mutability":"mutable","name":"tokenId","nameLocation":"10320:7:7","nodeType":"VariableDeclaration","scope":1876,"src":"10312:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1807,"name":"uint256","nodeType":"ElementaryTypeName","src":"10312:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10260:73:7"},"returnParameters":{"id":1810,"nodeType":"ParameterList","parameters":[],"src":"10351:0:7"},"scope":2031,"src":"10242:605:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1899,"nodeType":"Block","src":"11023:107:7","statements":[{"expression":{"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1884,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"11033:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1886,"indexExpression":{"id":1885,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"11049:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11033:24:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1887,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"11060:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11033:29:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1889,"nodeType":"ExpressionStatement","src":"11033:29:7"},{"eventCall":{"arguments":[{"arguments":[{"id":1893,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"11101:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1891,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"11086:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2031_$","typeString":"type(contract ERC721)"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1310,"src":"11086:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11086:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1895,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"11111:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1896,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"11115:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1890,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"11077:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11077:46:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1898,"nodeType":"EmitStatement","src":"11072:51:7"}]},"documentation":{"id":1877,"nodeType":"StructuredDocumentation","src":"10853:101:7","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":1900,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10968:8:7","nodeType":"FunctionDefinition","parameters":{"id":1882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1879,"mutability":"mutable","name":"to","nameLocation":"10985:2:7","nodeType":"VariableDeclaration","scope":1900,"src":"10977:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1878,"name":"address","nodeType":"ElementaryTypeName","src":"10977:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1881,"mutability":"mutable","name":"tokenId","nameLocation":"10997:7:7","nodeType":"VariableDeclaration","scope":1900,"src":"10989:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1880,"name":"uint256","nodeType":"ElementaryTypeName","src":"10989:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10976:29:7"},"returnParameters":{"id":1883,"nodeType":"ParameterList","parameters":[],"src":"11023:0:7"},"scope":2031,"src":"10959:171:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1931,"nodeType":"Block","src":"11389:184:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1911,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"11407:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1912,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"11416:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11407:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":1914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11426:27:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":1910,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11399:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11399:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1916,"nodeType":"ExpressionStatement","src":"11399:55:7"},{"expression":{"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1917,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"11464:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1920,"indexExpression":{"id":1918,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"11483:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11464:25:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1921,"indexExpression":{"id":1919,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"11490:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11464:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1922,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"11502:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11464:46:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1924,"nodeType":"ExpressionStatement","src":"11464:46:7"},{"eventCall":{"arguments":[{"id":1926,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"11540:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1927,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"11547:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1928,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"11557:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1925,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"11525:14:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11525:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1930,"nodeType":"EmitStatement","src":"11520:46:7"}]},"documentation":{"id":1901,"nodeType":"StructuredDocumentation","src":"11136:125:7","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":1932,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"11275:18:7","nodeType":"FunctionDefinition","parameters":{"id":1908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1903,"mutability":"mutable","name":"owner","nameLocation":"11311:5:7","nodeType":"VariableDeclaration","scope":1932,"src":"11303:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1902,"name":"address","nodeType":"ElementaryTypeName","src":"11303:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1905,"mutability":"mutable","name":"operator","nameLocation":"11334:8:7","nodeType":"VariableDeclaration","scope":1932,"src":"11326:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1904,"name":"address","nodeType":"ElementaryTypeName","src":"11326:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1907,"mutability":"mutable","name":"approved","nameLocation":"11357:8:7","nodeType":"VariableDeclaration","scope":1932,"src":"11352:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1906,"name":"bool","nodeType":"ElementaryTypeName","src":"11352:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11293:78:7"},"returnParameters":{"id":1909,"nodeType":"ParameterList","parameters":[],"src":"11389:0:7"},"scope":2031,"src":"11266:307:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1945,"nodeType":"Block","src":"11720:70:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1940,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"11746:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1939,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"11738:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11738:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":1942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11756:26:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":1938,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11730:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11730:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1944,"nodeType":"ExpressionStatement","src":"11730:53:7"}]},"documentation":{"id":1933,"nodeType":"StructuredDocumentation","src":"11579:73:7","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":1946,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nameLocation":"11666:14:7","nodeType":"FunctionDefinition","parameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1935,"mutability":"mutable","name":"tokenId","nameLocation":"11689:7:7","nodeType":"VariableDeclaration","scope":1946,"src":"11681:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1934,"name":"uint256","nodeType":"ElementaryTypeName","src":"11681:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11680:17:7"},"returnParameters":{"id":1937,"nodeType":"ParameterList","parameters":[],"src":"11720:0:7"},"scope":2031,"src":"11657:133:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2007,"nodeType":"Block","src":"12497:676:7","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1960,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"12511:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2210,"src":"12511:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12511:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2005,"nodeType":"Block","src":"13131:36:7","statements":[{"expression":{"hexValue":"74727565","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13152:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1959,"id":2004,"nodeType":"Return","src":"13145:11:7"}]},"id":2006,"nodeType":"IfStatement","src":"12507:660:7","trueBody":{"id":2002,"nodeType":"Block","src":"12528:597:7","statements":[{"clauses":[{"block":{"id":1982,"nodeType":"Block","src":"12642:91:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1976,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"12667:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1977,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"12677:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2165_$","typeString":"type(contract IERC721Receiver)"}},"id":1978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2164,"src":"12677:32:7","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"12677:41:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"12667:51:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1959,"id":1981,"nodeType":"Return","src":"12660:58:7"}]},"errorName":"","id":1983,"nodeType":"TryCatchClause","parameters":{"id":1975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1974,"mutability":"mutable","name":"retval","nameLocation":"12634:6:7","nodeType":"VariableDeclaration","scope":1983,"src":"12627:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1973,"name":"bytes4","nodeType":"ElementaryTypeName","src":"12627:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"12626:15:7"},"src":"12618:115:7"},{"block":{"id":1999,"nodeType":"Block","src":"12762:353:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1987,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"12784:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"12784:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12801:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12784:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1997,"nodeType":"Block","src":"12911:190:7","statements":[{"AST":{"nodeType":"YulBlock","src":"12997:86:7","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13034:2:7","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"13038:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13030:3:7"},"nodeType":"YulFunctionCall","src":"13030:15:7"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"13053:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13047:5:7"},"nodeType":"YulFunctionCall","src":"13047:13:7"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13023:6:7"},"nodeType":"YulFunctionCall","src":"13023:38:7"},"nodeType":"YulExpressionStatement","src":"13023:38:7"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":1985,"isOffset":false,"isSlot":false,"src":"13038:6:7","valueSize":1},{"declaration":1985,"isOffset":false,"isSlot":false,"src":"13053:6:7","valueSize":1}],"id":1996,"nodeType":"InlineAssembly","src":"12988:95:7"}]},"id":1998,"nodeType":"IfStatement","src":"12780:321:7","trueBody":{"id":1995,"nodeType":"Block","src":"12804:101:7","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12833:52:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1991,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"12826:6:7","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12826:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1994,"nodeType":"ExpressionStatement","src":"12826:60:7"}]}}]},"errorName":"","id":2000,"nodeType":"TryCatchClause","parameters":{"id":1986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1985,"mutability":"mutable","name":"reason","nameLocation":"12754:6:7","nodeType":"VariableDeclaration","scope":2000,"src":"12741:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1984,"name":"bytes","nodeType":"ElementaryTypeName","src":"12741:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12740:21:7"},"src":"12734:381:7"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1967,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"12583:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12583:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1969,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"12597:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1970,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"12603:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1971,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"12612:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1964,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"12562:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1963,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"12546:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2165_$","typeString":"type(contract IERC721Receiver)"}},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12546:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$2165","typeString":"contract IERC721Receiver"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2164,"src":"12546:36:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12546:71:7","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2001,"nodeType":"TryStatement","src":"12542:573:7"}]}}]},"documentation":{"id":1947,"nodeType":"StructuredDocumentation","src":"11796:541:7","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":2008,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"12351:22:7","nodeType":"FunctionDefinition","parameters":{"id":1956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1949,"mutability":"mutable","name":"from","nameLocation":"12391:4:7","nodeType":"VariableDeclaration","scope":2008,"src":"12383:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1948,"name":"address","nodeType":"ElementaryTypeName","src":"12383:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1951,"mutability":"mutable","name":"to","nameLocation":"12413:2:7","nodeType":"VariableDeclaration","scope":2008,"src":"12405:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1950,"name":"address","nodeType":"ElementaryTypeName","src":"12405:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1953,"mutability":"mutable","name":"tokenId","nameLocation":"12433:7:7","nodeType":"VariableDeclaration","scope":2008,"src":"12425:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1952,"name":"uint256","nodeType":"ElementaryTypeName","src":"12425:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1955,"mutability":"mutable","name":"data","nameLocation":"12463:4:7","nodeType":"VariableDeclaration","scope":2008,"src":"12450:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1954,"name":"bytes","nodeType":"ElementaryTypeName","src":"12450:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12373:100:7"},"returnParameters":{"id":1959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2008,"src":"12491:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1957,"name":"bool","nodeType":"ElementaryTypeName","src":"12491:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12490:6:7"},"scope":2031,"src":"12342:831:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2018,"nodeType":"Block","src":"13849:2:7","statements":[]},"documentation":{"id":2009,"nodeType":"StructuredDocumentation","src":"13179:545:7","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2019,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"13738:20:7","nodeType":"FunctionDefinition","parameters":{"id":2016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2011,"mutability":"mutable","name":"from","nameLocation":"13776:4:7","nodeType":"VariableDeclaration","scope":2019,"src":"13768:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2010,"name":"address","nodeType":"ElementaryTypeName","src":"13768:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2013,"mutability":"mutable","name":"to","nameLocation":"13798:2:7","nodeType":"VariableDeclaration","scope":2019,"src":"13790:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2012,"name":"address","nodeType":"ElementaryTypeName","src":"13790:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2015,"mutability":"mutable","name":"tokenId","nameLocation":"13818:7:7","nodeType":"VariableDeclaration","scope":2019,"src":"13810:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2014,"name":"uint256","nodeType":"ElementaryTypeName","src":"13810:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:73:7"},"returnParameters":{"id":2017,"nodeType":"ParameterList","parameters":[],"src":"13849:0:7"},"scope":2031,"src":"13729:122:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2029,"nodeType":"Block","src":"14342:2:7","statements":[]},"documentation":{"id":2020,"nodeType":"StructuredDocumentation","src":"13857:361:7","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2030,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"14232:19:7","nodeType":"FunctionDefinition","parameters":{"id":2027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2022,"mutability":"mutable","name":"from","nameLocation":"14269:4:7","nodeType":"VariableDeclaration","scope":2030,"src":"14261:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2021,"name":"address","nodeType":"ElementaryTypeName","src":"14261:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2024,"mutability":"mutable","name":"to","nameLocation":"14291:2:7","nodeType":"VariableDeclaration","scope":2030,"src":"14283:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2023,"name":"address","nodeType":"ElementaryTypeName","src":"14283:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2026,"mutability":"mutable","name":"tokenId","nameLocation":"14311:7:7","nodeType":"VariableDeclaration","scope":2030,"src":"14303:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2025,"name":"uint256","nodeType":"ElementaryTypeName","src":"14303:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14251:73:7"},"returnParameters":{"id":2028,"nodeType":"ParameterList","parameters":[],"src":"14342:0:7"},"scope":2031,"src":"14223:121:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2032,"src":"628:13718:7","usedErrors":[]}],"src":"107:14240:7"},"id":7},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[2771],"IERC721":[2147]},"id":2148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2033,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2034,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2148,"sourceUnit":2772,"src":"133:47:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2036,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2771,"src":"271:7:8"},"id":2037,"nodeType":"InheritanceSpecifier","src":"271:7:8"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2035,"nodeType":"StructuredDocumentation","src":"182:67:8","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":2147,"linearizedBaseContracts":[2147,2771],"name":"IERC721","nameLocation":"260:7:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2038,"nodeType":"StructuredDocumentation","src":"285:88:8","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":2046,"name":"Transfer","nameLocation":"384:8:8","nodeType":"EventDefinition","parameters":{"id":2045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2040,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:8","nodeType":"VariableDeclaration","scope":2046,"src":"393:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2039,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2042,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:8","nodeType":"VariableDeclaration","scope":2046,"src":"415:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2041,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2044,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:8","nodeType":"VariableDeclaration","scope":2046,"src":"435:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2043,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:8"},"src":"378:82:8"},{"anonymous":false,"documentation":{"id":2047,"nodeType":"StructuredDocumentation","src":"466:94:8","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":2055,"name":"Approval","nameLocation":"571:8:8","nodeType":"EventDefinition","parameters":{"id":2054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2049,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:8","nodeType":"VariableDeclaration","scope":2055,"src":"580:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2048,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2051,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:8","nodeType":"VariableDeclaration","scope":2055,"src":"603:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2050,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2053,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:8","nodeType":"VariableDeclaration","scope":2055,"src":"629:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2052,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:8"},"src":"565:89:8"},{"anonymous":false,"documentation":{"id":2056,"nodeType":"StructuredDocumentation","src":"660:117:8","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":2064,"name":"ApprovalForAll","nameLocation":"788:14:8","nodeType":"EventDefinition","parameters":{"id":2063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2058,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:8","nodeType":"VariableDeclaration","scope":2064,"src":"803:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2057,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2060,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:8","nodeType":"VariableDeclaration","scope":2064,"src":"826:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2059,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2062,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:8","nodeType":"VariableDeclaration","scope":2064,"src":"852:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2061,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:8"},"src":"782:85:8"},{"documentation":{"id":2065,"nodeType":"StructuredDocumentation","src":"873:76:8","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":2072,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:8","nodeType":"FunctionDefinition","parameters":{"id":2068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2067,"mutability":"mutable","name":"owner","nameLocation":"981:5:8","nodeType":"VariableDeclaration","scope":2072,"src":"973:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2066,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:8"},"returnParameters":{"id":2071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2070,"mutability":"mutable","name":"balance","nameLocation":"1019:7:8","nodeType":"VariableDeclaration","scope":2072,"src":"1011:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2069,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:8"},"scope":2147,"src":"954:74:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2073,"nodeType":"StructuredDocumentation","src":"1034:131:8","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":2080,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:8","nodeType":"FunctionDefinition","parameters":{"id":2076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2075,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:8","nodeType":"VariableDeclaration","scope":2080,"src":"1187:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2074,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:8"},"returnParameters":{"id":2079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2078,"mutability":"mutable","name":"owner","nameLocation":"1235:5:8","nodeType":"VariableDeclaration","scope":2080,"src":"1227:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2077,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:8"},"scope":2147,"src":"1170:72:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2081,"nodeType":"StructuredDocumentation","src":"1248:556:8","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":2092,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:8","nodeType":"FunctionDefinition","parameters":{"id":2090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2083,"mutability":"mutable","name":"from","nameLocation":"1852:4:8","nodeType":"VariableDeclaration","scope":2092,"src":"1844:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2082,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2085,"mutability":"mutable","name":"to","nameLocation":"1874:2:8","nodeType":"VariableDeclaration","scope":2092,"src":"1866:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2084,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2087,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:8","nodeType":"VariableDeclaration","scope":2092,"src":"1886:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2086,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2089,"mutability":"mutable","name":"data","nameLocation":"1926:4:8","nodeType":"VariableDeclaration","scope":2092,"src":"1911:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2088,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:102:8"},"returnParameters":{"id":2091,"nodeType":"ParameterList","parameters":[],"src":"1945:0:8"},"scope":2147,"src":"1809:137:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2093,"nodeType":"StructuredDocumentation","src":"1952:687:8","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":2102,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2653:16:8","nodeType":"FunctionDefinition","parameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2095,"mutability":"mutable","name":"from","nameLocation":"2687:4:8","nodeType":"VariableDeclaration","scope":2102,"src":"2679:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2094,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2097,"mutability":"mutable","name":"to","nameLocation":"2709:2:8","nodeType":"VariableDeclaration","scope":2102,"src":"2701:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2096,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2099,"mutability":"mutable","name":"tokenId","nameLocation":"2729:7:8","nodeType":"VariableDeclaration","scope":2102,"src":"2721:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2098,"name":"uint256","nodeType":"ElementaryTypeName","src":"2721:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2669:73:8"},"returnParameters":{"id":2101,"nodeType":"ParameterList","parameters":[],"src":"2751:0:8"},"scope":2147,"src":"2644:108:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2103,"nodeType":"StructuredDocumentation","src":"2758:504:8","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2112,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3276:12:8","nodeType":"FunctionDefinition","parameters":{"id":2110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2105,"mutability":"mutable","name":"from","nameLocation":"3306:4:8","nodeType":"VariableDeclaration","scope":2112,"src":"3298:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2104,"name":"address","nodeType":"ElementaryTypeName","src":"3298:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2107,"mutability":"mutable","name":"to","nameLocation":"3328:2:8","nodeType":"VariableDeclaration","scope":2112,"src":"3320:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2106,"name":"address","nodeType":"ElementaryTypeName","src":"3320:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2109,"mutability":"mutable","name":"tokenId","nameLocation":"3348:7:8","nodeType":"VariableDeclaration","scope":2112,"src":"3340:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2108,"name":"uint256","nodeType":"ElementaryTypeName","src":"3340:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3288:73:8"},"returnParameters":{"id":2111,"nodeType":"ParameterList","parameters":[],"src":"3370:0:8"},"scope":2147,"src":"3267:104:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2113,"nodeType":"StructuredDocumentation","src":"3377:452:8","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2120,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3843:7:8","nodeType":"FunctionDefinition","parameters":{"id":2118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2115,"mutability":"mutable","name":"to","nameLocation":"3859:2:8","nodeType":"VariableDeclaration","scope":2120,"src":"3851:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2114,"name":"address","nodeType":"ElementaryTypeName","src":"3851:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2117,"mutability":"mutable","name":"tokenId","nameLocation":"3871:7:8","nodeType":"VariableDeclaration","scope":2120,"src":"3863:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2116,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3850:29:8"},"returnParameters":{"id":2119,"nodeType":"ParameterList","parameters":[],"src":"3888:0:8"},"scope":2147,"src":"3834:55:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2121,"nodeType":"StructuredDocumentation","src":"3895:309:8","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":2128,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4218:17:8","nodeType":"FunctionDefinition","parameters":{"id":2126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2123,"mutability":"mutable","name":"operator","nameLocation":"4244:8:8","nodeType":"VariableDeclaration","scope":2128,"src":"4236:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2122,"name":"address","nodeType":"ElementaryTypeName","src":"4236:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2125,"mutability":"mutable","name":"_approved","nameLocation":"4259:9:8","nodeType":"VariableDeclaration","scope":2128,"src":"4254:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2124,"name":"bool","nodeType":"ElementaryTypeName","src":"4254:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4235:34:8"},"returnParameters":{"id":2127,"nodeType":"ParameterList","parameters":[],"src":"4278:0:8"},"scope":2147,"src":"4209:70:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2129,"nodeType":"StructuredDocumentation","src":"4285:139:8","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":2136,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4438:11:8","nodeType":"FunctionDefinition","parameters":{"id":2132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"mutability":"mutable","name":"tokenId","nameLocation":"4458:7:8","nodeType":"VariableDeclaration","scope":2136,"src":"4450:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2130,"name":"uint256","nodeType":"ElementaryTypeName","src":"4450:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4449:17:8"},"returnParameters":{"id":2135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2134,"mutability":"mutable","name":"operator","nameLocation":"4498:8:8","nodeType":"VariableDeclaration","scope":2136,"src":"4490:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2133,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4489:18:8"},"scope":2147,"src":"4429:79:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2137,"nodeType":"StructuredDocumentation","src":"4514:138:8","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":2146,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4666:16:8","nodeType":"FunctionDefinition","parameters":{"id":2142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2139,"mutability":"mutable","name":"owner","nameLocation":"4691:5:8","nodeType":"VariableDeclaration","scope":2146,"src":"4683:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2138,"name":"address","nodeType":"ElementaryTypeName","src":"4683:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2141,"mutability":"mutable","name":"operator","nameLocation":"4706:8:8","nodeType":"VariableDeclaration","scope":2146,"src":"4698:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2140,"name":"address","nodeType":"ElementaryTypeName","src":"4698:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4682:33:8"},"returnParameters":{"id":2145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2146,"src":"4739:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2143,"name":"bool","nodeType":"ElementaryTypeName","src":"4739:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4738:6:8"},"scope":2147,"src":"4657:88:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2148,"src":"250:4497:8","usedErrors":[]}],"src":"108:4640:8"},"id":8},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[2165]},"id":2166,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2149,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:9"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2150,"nodeType":"StructuredDocumentation","src":"141:152:9","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":2165,"linearizedBaseContracts":[2165],"name":"IERC721Receiver","nameLocation":"304:15:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2151,"nodeType":"StructuredDocumentation","src":"326:493:9","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":2164,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:9","nodeType":"FunctionDefinition","parameters":{"id":2160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2153,"mutability":"mutable","name":"operator","nameLocation":"867:8:9","nodeType":"VariableDeclaration","scope":2164,"src":"859:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2152,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2155,"mutability":"mutable","name":"from","nameLocation":"893:4:9","nodeType":"VariableDeclaration","scope":2164,"src":"885:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2154,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2157,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:9","nodeType":"VariableDeclaration","scope":2164,"src":"907:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2156,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2159,"mutability":"mutable","name":"data","nameLocation":"947:4:9","nodeType":"VariableDeclaration","scope":2164,"src":"932:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2158,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:9"},"returnParameters":{"id":2163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2164,"src":"976:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2161,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:9"},"scope":2165,"src":"824:160:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2166,"src":"294:692:9","usedErrors":[]}],"src":"116:871:9"},"id":9},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[2771],"IERC721":[2147],"IERC721Metadata":[2192]},"id":2193,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2167,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2168,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2193,"sourceUnit":2148,"src":"137:24:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2170,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":2147,"src":"326:7:10"},"id":2171,"nodeType":"InheritanceSpecifier","src":"326:7:10"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2169,"nodeType":"StructuredDocumentation","src":"163:133:10","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2192,"linearizedBaseContracts":[2192,2147,2771],"name":"IERC721Metadata","nameLocation":"307:15:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2172,"nodeType":"StructuredDocumentation","src":"340:58:10","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2177,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:10","nodeType":"FunctionDefinition","parameters":{"id":2173,"nodeType":"ParameterList","parameters":[],"src":"416:2:10"},"returnParameters":{"id":2176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2177,"src":"442:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2174,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:10"},"scope":2192,"src":"403:54:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2178,"nodeType":"StructuredDocumentation","src":"463:60:10","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2183,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:10","nodeType":"FunctionDefinition","parameters":{"id":2179,"nodeType":"ParameterList","parameters":[],"src":"543:2:10"},"returnParameters":{"id":2182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2183,"src":"569:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2180,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:10"},"scope":2192,"src":"528:56:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2184,"nodeType":"StructuredDocumentation","src":"590:90:10","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2191,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:10","nodeType":"FunctionDefinition","parameters":{"id":2187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2186,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:10","nodeType":"VariableDeclaration","scope":2191,"src":"703:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2185,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:10"},"returnParameters":{"id":2190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2191,"src":"743:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2188,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:10"},"scope":2192,"src":"685:73:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2193,"src":"297:463:10","usedErrors":[]}],"src":"112:649:10"},"id":10},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2487]},"id":2488,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2194,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:11"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2195,"nodeType":"StructuredDocumentation","src":"126:67:11","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2487,"linearizedBaseContracts":[2487],"name":"Address","nameLocation":"202:7:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2209,"nodeType":"Block","src":"1241:254:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2203,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"1465:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2202,"id":2208,"nodeType":"Return","src":"1458:30:11"}]},"documentation":{"id":2196,"nodeType":"StructuredDocumentation","src":"216:954:11","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2210,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:11","nodeType":"FunctionDefinition","parameters":{"id":2199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2198,"mutability":"mutable","name":"account","nameLocation":"1203:7:11","nodeType":"VariableDeclaration","scope":2210,"src":"1195:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2197,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:11"},"returnParameters":{"id":2202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2210,"src":"1235:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2200,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:11"},"scope":2487,"src":"1175:320:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2243,"nodeType":"Block","src":"2483:241:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2221,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2487","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2487","typeString":"library Address"}],"id":2220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2219,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:11","typeDescriptions":{}}},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2224,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"2526:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2218,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2228,"nodeType":"ExpressionStatement","src":"2493:73:11"},{"assignments":[2230,null],"declarations":[{"constant":false,"id":2230,"mutability":"mutable","name":"success","nameLocation":"2583:7:11","nodeType":"VariableDeclaration","scope":2243,"src":"2578:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2229,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2237,"initialValue":{"arguments":[{"hexValue":"","id":2235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2231,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"2596:9:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2233,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"2618:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:11"},{"expression":{"arguments":[{"id":2239,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"2647:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2242,"nodeType":"ExpressionStatement","src":"2639:78:11"}]},"documentation":{"id":2211,"nodeType":"StructuredDocumentation","src":"1501:906:11","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2244,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:11","nodeType":"FunctionDefinition","parameters":{"id":2216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2213,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:11","nodeType":"VariableDeclaration","scope":2244,"src":"2431:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2212,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2215,"mutability":"mutable","name":"amount","nameLocation":"2466:6:11","nodeType":"VariableDeclaration","scope":2244,"src":"2458:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2214,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:11"},"returnParameters":{"id":2217,"nodeType":"ParameterList","parameters":[],"src":"2483:0:11"},"scope":2487,"src":"2412:312:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2260,"nodeType":"Block","src":"3555:84:11","statements":[{"expression":{"arguments":[{"id":2255,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"3585:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2256,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"3593:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3599:32:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2254,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[2261,2281],"referencedDeclaration":2281,"src":"3572:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2253,"id":2259,"nodeType":"Return","src":"3565:67:11"}]},"documentation":{"id":2245,"nodeType":"StructuredDocumentation","src":"2730:731:11","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2261,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:11","nodeType":"FunctionDefinition","parameters":{"id":2250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2247,"mutability":"mutable","name":"target","nameLocation":"3496:6:11","nodeType":"VariableDeclaration","scope":2261,"src":"3488:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2246,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2249,"mutability":"mutable","name":"data","nameLocation":"3517:4:11","nodeType":"VariableDeclaration","scope":2261,"src":"3504:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2248,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:11"},"returnParameters":{"id":2253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2261,"src":"3541:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2251,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:11"},"scope":2487,"src":"3466:173:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2280,"nodeType":"Block","src":"4008:76:11","statements":[{"expression":{"arguments":[{"id":2274,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"4047:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2275,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"4055:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4061:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2277,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"4064:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2273,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2301,2351],"referencedDeclaration":2351,"src":"4025:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4025:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2272,"id":2279,"nodeType":"Return","src":"4018:59:11"}]},"documentation":{"id":2262,"nodeType":"StructuredDocumentation","src":"3645:211:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2281,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3870:12:11","nodeType":"FunctionDefinition","parameters":{"id":2269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2264,"mutability":"mutable","name":"target","nameLocation":"3900:6:11","nodeType":"VariableDeclaration","scope":2281,"src":"3892:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2263,"name":"address","nodeType":"ElementaryTypeName","src":"3892:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2266,"mutability":"mutable","name":"data","nameLocation":"3929:4:11","nodeType":"VariableDeclaration","scope":2281,"src":"3916:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2265,"name":"bytes","nodeType":"ElementaryTypeName","src":"3916:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2268,"mutability":"mutable","name":"errorMessage","nameLocation":"3957:12:11","nodeType":"VariableDeclaration","scope":2281,"src":"3943:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2267,"name":"string","nodeType":"ElementaryTypeName","src":"3943:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3882:93:11"},"returnParameters":{"id":2272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2281,"src":"3994:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2270,"name":"bytes","nodeType":"ElementaryTypeName","src":"3994:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3993:14:11"},"scope":2487,"src":"3861:223:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2300,"nodeType":"Block","src":"4589:111:11","statements":[{"expression":{"arguments":[{"id":2294,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"4628:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2295,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"4636:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"4642:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4649:43:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2293,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2301,2351],"referencedDeclaration":2351,"src":"4606:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4606:87:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2292,"id":2299,"nodeType":"Return","src":"4599:94:11"}]},"documentation":{"id":2282,"nodeType":"StructuredDocumentation","src":"4090:351:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2301,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4455:21:11","nodeType":"FunctionDefinition","parameters":{"id":2289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2284,"mutability":"mutable","name":"target","nameLocation":"4494:6:11","nodeType":"VariableDeclaration","scope":2301,"src":"4486:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2283,"name":"address","nodeType":"ElementaryTypeName","src":"4486:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2286,"mutability":"mutable","name":"data","nameLocation":"4523:4:11","nodeType":"VariableDeclaration","scope":2301,"src":"4510:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2285,"name":"bytes","nodeType":"ElementaryTypeName","src":"4510:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2288,"mutability":"mutable","name":"value","nameLocation":"4545:5:11","nodeType":"VariableDeclaration","scope":2301,"src":"4537:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2287,"name":"uint256","nodeType":"ElementaryTypeName","src":"4537:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4476:80:11"},"returnParameters":{"id":2292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2301,"src":"4575:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2290,"name":"bytes","nodeType":"ElementaryTypeName","src":"4575:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4574:14:11"},"scope":2487,"src":"4446:254:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2350,"nodeType":"Block","src":"5127:320:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2318,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5153:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2487","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2487","typeString":"library Address"}],"id":2317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5145:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2316,"name":"address","nodeType":"ElementaryTypeName","src":"5145:7:11","typeDescriptions":{}}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5145:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5145:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"5170:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5145:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5177:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2315,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5137:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5137:81:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2325,"nodeType":"ExpressionStatement","src":"5137:81:11"},{"expression":{"arguments":[{"arguments":[{"id":2328,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"5247:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2327,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"5236:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5236:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5256:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2326,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5228:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5228:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2332,"nodeType":"ExpressionStatement","src":"5228:60:11"},{"assignments":[2334,2336],"declarations":[{"constant":false,"id":2334,"mutability":"mutable","name":"success","nameLocation":"5305:7:11","nodeType":"VariableDeclaration","scope":2350,"src":"5300:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2333,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2336,"mutability":"mutable","name":"returndata","nameLocation":"5327:10:11","nodeType":"VariableDeclaration","scope":2350,"src":"5314:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2335,"name":"bytes","nodeType":"ElementaryTypeName","src":"5314:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2343,"initialValue":{"arguments":[{"id":2341,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"5367:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2337,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"5341:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5341:11:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"5360:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5341:25:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5341:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5299:73:11"},{"expression":{"arguments":[{"id":2345,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"5406:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2346,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"5415:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2347,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"5427:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2344,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"5389:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5389:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2314,"id":2349,"nodeType":"Return","src":"5382:58:11"}]},"documentation":{"id":2302,"nodeType":"StructuredDocumentation","src":"4706:237:11","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2351,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4957:21:11","nodeType":"FunctionDefinition","parameters":{"id":2311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2304,"mutability":"mutable","name":"target","nameLocation":"4996:6:11","nodeType":"VariableDeclaration","scope":2351,"src":"4988:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2303,"name":"address","nodeType":"ElementaryTypeName","src":"4988:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2306,"mutability":"mutable","name":"data","nameLocation":"5025:4:11","nodeType":"VariableDeclaration","scope":2351,"src":"5012:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2305,"name":"bytes","nodeType":"ElementaryTypeName","src":"5012:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2308,"mutability":"mutable","name":"value","nameLocation":"5047:5:11","nodeType":"VariableDeclaration","scope":2351,"src":"5039:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2307,"name":"uint256","nodeType":"ElementaryTypeName","src":"5039:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2310,"mutability":"mutable","name":"errorMessage","nameLocation":"5076:12:11","nodeType":"VariableDeclaration","scope":2351,"src":"5062:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2309,"name":"string","nodeType":"ElementaryTypeName","src":"5062:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4978:116:11"},"returnParameters":{"id":2314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2351,"src":"5113:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2312,"name":"bytes","nodeType":"ElementaryTypeName","src":"5113:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5112:14:11"},"scope":2487,"src":"4948:499:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2367,"nodeType":"Block","src":"5724:97:11","statements":[{"expression":{"arguments":[{"id":2362,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"5760:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2363,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"5768:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5774:39:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2361,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2368,2403],"referencedDeclaration":2403,"src":"5741:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5741:73:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2360,"id":2366,"nodeType":"Return","src":"5734:80:11"}]},"documentation":{"id":2352,"nodeType":"StructuredDocumentation","src":"5453:166:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2368,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5633:18:11","nodeType":"FunctionDefinition","parameters":{"id":2357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2354,"mutability":"mutable","name":"target","nameLocation":"5660:6:11","nodeType":"VariableDeclaration","scope":2368,"src":"5652:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2353,"name":"address","nodeType":"ElementaryTypeName","src":"5652:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2356,"mutability":"mutable","name":"data","nameLocation":"5681:4:11","nodeType":"VariableDeclaration","scope":2368,"src":"5668:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2355,"name":"bytes","nodeType":"ElementaryTypeName","src":"5668:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5651:35:11"},"returnParameters":{"id":2360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2368,"src":"5710:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2358,"name":"bytes","nodeType":"ElementaryTypeName","src":"5710:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5709:14:11"},"scope":2487,"src":"5624:197:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2402,"nodeType":"Block","src":"6163:228:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2382,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"6192:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2381,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"6181:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6181:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":2384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6201:38:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":2380,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6173:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6173:67:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2386,"nodeType":"ExpressionStatement","src":"6173:67:11"},{"assignments":[2388,2390],"declarations":[{"constant":false,"id":2388,"mutability":"mutable","name":"success","nameLocation":"6257:7:11","nodeType":"VariableDeclaration","scope":2402,"src":"6252:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2387,"name":"bool","nodeType":"ElementaryTypeName","src":"6252:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2390,"mutability":"mutable","name":"returndata","nameLocation":"6279:10:11","nodeType":"VariableDeclaration","scope":2402,"src":"6266:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2389,"name":"bytes","nodeType":"ElementaryTypeName","src":"6266:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2395,"initialValue":{"arguments":[{"id":2393,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"6311:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2391,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"6293:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6293:17:11","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6293:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6251:65:11"},{"expression":{"arguments":[{"id":2397,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"6350:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2398,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"6359:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2399,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"6371:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2396,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"6333:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6333:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2379,"id":2401,"nodeType":"Return","src":"6326:58:11"}]},"documentation":{"id":2369,"nodeType":"StructuredDocumentation","src":"5827:173:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2403,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6014:18:11","nodeType":"FunctionDefinition","parameters":{"id":2376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2371,"mutability":"mutable","name":"target","nameLocation":"6050:6:11","nodeType":"VariableDeclaration","scope":2403,"src":"6042:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2370,"name":"address","nodeType":"ElementaryTypeName","src":"6042:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2373,"mutability":"mutable","name":"data","nameLocation":"6079:4:11","nodeType":"VariableDeclaration","scope":2403,"src":"6066:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2372,"name":"bytes","nodeType":"ElementaryTypeName","src":"6066:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2375,"mutability":"mutable","name":"errorMessage","nameLocation":"6107:12:11","nodeType":"VariableDeclaration","scope":2403,"src":"6093:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2374,"name":"string","nodeType":"ElementaryTypeName","src":"6093:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6032:93:11"},"returnParameters":{"id":2379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2403,"src":"6149:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2377,"name":"bytes","nodeType":"ElementaryTypeName","src":"6149:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6148:14:11"},"scope":2487,"src":"6005:386:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2419,"nodeType":"Block","src":"6667:101:11","statements":[{"expression":{"arguments":[{"id":2414,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"6705:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2415,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"6713:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6719:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":2413,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[2420,2455],"referencedDeclaration":2455,"src":"6684:20:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6684:77:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2412,"id":2418,"nodeType":"Return","src":"6677:84:11"}]},"documentation":{"id":2404,"nodeType":"StructuredDocumentation","src":"6397:168:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2420,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6579:20:11","nodeType":"FunctionDefinition","parameters":{"id":2409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2406,"mutability":"mutable","name":"target","nameLocation":"6608:6:11","nodeType":"VariableDeclaration","scope":2420,"src":"6600:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2405,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2408,"mutability":"mutable","name":"data","nameLocation":"6629:4:11","nodeType":"VariableDeclaration","scope":2420,"src":"6616:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2407,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6599:35:11"},"returnParameters":{"id":2412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2420,"src":"6653:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2410,"name":"bytes","nodeType":"ElementaryTypeName","src":"6653:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6652:14:11"},"scope":2487,"src":"6570:198:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2454,"nodeType":"Block","src":"7109:232:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2434,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"7138:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2433,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"7127:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7127:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":2436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7147:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":2432,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7119:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7119:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2438,"nodeType":"ExpressionStatement","src":"7119:69:11"},{"assignments":[2440,2442],"declarations":[{"constant":false,"id":2440,"mutability":"mutable","name":"success","nameLocation":"7205:7:11","nodeType":"VariableDeclaration","scope":2454,"src":"7200:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2439,"name":"bool","nodeType":"ElementaryTypeName","src":"7200:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2442,"mutability":"mutable","name":"returndata","nameLocation":"7227:10:11","nodeType":"VariableDeclaration","scope":2454,"src":"7214:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2441,"name":"bytes","nodeType":"ElementaryTypeName","src":"7214:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2447,"initialValue":{"arguments":[{"id":2445,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"7261:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2443,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"7241:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7241:19:11","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7241:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7199:67:11"},{"expression":{"arguments":[{"id":2449,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"7300:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2450,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"7309:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2451,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"7321:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2448,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"7283:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7283:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2431,"id":2453,"nodeType":"Return","src":"7276:58:11"}]},"documentation":{"id":2421,"nodeType":"StructuredDocumentation","src":"6774:175:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2455,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6963:20:11","nodeType":"FunctionDefinition","parameters":{"id":2428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2423,"mutability":"mutable","name":"target","nameLocation":"7001:6:11","nodeType":"VariableDeclaration","scope":2455,"src":"6993:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2422,"name":"address","nodeType":"ElementaryTypeName","src":"6993:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2425,"mutability":"mutable","name":"data","nameLocation":"7030:4:11","nodeType":"VariableDeclaration","scope":2455,"src":"7017:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2424,"name":"bytes","nodeType":"ElementaryTypeName","src":"7017:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2427,"mutability":"mutable","name":"errorMessage","nameLocation":"7058:12:11","nodeType":"VariableDeclaration","scope":2455,"src":"7044:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2426,"name":"string","nodeType":"ElementaryTypeName","src":"7044:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6983:93:11"},"returnParameters":{"id":2431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2455,"src":"7095:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2429,"name":"bytes","nodeType":"ElementaryTypeName","src":"7095:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7094:14:11"},"scope":2487,"src":"6954:387:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2485,"nodeType":"Block","src":"7721:582:11","statements":[{"condition":{"id":2467,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"7735:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2483,"nodeType":"Block","src":"7792:505:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2471,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"7876:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7876:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7876:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2481,"nodeType":"Block","src":"8234:53:11","statements":[{"expression":{"arguments":[{"id":2478,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"8259:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2477,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8252:6:11","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8252:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2480,"nodeType":"ExpressionStatement","src":"8252:20:11"}]},"id":2482,"nodeType":"IfStatement","src":"7872:415:11","trueBody":{"id":2476,"nodeType":"Block","src":"7899:329:11","statements":[{"AST":{"nodeType":"YulBlock","src":"8069:145:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8091:40:11","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8120:10:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8114:5:11"},"nodeType":"YulFunctionCall","src":"8114:17:11"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8095:15:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8163:2:11","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8167:10:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8159:3:11"},"nodeType":"YulFunctionCall","src":"8159:19:11"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8180:15:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8152:6:11"},"nodeType":"YulFunctionCall","src":"8152:44:11"},"nodeType":"YulExpressionStatement","src":"8152:44:11"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":2460,"isOffset":false,"isSlot":false,"src":"8120:10:11","valueSize":1},{"declaration":2460,"isOffset":false,"isSlot":false,"src":"8167:10:11","valueSize":1}],"id":2475,"nodeType":"InlineAssembly","src":"8060:154:11"}]}}]},"id":2484,"nodeType":"IfStatement","src":"7731:566:11","trueBody":{"id":2470,"nodeType":"Block","src":"7744:42:11","statements":[{"expression":{"id":2468,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"7765:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2466,"id":2469,"nodeType":"Return","src":"7758:17:11"}]}}]},"documentation":{"id":2456,"nodeType":"StructuredDocumentation","src":"7347:209:11","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":2486,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7570:16:11","nodeType":"FunctionDefinition","parameters":{"id":2463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2458,"mutability":"mutable","name":"success","nameLocation":"7601:7:11","nodeType":"VariableDeclaration","scope":2486,"src":"7596:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2457,"name":"bool","nodeType":"ElementaryTypeName","src":"7596:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2460,"mutability":"mutable","name":"returndata","nameLocation":"7631:10:11","nodeType":"VariableDeclaration","scope":2486,"src":"7618:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2459,"name":"bytes","nodeType":"ElementaryTypeName","src":"7618:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2462,"mutability":"mutable","name":"errorMessage","nameLocation":"7665:12:11","nodeType":"VariableDeclaration","scope":2486,"src":"7651:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2461,"name":"string","nodeType":"ElementaryTypeName","src":"7651:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7586:97:11"},"returnParameters":{"id":2466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2486,"src":"7707:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2464,"name":"bytes","nodeType":"ElementaryTypeName","src":"7707:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7706:14:11"},"scope":2487,"src":"7561:742:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2488,"src":"194:8111:11","usedErrors":[]}],"src":"101:8205:11"},"id":11},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2509]},"id":2510,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2489,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:12"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2490,"nodeType":"StructuredDocumentation","src":"111:496:12","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2509,"linearizedBaseContracts":[2509],"name":"Context","nameLocation":"626:7:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":2498,"nodeType":"Block","src":"702:34:12","statements":[{"expression":{"expression":{"id":2495,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2494,"id":2497,"nodeType":"Return","src":"712:17:12"}]},"id":2499,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:12","nodeType":"FunctionDefinition","parameters":{"id":2491,"nodeType":"ParameterList","parameters":[],"src":"659:2:12"},"returnParameters":{"id":2494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2499,"src":"693:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2492,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:12"},"scope":2509,"src":"640:96:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2507,"nodeType":"Block","src":"809:32:12","statements":[{"expression":{"expression":{"id":2504,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2503,"id":2506,"nodeType":"Return","src":"819:15:12"}]},"id":2508,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:12","nodeType":"FunctionDefinition","parameters":{"id":2500,"nodeType":"ParameterList","parameters":[],"src":"759:2:12"},"returnParameters":{"id":2503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2508,"src":"793:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2501,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:12"},"scope":2509,"src":"742:99:12","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2510,"src":"608:235:12","usedErrors":[]}],"src":"86:758:12"},"id":12},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Strings":[2735]},"id":2736,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2511,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:13"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2512,"nodeType":"StructuredDocumentation","src":"126:34:13","text":" @dev String operations."},"fullyImplemented":true,"id":2735,"linearizedBaseContracts":[2735],"name":"Strings","nameLocation":"169:7:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2515,"mutability":"constant","name":"_HEX_SYMBOLS","nameLocation":"208:12:13","nodeType":"VariableDeclaration","scope":2735,"src":"183:58:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2513,"name":"bytes16","nodeType":"ElementaryTypeName","src":"183:7:13","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"223:18:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2518,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"270:15:13","nodeType":"VariableDeclaration","scope":2735,"src":"247:43:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2516,"name":"uint8","nodeType":"ElementaryTypeName","src":"247:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"288:2:13","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":2596,"nodeType":"Block","src":"463:632:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"665:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"674:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"665:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2532,"nodeType":"IfStatement","src":"661:51:13","trueBody":{"id":2531,"nodeType":"Block","src":"677:35:13","statements":[{"expression":{"hexValue":"30","id":2529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"698:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":2525,"id":2530,"nodeType":"Return","src":"691:10:13"}]}},{"assignments":[2534],"declarations":[{"constant":false,"id":2534,"mutability":"mutable","name":"temp","nameLocation":"729:4:13","nodeType":"VariableDeclaration","scope":2596,"src":"721:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2533,"name":"uint256","nodeType":"ElementaryTypeName","src":"721:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2536,"initialValue":{"id":2535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"736:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"721:20:13"},{"assignments":[2538],"declarations":[{"constant":false,"id":2538,"mutability":"mutable","name":"digits","nameLocation":"759:6:13","nodeType":"VariableDeclaration","scope":2596,"src":"751:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2537,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2539,"nodeType":"VariableDeclarationStatement","src":"751:14:13"},{"body":{"id":2550,"nodeType":"Block","src":"793:57:13","statements":[{"expression":{"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"807:8:13","subExpression":{"id":2543,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"807:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2545,"nodeType":"ExpressionStatement","src":"807:8:13"},{"expression":{"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2546,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2534,"src":"829:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"837:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"829:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2549,"nodeType":"ExpressionStatement","src":"829:10:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2540,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2534,"src":"782:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"790:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"782:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2551,"nodeType":"WhileStatement","src":"775:75:13"},{"assignments":[2553],"declarations":[{"constant":false,"id":2553,"mutability":"mutable","name":"buffer","nameLocation":"872:6:13","nodeType":"VariableDeclaration","scope":2596,"src":"859:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2552,"name":"bytes","nodeType":"ElementaryTypeName","src":"859:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2558,"initialValue":{"arguments":[{"id":2556,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"891:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"881:9:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2554,"name":"bytes","nodeType":"ElementaryTypeName","src":"885:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"881:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"859:39:13"},{"body":{"id":2589,"nodeType":"Block","src":"927:131:13","statements":[{"expression":{"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2562,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"941:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"941:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2565,"nodeType":"ExpressionStatement","src":"941:11:13"},{"expression":{"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2566,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"966:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2568,"indexExpression":{"id":2567,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"973:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"966:14:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":2573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"996:2:13","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"1009:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":2577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1017:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1009:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1001:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2574,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:13","typeDescriptions":{}}},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1001:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"996:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"990:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2571,"name":"uint8","nodeType":"ElementaryTypeName","src":"990:5:13","typeDescriptions":{}}},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"990:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"983:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2569,"name":"bytes1","nodeType":"ElementaryTypeName","src":"983:6:13","typeDescriptions":{}}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"983:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"966:56:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2584,"nodeType":"ExpressionStatement","src":"966:56:13"},{"expression":{"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"1036:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1036:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2588,"nodeType":"ExpressionStatement","src":"1036:11:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"915:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"924:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"915:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2590,"nodeType":"WhileStatement","src":"908:150:13"},{"expression":{"arguments":[{"id":2593,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"1081:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1074:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2591,"name":"string","nodeType":"ElementaryTypeName","src":"1074:6:13","typeDescriptions":{}}},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1074:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2525,"id":2595,"nodeType":"Return","src":"1067:21:13"}]},"documentation":{"id":2519,"nodeType":"StructuredDocumentation","src":"297:90:13","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2597,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"401:8:13","nodeType":"FunctionDefinition","parameters":{"id":2522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2521,"mutability":"mutable","name":"value","nameLocation":"418:5:13","nodeType":"VariableDeclaration","scope":2597,"src":"410:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2520,"name":"uint256","nodeType":"ElementaryTypeName","src":"410:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:15:13"},"returnParameters":{"id":2525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2597,"src":"448:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2523,"name":"string","nodeType":"ElementaryTypeName","src":"448:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"447:15:13"},"scope":2735,"src":"392:703:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2637,"nodeType":"Block","src":"1274:255:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"1288:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1288:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2611,"nodeType":"IfStatement","src":"1284:54:13","trueBody":{"id":2610,"nodeType":"Block","src":"1300:38:13","statements":[{"expression":{"hexValue":"30783030","id":2608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1321:6:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4","typeString":"literal_string \"0x00\""},"value":"0x00"},"functionReturnParameters":2604,"id":2609,"nodeType":"Return","src":"1314:13:13"}]}},{"assignments":[2613],"declarations":[{"constant":false,"id":2613,"mutability":"mutable","name":"temp","nameLocation":"1355:4:13","nodeType":"VariableDeclaration","scope":2637,"src":"1347:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2612,"name":"uint256","nodeType":"ElementaryTypeName","src":"1347:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2615,"initialValue":{"id":2614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"1362:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1347:20:13"},{"assignments":[2617],"declarations":[{"constant":false,"id":2617,"mutability":"mutable","name":"length","nameLocation":"1385:6:13","nodeType":"VariableDeclaration","scope":2637,"src":"1377:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2616,"name":"uint256","nodeType":"ElementaryTypeName","src":"1377:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2619,"initialValue":{"hexValue":"30","id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1394:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1377:18:13"},{"body":{"id":2630,"nodeType":"Block","src":"1423:57:13","statements":[{"expression":{"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1437:8:13","subExpression":{"id":2623,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"1437:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2625,"nodeType":"ExpressionStatement","src":"1437:8:13"},{"expression":{"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2626,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"1459:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1468:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1459:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2629,"nodeType":"ExpressionStatement","src":"1459:10:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2620,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"1412:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1420:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1412:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2631,"nodeType":"WhileStatement","src":"1405:75:13"},{"expression":{"arguments":[{"id":2633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"1508:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2634,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"1515:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2632,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2638,2714,2734],"referencedDeclaration":2714,"src":"1496:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1496:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2604,"id":2636,"nodeType":"Return","src":"1489:33:13"}]},"documentation":{"id":2598,"nodeType":"StructuredDocumentation","src":"1101:94:13","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2638,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1209:11:13","nodeType":"FunctionDefinition","parameters":{"id":2601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2600,"mutability":"mutable","name":"value","nameLocation":"1229:5:13","nodeType":"VariableDeclaration","scope":2638,"src":"1221:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2599,"name":"uint256","nodeType":"ElementaryTypeName","src":"1221:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:15:13"},"returnParameters":{"id":2604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2638,"src":"1259:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2602,"name":"string","nodeType":"ElementaryTypeName","src":"1259:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1258:15:13"},"scope":2735,"src":"1200:329:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2713,"nodeType":"Block","src":"1742:351:13","statements":[{"assignments":[2649],"declarations":[{"constant":false,"id":2649,"mutability":"mutable","name":"buffer","nameLocation":"1765:6:13","nodeType":"VariableDeclaration","scope":2713,"src":"1752:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2648,"name":"bytes","nodeType":"ElementaryTypeName","src":"1752:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2658,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1784:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2653,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"1788:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1784:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1784:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1774:9:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2650,"name":"bytes","nodeType":"ElementaryTypeName","src":"1778:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1774:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1752:47:13"},{"expression":{"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2659,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"1809:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2661,"indexExpression":{"hexValue":"30","id":2660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1816:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1809:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1821:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1809:15:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2664,"nodeType":"ExpressionStatement","src":"1809:15:13"},{"expression":{"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2665,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"1834:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2667,"indexExpression":{"hexValue":"31","id":2666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1834:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1846:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1834:15:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2670,"nodeType":"ExpressionStatement","src":"1834:15:13"},{"body":{"id":2699,"nodeType":"Block","src":"1904:87:13","statements":[{"expression":{"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2685,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"1918:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2687,"indexExpression":{"id":2686,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"1925:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1918:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2688,"name":"_HEX_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"1930:12:13","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2692,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"1943:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1951:3:13","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1943:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1930:25:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1918:37:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2694,"nodeType":"ExpressionStatement","src":"1918:37:13"},{"expression":{"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"1969:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1979:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1969:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2698,"nodeType":"ExpressionStatement","src":"1969:11:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2679,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"1892:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1896:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1892:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2700,"initializationExpression":{"assignments":[2672],"declarations":[{"constant":false,"id":2672,"mutability":"mutable","name":"i","nameLocation":"1872:1:13","nodeType":"VariableDeclaration","scope":2700,"src":"1864:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2671,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2678,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2674,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"1880:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1876:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1876:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1864:26:13"},"loopExpression":{"expression":{"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1899:3:13","subExpression":{"id":2682,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"1901:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2684,"nodeType":"ExpressionStatement","src":"1899:3:13"},"nodeType":"ForStatement","src":"1859:132:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"2008:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2017:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2008:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2020:34:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2701,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2000:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2000:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2707,"nodeType":"ExpressionStatement","src":"2000:55:13"},{"expression":{"arguments":[{"id":2710,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"2079:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2072:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2708,"name":"string","nodeType":"ElementaryTypeName","src":"2072:6:13","typeDescriptions":{}}},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2072:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2647,"id":2712,"nodeType":"Return","src":"2065:21:13"}]},"documentation":{"id":2639,"nodeType":"StructuredDocumentation","src":"1535:112:13","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2714,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1661:11:13","nodeType":"FunctionDefinition","parameters":{"id":2644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2641,"mutability":"mutable","name":"value","nameLocation":"1681:5:13","nodeType":"VariableDeclaration","scope":2714,"src":"1673:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2640,"name":"uint256","nodeType":"ElementaryTypeName","src":"1673:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2643,"mutability":"mutable","name":"length","nameLocation":"1696:6:13","nodeType":"VariableDeclaration","scope":2714,"src":"1688:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2642,"name":"uint256","nodeType":"ElementaryTypeName","src":"1688:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1672:31:13"},"returnParameters":{"id":2647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2714,"src":"1727:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2645,"name":"string","nodeType":"ElementaryTypeName","src":"1727:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1726:15:13"},"scope":2735,"src":"1652:441:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2733,"nodeType":"Block","src":"2318:76:13","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2727,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"2363:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2355:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2725,"name":"uint160","nodeType":"ElementaryTypeName","src":"2355:7:13","typeDescriptions":{}}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2355:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2347:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2723,"name":"uint256","nodeType":"ElementaryTypeName","src":"2347:7:13","typeDescriptions":{}}},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2347:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2730,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"2371:15:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2722,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2638,2714,2734],"referencedDeclaration":2714,"src":"2335:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2335:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2721,"id":2732,"nodeType":"Return","src":"2328:59:13"}]},"documentation":{"id":2715,"nodeType":"StructuredDocumentation","src":"2099:141:13","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2734,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2254:11:13","nodeType":"FunctionDefinition","parameters":{"id":2718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2717,"mutability":"mutable","name":"addr","nameLocation":"2274:4:13","nodeType":"VariableDeclaration","scope":2734,"src":"2266:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2716,"name":"address","nodeType":"ElementaryTypeName","src":"2266:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2265:14:13"},"returnParameters":{"id":2721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2734,"src":"2303:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2719,"name":"string","nodeType":"ElementaryTypeName","src":"2303:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2302:15:13"},"scope":2735,"src":"2245:149:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2736,"src":"161:2235:13","usedErrors":[]}],"src":"101:2296:13"},"id":13},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2759],"IERC165":[2771]},"id":2760,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2737,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:14"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2738,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2760,"sourceUnit":2772,"src":"124:23:14","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2740,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2771,"src":"754:7:14"},"id":2741,"nodeType":"InheritanceSpecifier","src":"754:7:14"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2739,"nodeType":"StructuredDocumentation","src":"149:576:14","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":2759,"linearizedBaseContracts":[2759,2771],"name":"ERC165","nameLocation":"744:6:14","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2770],"body":{"id":2757,"nodeType":"Block","src":"920:64:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2750,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"937:11:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2752,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"957:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2771_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2771_$","typeString":"type(contract IERC165)"}],"id":2751,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2771","typeString":"type(contract IERC165)"}},"id":2754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2749,"id":2756,"nodeType":"Return","src":"930:47:14"}]},"documentation":{"id":2742,"nodeType":"StructuredDocumentation","src":"768:56:14","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2758,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:14","nodeType":"FunctionDefinition","overrides":{"id":2746,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:14"},"parameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2744,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:14","nodeType":"VariableDeclaration","scope":2758,"src":"856:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2743,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:14"},"returnParameters":{"id":2749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2758,"src":"914:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2747,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:14"},"scope":2759,"src":"829:155:14","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2760,"src":"726:260:14","usedErrors":[]}],"src":"99:888:14"},"id":14},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2771]},"id":2772,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2761,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:15"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2762,"nodeType":"StructuredDocumentation","src":"125:279:15","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2771,"linearizedBaseContracts":[2771],"name":"IERC165","nameLocation":"415:7:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2763,"nodeType":"StructuredDocumentation","src":"429:340:15","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2770,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:15","nodeType":"FunctionDefinition","parameters":{"id":2766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2765,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:15","nodeType":"VariableDeclaration","scope":2770,"src":"801:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2764,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:15"},"returnParameters":{"id":2769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2770,"src":"844:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2767,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:15"},"scope":2771,"src":"774:76:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2772,"src":"405:447:15","usedErrors":[]}],"src":"100:753:15"},"id":15},"contracts/DDL.sol":{"ast":{"absolutePath":"contracts/DDL.sol","exportedSymbols":{"Address":[2487],"AggregatorV3Interface":[45],"Context":[2509],"DDL":[4283],"ERC165":[2759],"ERC721":[2031],"IERC165":[2771],"IERC20":[822],"IERC20Permit":[883],"IERC721":[2147],"IERC721Metadata":[2192],"IERC721Receiver":[2165],"IHegicOperationalTreasury":[4305],"IHegicStrategy":[4336],"IPoolDDL":[4366],"Ownable":[158],"SafeERC20":[1164],"Strings":[2735]},"id":4284,"nodeType":"SourceUnit","nodes":[{"id":2773,"literals":["solidity","0.8",".6"],"nodeType":"PragmaDirective","src":"0:22:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":2774,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4284,"sourceUnit":2032,"src":"24:57:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/IHegicOperationalTreasury.sol","file":"./IHegicOperationalTreasury.sol","id":2775,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4284,"sourceUnit":4306,"src":"82:41:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/IHegicStrategy.sol","file":"./IHegicStrategy.sol","id":2776,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4284,"sourceUnit":4337,"src":"124:30:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2777,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4284,"sourceUnit":159,"src":"155:52:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":2778,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4284,"sourceUnit":1165,"src":"208:65:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/IPoolDDL.sol","file":"./IPoolDDL.sol","id":2779,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4284,"sourceUnit":4367,"src":"274:24:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2780,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":158,"src":"316:7:16"},"id":2781,"nodeType":"InheritanceSpecifier","src":"316:7:16"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4283,"linearizedBaseContracts":[4283,158,2509],"name":"DDL","nameLocation":"309:3:16","nodeType":"ContractDefinition","nodes":[{"id":2785,"libraryName":{"id":2782,"name":"SafeERC20","nodeType":"IdentifierPath","referencedDeclaration":1164,"src":"336:9:16"},"nodeType":"UsingForDirective","src":"330:27:16","typeName":{"id":2784,"nodeType":"UserDefinedTypeName","pathNode":{"id":2783,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":822,"src":"350:6:16"},"referencedDeclaration":822,"src":"350:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}}},{"constant":false,"functionSelector":"62965d8e","id":2787,"mutability":"mutable","name":"LTV","nameLocation":"378:3:16","nodeType":"VariableDeclaration","scope":4283,"src":"363:18:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2786,"name":"uint256","nodeType":"ElementaryTypeName","src":"363:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"9d38d064","id":2792,"mutability":"mutable","name":"LTV_DECIMALS","nameLocation":"402:12:16","nodeType":"VariableDeclaration","scope":4283,"src":"387:35:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2788,"name":"uint256","nodeType":"ElementaryTypeName","src":"387:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"417:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"421:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"417:5:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"visibility":"public"},{"constant":false,"functionSelector":"b2016bd4","id":2795,"mutability":"mutable","name":"collateralToken","nameLocation":"444:15:16","nodeType":"VariableDeclaration","scope":4283,"src":"429:30:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2147","typeString":"contract IERC721"},"typeName":{"id":2794,"nodeType":"UserDefinedTypeName","pathNode":{"id":2793,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":2147,"src":"429:7:16"},"referencedDeclaration":2147,"src":"429:7:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2147","typeString":"contract IERC721"}},"visibility":"public"},{"constant":false,"functionSelector":"91319872","id":2798,"mutability":"mutable","name":"operationalPool","nameLocation":"498:15:16","nodeType":"VariableDeclaration","scope":4283,"src":"465:48:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IHegicOperationalTreasury_$4305","typeString":"contract IHegicOperationalTreasury"},"typeName":{"id":2797,"nodeType":"UserDefinedTypeName","pathNode":{"id":2796,"name":"IHegicOperationalTreasury","nodeType":"IdentifierPath","referencedDeclaration":4305,"src":"465:25:16"},"referencedDeclaration":4305,"src":"465:25:16","typeDescriptions":{"typeIdentifier":"t_contract$_IHegicOperationalTreasury_$4305","typeString":"contract IHegicOperationalTreasury"}},"visibility":"public"},{"constant":false,"functionSelector":"89a30271","id":2801,"mutability":"mutable","name":"USDC","nameLocation":"533:4:16","nodeType":"VariableDeclaration","scope":4283,"src":"519:18:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"},"typeName":{"id":2800,"nodeType":"UserDefinedTypeName","pathNode":{"id":2799,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":822,"src":"519:6:16"},"referencedDeclaration":822,"src":"519:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"7c3a00fd","id":2804,"mutability":"mutable","name":"interestRate","nameLocation":"559:12:16","nodeType":"VariableDeclaration","scope":4283,"src":"544:56:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2802,"name":"uint256","nodeType":"ElementaryTypeName","src":"544:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3139303235383735313930323538373534303833383830393630","id":2803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"574:26:16","typeDescriptions":{"typeIdentifier":"t_rational_19025875190258754083880960_by_1","typeString":"int_const 19025875190258754083880960"},"value":"19025875190258754083880960"},"visibility":"public"},{"constant":false,"functionSelector":"66234ffa","id":2809,"mutability":"mutable","name":"INTEREST_RATE_DECIMALS","nameLocation":"621:22:16","nodeType":"VariableDeclaration","scope":4283,"src":"606:46:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2805,"name":"uint256","nodeType":"ElementaryTypeName","src":"606:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000000"},"id":2808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"646:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3330","id":2807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"650:2:16","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"src":"646:6:16","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000000"}},"visibility":"public"},{"constant":false,"functionSelector":"e260d747","id":2811,"mutability":"mutable","name":"minBorrowLimit","nameLocation":"674:14:16","nodeType":"VariableDeclaration","scope":4283,"src":"659:29:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2810,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"4ddde78d","id":2813,"mutability":"mutable","name":"COLLATERAL_DECIMALS","nameLocation":"709:19:16","nodeType":"VariableDeclaration","scope":4283,"src":"694:34:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2812,"name":"uint256","nodeType":"ElementaryTypeName","src":"694:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"425378b4","id":2815,"mutability":"mutable","name":"PriorLiqPriceCoef","nameLocation":"750:17:16","nodeType":"VariableDeclaration","scope":4283,"src":"735:32:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2814,"name":"uint256","nodeType":"ElementaryTypeName","src":"735:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"16f0115b","id":2818,"mutability":"mutable","name":"pool","nameLocation":"790:4:16","nodeType":"VariableDeclaration","scope":4283,"src":"774:20:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolDDL_$4366","typeString":"contract IPoolDDL"},"typeName":{"id":2817,"nodeType":"UserDefinedTypeName","pathNode":{"id":2816,"name":"IPoolDDL","nodeType":"IdentifierPath","referencedDeclaration":4366,"src":"774:8:16"},"referencedDeclaration":4366,"src":"774:8:16","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolDDL_$4366","typeString":"contract IPoolDDL"}},"visibility":"public"},{"canonicalName":"DDL.BorrowedByOption","id":2823,"members":[{"constant":false,"id":2820,"mutability":"mutable","name":"borrowed","nameLocation":"843:8:16","nodeType":"VariableDeclaration","scope":2823,"src":"835:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2819,"name":"uint256","nodeType":"ElementaryTypeName","src":"835:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2822,"mutability":"mutable","name":"newBorrowTimestamp","nameLocation":"869:18:16","nodeType":"VariableDeclaration","scope":2823,"src":"861:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2821,"name":"uint256","nodeType":"ElementaryTypeName","src":"861:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"BorrowedByOption","nameLocation":"808:16:16","nodeType":"StructDefinition","scope":4283,"src":"801:93:16","visibility":"public"},{"canonicalName":"DDL.optionInfo","id":2834,"members":[{"constant":false,"id":2825,"mutability":"mutable","name":"strategyAddress","nameLocation":"935:15:16","nodeType":"VariableDeclaration","scope":2834,"src":"927:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2824,"name":"address","nodeType":"ElementaryTypeName","src":"927:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2827,"mutability":"mutable","name":"amount","nameLocation":"968:6:16","nodeType":"VariableDeclaration","scope":2834,"src":"960:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2826,"name":"uint256","nodeType":"ElementaryTypeName","src":"960:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2829,"mutability":"mutable","name":"strike","nameLocation":"992:6:16","nodeType":"VariableDeclaration","scope":2834,"src":"984:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2828,"name":"uint256","nodeType":"ElementaryTypeName","src":"984:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2831,"mutability":"mutable","name":"expiration","nameLocation":"1016:10:16","nodeType":"VariableDeclaration","scope":2834,"src":"1008:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2830,"name":"uint256","nodeType":"ElementaryTypeName","src":"1008:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2833,"mutability":"mutable","name":"isLong","nameLocation":"1041:6:16","nodeType":"VariableDeclaration","scope":2834,"src":"1036:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2832,"name":"bool","nodeType":"ElementaryTypeName","src":"1036:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"optionInfo","nameLocation":"906:10:16","nodeType":"StructDefinition","scope":4283,"src":"899:155:16","visibility":"public"},{"canonicalName":"DDL.CollateralInfo","id":2840,"members":[{"constant":false,"id":2836,"mutability":"mutable","name":"owner","nameLocation":"1099:5:16","nodeType":"VariableDeclaration","scope":2840,"src":"1091:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2835,"name":"address","nodeType":"ElementaryTypeName","src":"1091:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2839,"mutability":"mutable","name":"strategy","nameLocation":"1125:8:16","nodeType":"VariableDeclaration","scope":2840,"src":"1114:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_optionInfo_$2834_storage_ptr","typeString":"struct DDL.optionInfo"},"typeName":{"id":2838,"nodeType":"UserDefinedTypeName","pathNode":{"id":2837,"name":"optionInfo","nodeType":"IdentifierPath","referencedDeclaration":2834,"src":"1114:10:16"},"referencedDeclaration":2834,"src":"1114:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_optionInfo_$2834_storage_ptr","typeString":"struct DDL.optionInfo"}},"visibility":"internal"}],"name":"CollateralInfo","nameLocation":"1066:14:16","nodeType":"StructDefinition","scope":4283,"src":"1059:81:16","visibility":"public"},{"canonicalName":"DDL.HegicStrategyType","id":2844,"members":[{"id":2841,"name":"Invalid","nameLocation":"1179:7:16","nodeType":"EnumValue","src":"1179:7:16"},{"id":2842,"name":"Long","nameLocation":"1196:4:16","nodeType":"EnumValue","src":"1196:4:16"},{"id":2843,"name":"Short","nameLocation":"1210:5:16","nodeType":"EnumValue","src":"1210:5:16"}],"name":"HegicStrategyType","nameLocation":"1151:17:16","nodeType":"EnumDefinition","src":"1146:75:16"},{"constant":false,"functionSelector":"24a6665e","id":2849,"mutability":"mutable","name":"collateralInfo","nameLocation":"1269:14:16","nodeType":"VariableDeclaration","scope":4283,"src":"1227:56:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CollateralInfo_$2840_storage_$","typeString":"mapping(uint256 => struct DDL.CollateralInfo)"},"typeName":{"id":2848,"keyType":{"id":2845,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1227:34:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CollateralInfo_$2840_storage_$","typeString":"mapping(uint256 => struct DDL.CollateralInfo)"},"valueType":{"id":2847,"nodeType":"UserDefinedTypeName","pathNode":{"id":2846,"name":"CollateralInfo","nodeType":"IdentifierPath","referencedDeclaration":2840,"src":"1246:14:16"},"referencedDeclaration":2840,"src":"1246:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage_ptr","typeString":"struct DDL.CollateralInfo"}}},"visibility":"public"},{"constant":false,"functionSelector":"6c016c00","id":2854,"mutability":"mutable","name":"borrowedByOption","nameLocation":"1333:16:16","nodeType":"VariableDeclaration","scope":4283,"src":"1289:60:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BorrowedByOption_$2823_storage_$","typeString":"mapping(uint256 => struct DDL.BorrowedByOption)"},"typeName":{"id":2853,"keyType":{"id":2850,"name":"uint256","nodeType":"ElementaryTypeName","src":"1297:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1289:36:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BorrowedByOption_$2823_storage_$","typeString":"mapping(uint256 => struct DDL.BorrowedByOption)"},"valueType":{"id":2852,"nodeType":"UserDefinedTypeName","pathNode":{"id":2851,"name":"BorrowedByOption","nodeType":"IdentifierPath","referencedDeclaration":2823,"src":"1308:16:16"},"referencedDeclaration":2823,"src":"1308:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption"}}},"visibility":"public"},{"constant":false,"functionSelector":"357bcef0","id":2859,"mutability":"mutable","name":"strategyType","nameLocation":"1400:12:16","nodeType":"VariableDeclaration","scope":4283,"src":"1355:57:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_HegicStrategyType_$2844_$","typeString":"mapping(address => enum DDL.HegicStrategyType)"},"typeName":{"id":2858,"keyType":{"id":2855,"name":"address","nodeType":"ElementaryTypeName","src":"1363:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1355:37:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_HegicStrategyType_$2844_$","typeString":"mapping(address => enum DDL.HegicStrategyType)"},"valueType":{"id":2857,"nodeType":"UserDefinedTypeName","pathNode":{"id":2856,"name":"HegicStrategyType","nodeType":"IdentifierPath","referencedDeclaration":2844,"src":"1374:17:16"},"referencedDeclaration":2844,"src":"1374:17:16","typeDescriptions":{"typeIdentifier":"t_enum$_HegicStrategyType_$2844","typeString":"enum DDL.HegicStrategyType"}}},"visibility":"public"},{"anonymous":false,"id":2871,"name":"Borrow","nameLocation":"1425:6:16","nodeType":"EventDefinition","parameters":{"id":2870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2861,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1457:4:16","nodeType":"VariableDeclaration","scope":2871,"src":"1441:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2860,"name":"address","nodeType":"ElementaryTypeName","src":"1441:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2863,"indexed":true,"mutability":"mutable","name":"optionID","nameLocation":"1487:8:16","nodeType":"VariableDeclaration","scope":2871,"src":"1471:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2862,"name":"uint256","nodeType":"ElementaryTypeName","src":"1471:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2865,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1513:6:16","nodeType":"VariableDeclaration","scope":2871,"src":"1505:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2864,"name":"uint256","nodeType":"ElementaryTypeName","src":"1505:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2867,"indexed":false,"mutability":"mutable","name":"strategy","nameLocation":"1537:8:16","nodeType":"VariableDeclaration","scope":2871,"src":"1529:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2866,"name":"address","nodeType":"ElementaryTypeName","src":"1529:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2869,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1563:9:16","nodeType":"VariableDeclaration","scope":2871,"src":"1555:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2868,"name":"uint256","nodeType":"ElementaryTypeName","src":"1555:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1431:147:16"},"src":"1419:160:16"},{"anonymous":false,"id":2879,"name":"Repay","nameLocation":"1590:5:16","nodeType":"EventDefinition","parameters":{"id":2878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2873,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1612:4:16","nodeType":"VariableDeclaration","scope":2879,"src":"1596:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2872,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2875,"indexed":true,"mutability":"mutable","name":"optionID","nameLocation":"1634:8:16","nodeType":"VariableDeclaration","scope":2879,"src":"1618:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2874,"name":"uint256","nodeType":"ElementaryTypeName","src":"1618:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2877,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1652:6:16","nodeType":"VariableDeclaration","scope":2879,"src":"1644:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2876,"name":"uint256","nodeType":"ElementaryTypeName","src":"1644:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1595:64:16"},"src":"1584:76:16"},{"anonymous":false,"id":2891,"name":"Liquidate","nameLocation":"1671:9:16","nodeType":"EventDefinition","parameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2881,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1706:4:16","nodeType":"VariableDeclaration","scope":2891,"src":"1690:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2880,"name":"address","nodeType":"ElementaryTypeName","src":"1690:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2883,"indexed":true,"mutability":"mutable","name":"optionID","nameLocation":"1736:8:16","nodeType":"VariableDeclaration","scope":2891,"src":"1720:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2882,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2885,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1762:6:16","nodeType":"VariableDeclaration","scope":2891,"src":"1754:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2884,"name":"uint256","nodeType":"ElementaryTypeName","src":"1754:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2887,"indexed":false,"mutability":"mutable","name":"poolProfit","nameLocation":"1786:10:16","nodeType":"VariableDeclaration","scope":2891,"src":"1778:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2886,"name":"uint256","nodeType":"ElementaryTypeName","src":"1778:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2889,"indexed":false,"mutability":"mutable","name":"liqFee","nameLocation":"1814:6:16","nodeType":"VariableDeclaration","scope":2891,"src":"1806:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2888,"name":"uint256","nodeType":"ElementaryTypeName","src":"1806:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1680:146:16"},"src":"1665:162:16"},{"anonymous":false,"id":2897,"name":"Unlock","nameLocation":"1838:6:16","nodeType":"EventDefinition","parameters":{"id":2896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2893,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1861:4:16","nodeType":"VariableDeclaration","scope":2897,"src":"1845:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2892,"name":"address","nodeType":"ElementaryTypeName","src":"1845:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2895,"indexed":true,"mutability":"mutable","name":"optionID","nameLocation":"1883:8:16","nodeType":"VariableDeclaration","scope":2897,"src":"1867:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2894,"name":"uint256","nodeType":"ElementaryTypeName","src":"1867:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1844:48:16"},"src":"1832:61:16"},{"anonymous":false,"id":2909,"name":"ForcedExercise","nameLocation":"1904:14:16","nodeType":"EventDefinition","parameters":{"id":2908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2899,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1944:4:16","nodeType":"VariableDeclaration","scope":2909,"src":"1928:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2898,"name":"address","nodeType":"ElementaryTypeName","src":"1928:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2901,"indexed":true,"mutability":"mutable","name":"optionID","nameLocation":"1974:8:16","nodeType":"VariableDeclaration","scope":2909,"src":"1958:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2900,"name":"uint256","nodeType":"ElementaryTypeName","src":"1958:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2903,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2000:6:16","nodeType":"VariableDeclaration","scope":2909,"src":"1992:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2902,"name":"uint256","nodeType":"ElementaryTypeName","src":"1992:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2905,"indexed":false,"mutability":"mutable","name":"poolProfit","nameLocation":"2024:10:16","nodeType":"VariableDeclaration","scope":2909,"src":"2016:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2904,"name":"uint256","nodeType":"ElementaryTypeName","src":"2016:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2907,"indexed":false,"mutability":"mutable","name":"liqFee","nameLocation":"2052:6:16","nodeType":"VariableDeclaration","scope":2909,"src":"2044:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2906,"name":"uint256","nodeType":"ElementaryTypeName","src":"2044:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1918:146:16"},"src":"1898:167:16"},{"anonymous":false,"id":2921,"name":"ExerciseByPriorLiqPrice","nameLocation":"2076:23:16","nodeType":"EventDefinition","parameters":{"id":2920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2911,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2125:4:16","nodeType":"VariableDeclaration","scope":2921,"src":"2109:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2910,"name":"address","nodeType":"ElementaryTypeName","src":"2109:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2913,"indexed":true,"mutability":"mutable","name":"optionID","nameLocation":"2155:8:16","nodeType":"VariableDeclaration","scope":2921,"src":"2139:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2912,"name":"uint256","nodeType":"ElementaryTypeName","src":"2139:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2915,"indexed":false,"mutability":"mutable","name":"userReturn","nameLocation":"2181:10:16","nodeType":"VariableDeclaration","scope":2921,"src":"2173:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2914,"name":"uint256","nodeType":"ElementaryTypeName","src":"2173:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2917,"indexed":false,"mutability":"mutable","name":"poolReturn","nameLocation":"2209:10:16","nodeType":"VariableDeclaration","scope":2921,"src":"2201:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2916,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2919,"indexed":false,"mutability":"mutable","name":"liqFee","nameLocation":"2237:6:16","nodeType":"VariableDeclaration","scope":2921,"src":"2229:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2918,"name":"uint256","nodeType":"ElementaryTypeName","src":"2229:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2099:150:16"},"src":"2070:180:16"},{"body":{"id":3023,"nodeType":"Block","src":"2610:598:16","statements":[{"body":{"id":2969,"nodeType":"Block","src":"2679:88:16","statements":[{"expression":{"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2960,"name":"strategyType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"2693:12:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_HegicStrategyType_$2844_$","typeString":"mapping(address => enum DDL.HegicStrategyType)"}},"id":2964,"indexExpression":{"baseExpression":{"id":2961,"name":"_arrLongHegicStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"2706:21:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$4_memory_ptr","typeString":"address[4] memory"}},"id":2963,"indexExpression":{"id":2962,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"2728:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2706:24:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2693:38:16","typeDescriptions":{"typeIdentifier":"t_enum$_HegicStrategyType_$2844","typeString":"enum DDL.HegicStrategyType"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2965,"name":"HegicStrategyType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"2734:17:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_HegicStrategyType_$2844_$","typeString":"type(enum DDL.HegicStrategyType)"}},"id":2966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Long","nodeType":"MemberAccess","referencedDeclaration":2842,"src":"2734:22:16","typeDescriptions":{"typeIdentifier":"t_enum$_HegicStrategyType_$2844","typeString":"enum DDL.HegicStrategyType"}},"src":"2693:63:16","typeDescriptions":{"typeIdentifier":"t_enum$_HegicStrategyType_$2844","typeString":"enum DDL.HegicStrategyType"}},"id":2968,"nodeType":"ExpressionStatement","src":"2693:63:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2953,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"2640:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2954,"name":"_arrLongHegicStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"2644:21:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$4_memory_ptr","typeString":"address[4] memory"}},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2644:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2640:32:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2970,"initializationExpression":{"assignments":[2950],"declarations":[{"constant":false,"id":2950,"mutability":"mutable","name":"i","nameLocation":"2633:1:16","nodeType":"VariableDeclaration","scope":2970,"src":"2625:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2949,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2952,"initialValue":{"hexValue":"30","id":2951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2637:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2625:13:16"},"loopExpression":{"expression":{"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2674:3:16","subExpression":{"id":2957,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"2674:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2959,"nodeType":"ExpressionStatement","src":"2674:3:16"},"nodeType":"ForStatement","src":"2620:147:16"},{"body":{"id":2991,"nodeType":"Block","src":"2836:90:16","statements":[{"expression":{"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2982,"name":"strategyType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"2850:12:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_HegicStrategyType_$2844_$","typeString":"mapping(address => enum DDL.HegicStrategyType)"}},"id":2986,"indexExpression":{"baseExpression":{"id":2983,"name":"_arrShortHegicStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"2863:22:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$4_memory_ptr","typeString":"address[4] memory"}},"id":2985,"indexExpression":{"id":2984,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"2886:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2863:25:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2850:39:16","typeDescriptions":{"typeIdentifier":"t_enum$_HegicStrategyType_$2844","typeString":"enum DDL.HegicStrategyType"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2987,"name":"HegicStrategyType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"2892:17:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_HegicStrategyType_$2844_$","typeString":"type(enum DDL.HegicStrategyType)"}},"id":2988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Short","nodeType":"MemberAccess","referencedDeclaration":2843,"src":"2892:23:16","typeDescriptions":{"typeIdentifier":"t_enum$_HegicStrategyType_$2844","typeString":"enum DDL.HegicStrategyType"}},"src":"2850:65:16","typeDescriptions":{"typeIdentifier":"t_enum$_HegicStrategyType_$2844","typeString":"enum DDL.HegicStrategyType"}},"id":2990,"nodeType":"ExpressionStatement","src":"2850:65:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2975,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"2796:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2976,"name":"_arrShortHegicStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"2800:22:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$4_memory_ptr","typeString":"address[4] memory"}},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2800:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2796:33:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2992,"initializationExpression":{"assignments":[2972],"declarations":[{"constant":false,"id":2972,"mutability":"mutable","name":"i","nameLocation":"2789:1:16","nodeType":"VariableDeclaration","scope":2992,"src":"2781:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2971,"name":"uint256","nodeType":"ElementaryTypeName","src":"2781:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2974,"initialValue":{"hexValue":"30","id":2973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2781:13:16"},"loopExpression":{"expression":{"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2831:3:16","subExpression":{"id":2979,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"2831:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2981,"nodeType":"ExpressionStatement","src":"2831:3:16"},"nodeType":"ForStatement","src":"2776:150:16"},{"expression":{"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2993,"name":"collateralToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"2935:15:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2147","typeString":"contract IERC721"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2994,"name":"_collateralToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"2953:16:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2147","typeString":"contract IERC721"}},"src":"2935:34:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2147","typeString":"contract IERC721"}},"id":2996,"nodeType":"ExpressionStatement","src":"2935:34:16"},{"expression":{"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2997,"name":"operationalPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"2979:15:16","typeDescriptions":{"typeIdentifier":"t_contract$_IHegicOperationalTreasury_$4305","typeString":"contract IHegicOperationalTreasury"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2998,"name":"_operationalPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"2997:16:16","typeDescriptions":{"typeIdentifier":"t_contract$_IHegicOperationalTreasury_$4305","typeString":"contract IHegicOperationalTreasury"}},"src":"2979:34:16","typeDescriptions":{"typeIdentifier":"t_contract$_IHegicOperationalTreasury_$4305","typeString":"contract IHegicOperationalTreasury"}},"id":3000,"nodeType":"ExpressionStatement","src":"2979:34:16"},{"expression":{"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3001,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"3023:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3002,"name":"_USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"3030:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"src":"3023:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"id":3004,"nodeType":"ExpressionStatement","src":"3023:12:16"},{"expression":{"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3005,"name":"minBorrowLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"3045:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3006,"name":"_minBorrowLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"3062:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3045:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3008,"nodeType":"ExpressionStatement","src":"3045:32:16"},{"expression":{"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3009,"name":"LTV","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"3087:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3010,"name":"_ltv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"3093:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3087:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3012,"nodeType":"ExpressionStatement","src":"3087:10:16"},{"expression":{"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3013,"name":"COLLATERAL_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"3107:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3129:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3015,"name":"_COLLATERAL_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"3133:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3129:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3107:46:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3018,"nodeType":"ExpressionStatement","src":"3107:46:16"},{"expression":{"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3019,"name":"PriorLiqPriceCoef","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"3163:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3020,"name":"_PriorLiqPriceCoef","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"3183:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3163:38:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3022,"nodeType":"ExpressionStatement","src":"3163:38:16"}]},"id":3024,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2925,"mutability":"mutable","name":"_arrLongHegicStrategy","nameLocation":"2295:21:16","nodeType":"VariableDeclaration","scope":3024,"src":"2277:39:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$4_memory_ptr","typeString":"address[4]"},"typeName":{"baseType":{"id":2922,"name":"address","nodeType":"ElementaryTypeName","src":"2277:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2924,"length":{"hexValue":"34","id":2923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"ArrayTypeName","src":"2277:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$4_storage_ptr","typeString":"address[4]"}},"visibility":"internal"},{"constant":false,"id":2929,"mutability":"mutable","name":"_arrShortHegicStrategy","nameLocation":"2344:22:16","nodeType":"VariableDeclaration","scope":3024,"src":"2326:40:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$4_memory_ptr","typeString":"address[4]"},"typeName":{"baseType":{"id":2926,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2928,"length":{"hexValue":"34","id":2927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2334:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"ArrayTypeName","src":"2326:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$4_storage_ptr","typeString":"address[4]"}},"visibility":"internal"},{"constant":false,"id":2932,"mutability":"mutable","name":"_collateralToken","nameLocation":"2384:16:16","nodeType":"VariableDeclaration","scope":3024,"src":"2376:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2147","typeString":"contract IERC721"},"typeName":{"id":2931,"nodeType":"UserDefinedTypeName","pathNode":{"id":2930,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":2147,"src":"2376:7:16"},"referencedDeclaration":2147,"src":"2376:7:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2147","typeString":"contract IERC721"}},"visibility":"internal"},{"constant":false,"id":2935,"mutability":"mutable","name":"_operationalPool","nameLocation":"2436:16:16","nodeType":"VariableDeclaration","scope":3024,"src":"2410:42:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IHegicOperationalTreasury_$4305","typeString":"contract IHegicOperationalTreasury"},"typeName":{"id":2934,"nodeType":"UserDefinedTypeName","pathNode":{"id":2933,"name":"IHegicOperationalTreasury","nodeType":"IdentifierPath","referencedDeclaration":4305,"src":"2410:25:16"},"referencedDeclaration":4305,"src":"2410:25:16","typeDescriptions":{"typeIdentifier":"t_contract$_IHegicOperationalTreasury_$4305","typeString":"contract IHegicOperationalTreasury"}},"visibility":"internal"},{"constant":false,"id":2938,"mutability":"mutable","name":"_USDC","nameLocation":"2469:5:16","nodeType":"VariableDeclaration","scope":3024,"src":"2462:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"},"typeName":{"id":2937,"nodeType":"UserDefinedTypeName","pathNode":{"id":2936,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":822,"src":"2462:6:16"},"referencedDeclaration":822,"src":"2462:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2940,"mutability":"mutable","name":"_minBorrowLimit","nameLocation":"2492:15:16","nodeType":"VariableDeclaration","scope":3024,"src":"2484:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2939,"name":"uint256","nodeType":"ElementaryTypeName","src":"2484:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2942,"mutability":"mutable","name":"_ltv","nameLocation":"2525:4:16","nodeType":"VariableDeclaration","scope":3024,"src":"2517:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2941,"name":"uint256","nodeType":"ElementaryTypeName","src":"2517:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2944,"mutability":"mutable","name":"_COLLATERAL_DECIMALS","nameLocation":"2547:20:16","nodeType":"VariableDeclaration","scope":3024,"src":"2539:28:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2943,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2946,"mutability":"mutable","name":"_PriorLiqPriceCoef","nameLocation":"2585:18:16","nodeType":"VariableDeclaration","scope":3024,"src":"2577:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2945,"name":"uint256","nodeType":"ElementaryTypeName","src":"2577:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2267:342:16"},"returnParameters":{"id":2948,"nodeType":"ParameterList","parameters":[],"src":"2610:0:16"},"scope":4283,"src":"2256:952:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3042,"nodeType":"Block","src":"3264:77:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"3282:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"38303030","id":3033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3291:4:16","typeDescriptions":{"typeIdentifier":"t_rational_8000_by_1","typeString":"int_const 8000"},"value":"8000"},"src":"3282:13:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c69642076616c7565","id":3035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3297:15:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_2da5f8e96415ce1cf56ac601f863bdc4eb6ccd09c4a394ab789ec97e291c93e2","typeString":"literal_string \"invalid value\""},"value":"invalid value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2da5f8e96415ce1cf56ac601f863bdc4eb6ccd09c4a394ab789ec97e291c93e2","typeString":"literal_string \"invalid value\""}],"id":3031,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3274:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3274:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3037,"nodeType":"ExpressionStatement","src":"3274:39:16"},{"expression":{"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3038,"name":"LTV","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"3323:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"3329:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3323:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3041,"nodeType":"ExpressionStatement","src":"3323:11:16"}]},"functionSelector":"b13de266","id":3043,"implemented":true,"kind":"function","modifiers":[{"id":3029,"kind":"modifierInvocation","modifierName":{"id":3028,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"3254:9:16"},"nodeType":"ModifierInvocation","src":"3254:9:16"}],"name":"setLTV","nameLocation":"3223:6:16","nodeType":"FunctionDefinition","parameters":{"id":3027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3026,"mutability":"mutable","name":"value","nameLocation":"3238:5:16","nodeType":"VariableDeclaration","scope":3043,"src":"3230:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3025,"name":"uint256","nodeType":"ElementaryTypeName","src":"3230:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3229:15:16"},"returnParameters":{"id":3030,"nodeType":"ParameterList","parameters":[],"src":"3264:0:16"},"scope":4283,"src":"3214:127:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3054,"nodeType":"Block","src":"3406:37:16","statements":[{"expression":{"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3050,"name":"interestRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"3416:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"3431:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3416:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3053,"nodeType":"ExpressionStatement","src":"3416:20:16"}]},"functionSelector":"5f84f302","id":3055,"implemented":true,"kind":"function","modifiers":[{"id":3048,"kind":"modifierInvocation","modifierName":{"id":3047,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"3396:9:16"},"nodeType":"ModifierInvocation","src":"3396:9:16"}],"name":"setInterestRate","nameLocation":"3356:15:16","nodeType":"FunctionDefinition","parameters":{"id":3046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3045,"mutability":"mutable","name":"value","nameLocation":"3380:5:16","nodeType":"VariableDeclaration","scope":3055,"src":"3372:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3044,"name":"uint256","nodeType":"ElementaryTypeName","src":"3372:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3371:15:16"},"returnParameters":{"id":3049,"nodeType":"ParameterList","parameters":[],"src":"3406:0:16"},"scope":4283,"src":"3347:96:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3066,"nodeType":"Block","src":"3516:47:16","statements":[{"expression":{"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3062,"name":"INTEREST_RATE_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"3526:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"3551:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3526:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3065,"nodeType":"ExpressionStatement","src":"3526:30:16"}]},"functionSelector":"587a03c2","id":3067,"implemented":true,"kind":"function","modifiers":[{"id":3060,"kind":"modifierInvocation","modifierName":{"id":3059,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"3506:9:16"},"nodeType":"ModifierInvocation","src":"3506:9:16"}],"name":"setInterestRateDecimals","nameLocation":"3458:23:16","nodeType":"FunctionDefinition","parameters":{"id":3058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3057,"mutability":"mutable","name":"value","nameLocation":"3490:5:16","nodeType":"VariableDeclaration","scope":3067,"src":"3482:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3056,"name":"uint256","nodeType":"ElementaryTypeName","src":"3482:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3481:15:16"},"returnParameters":{"id":3061,"nodeType":"ParameterList","parameters":[],"src":"3516:0:16"},"scope":4283,"src":"3449:114:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3078,"nodeType":"Block","src":"3630:39:16","statements":[{"expression":{"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3074,"name":"minBorrowLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"3640:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"3657:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3640:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3077,"nodeType":"ExpressionStatement","src":"3640:22:16"}]},"functionSelector":"c3707709","id":3079,"implemented":true,"kind":"function","modifiers":[{"id":3072,"kind":"modifierInvocation","modifierName":{"id":3071,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"3620:9:16"},"nodeType":"ModifierInvocation","src":"3620:9:16"}],"name":"setMinBorrowLimit","nameLocation":"3578:17:16","nodeType":"FunctionDefinition","parameters":{"id":3070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3069,"mutability":"mutable","name":"value","nameLocation":"3604:5:16","nodeType":"VariableDeclaration","scope":3079,"src":"3596:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3068,"name":"uint256","nodeType":"ElementaryTypeName","src":"3596:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3595:15:16"},"returnParameters":{"id":3073,"nodeType":"ParameterList","parameters":[],"src":"3630:0:16"},"scope":4283,"src":"3569:100:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3092,"nodeType":"Block","src":"3726:39:16","statements":[{"expression":{"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3086,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"3736:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolDDL_$4366","typeString":"contract IPoolDDL"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"3752:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3087,"name":"IPoolDDL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"3743:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPoolDDL_$4366_$","typeString":"type(contract IPoolDDL)"}},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3743:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPoolDDL_$4366","typeString":"contract IPoolDDL"}},"src":"3736:22:16","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolDDL_$4366","typeString":"contract IPoolDDL"}},"id":3091,"nodeType":"ExpressionStatement","src":"3736:22:16"}]},"functionSelector":"4437152a","id":3093,"implemented":true,"kind":"function","modifiers":[{"id":3084,"kind":"modifierInvocation","modifierName":{"id":3083,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"3716:9:16"},"nodeType":"ModifierInvocation","src":"3716:9:16"}],"name":"setPool","nameLocation":"3684:7:16","nodeType":"FunctionDefinition","parameters":{"id":3082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3081,"mutability":"mutable","name":"value","nameLocation":"3700:5:16","nodeType":"VariableDeclaration","scope":3093,"src":"3692:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3080,"name":"address","nodeType":"ElementaryTypeName","src":"3692:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3691:15:16"},"returnParameters":{"id":3085,"nodeType":"ParameterList","parameters":[],"src":"3726:0:16"},"scope":4283,"src":"3675:90:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3224,"nodeType":"Block","src":"3812:1218:16","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3099,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"3830:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolDDL_$4366","typeString":"contract IPoolDDL"}},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"openDeDeLend","nodeType":"MemberAccess","referencedDeclaration":4365,"src":"3830:17:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bool_$","typeString":"function () view external returns (bool)"}},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3830:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7061757365446544654c656e64","id":3102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3851:15:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_53c8d4b505fc4a6062e9676e98edcc8d1715f5765c94eec04006fa629d8118d0","typeString":"literal_string \"pauseDeDeLend\""},"value":"pauseDeDeLend"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_53c8d4b505fc4a6062e9676e98edcc8d1715f5765c94eec04006fa629d8118d0","typeString":"literal_string \"pauseDeDeLend\""}],"id":3098,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3822:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3822:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3104,"nodeType":"ExpressionStatement","src":"3822:45:16"},{"assignments":[3109,3111,null,null,3113],"declarations":[{"constant":false,"id":3109,"mutability":"mutable","name":"state","nameLocation":"3938:5:16","nodeType":"VariableDeclaration","scope":3224,"src":"3891:52:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_LockedLiquidityState_$4288","typeString":"enum IHegicOperationalTreasury.LockedLiquidityState"},"typeName":{"id":3108,"nodeType":"UserDefinedTypeName","pathNode":{"id":3107,"name":"IHegicOperationalTreasury.LockedLiquidityState","nodeType":"IdentifierPath","referencedDeclaration":4288,"src":"3891:46:16"},"referencedDeclaration":4288,"src":"3891:46:16","typeDescriptions":{"typeIdentifier":"t_enum$_LockedLiquidityState_$4288","typeString":"enum IHegicOperationalTreasury.LockedLiquidityState"}},"visibility":"internal"},{"constant":false,"id":3111,"mutability":"mutable","name":"strategy","nameLocation":"3965:8:16","nodeType":"VariableDeclaration","scope":3224,"src":"3957:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3110,"name":"address","nodeType":"ElementaryTypeName","src":"3957:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},null,null,{"constant":false,"id":3113,"mutability":"mutable","name":"expiration","nameLocation":"4022:10:16","nodeType":"VariableDeclaration","scope":3224,"src":"4015:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3112,"name":"uint32","nodeType":"ElementaryTypeName","src":"4015:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":3118,"initialValue":{"arguments":[{"id":3116,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"4077:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3114,"name":"operationalPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"4045:15:16","typeDescriptions":{"typeIdentifier":"t_contract$_IHegicOperationalTreasury_$4305","typeString":"contract IHegicOperationalTreasury"}},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"lockedLiquidity","nodeType":"MemberAccess","referencedDeclaration":4304,"src":"4045:31:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_enum$_LockedLiquidityState_$4288_$_t_address_$_t_uint128_$_t_uint128_$_t_uint32_$","typeString":"function (uint256) view external returns (enum IHegicOperationalTreasury.LockedLiquidityState,address,uint128,uint128,uint32)"}},"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4045:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_enum$_LockedLiquidityState_$4288_$_t_address_$_t_uint128_$_t_uint128_$_t_uint32_$","typeString":"tuple(enum IHegicOperationalTreasury.LockedLiquidityState,address,uint128,uint128,uint32)"}},"nodeType":"VariableDeclarationStatement","src":"3877:203:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3120,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4098:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"4098:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3124,"name":"expiration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"4125:10:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":3123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4117:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3122,"name":"uint256","nodeType":"ElementaryTypeName","src":"4117:7:16","typeDescriptions":{}}},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4117:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3600_by_1","typeString":"int_const 3600"},"id":3128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3630","id":3126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:2:16","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3630","id":3127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4142:2:16","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"4139:5:16","typeDescriptions":{"typeIdentifier":"t_rational_3600_by_1","typeString":"int_const 3600"}},"src":"4117:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4098:46:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f6f206c617465","id":3131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4146:10:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d9653d91002129bb8471bce01d6c8bb486aa66e48f407a0dd073e6b452e1b6e5","typeString":"literal_string \"too late\""},"value":"too late"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d9653d91002129bb8471bce01d6c8bb486aa66e48f407a0dd073e6b452e1b6e5","typeString":"literal_string \"too late\""}],"id":3119,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4090:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4090:67:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3133,"nodeType":"ExpressionStatement","src":"4090:67:16"},{"assignments":[3135,3137],"declarations":[{"constant":false,"id":3135,"mutability":"mutable","name":"amount","nameLocation":"4176:6:16","nodeType":"VariableDeclaration","scope":3224,"src":"4168:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3134,"name":"uint128","nodeType":"ElementaryTypeName","src":"4168:7:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3137,"mutability":"mutable","name":"strike","nameLocation":"4192:6:16","nodeType":"VariableDeclaration","scope":3224,"src":"4184:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3136,"name":"uint128","nodeType":"ElementaryTypeName","src":"4184:7:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":3144,"initialValue":{"arguments":[{"id":3142,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"4253:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3139,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"4217:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3138,"name":"IHegicStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"4202:14:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHegicStrategy_$4336_$","typeString":"type(contract IHegicStrategy)"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4202:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IHegicStrategy_$4336","typeString":"contract IHegicStrategy"}},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"strategyData","nodeType":"MemberAccess","referencedDeclaration":4335,"src":"4202:50:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint128_$_t_uint128_$","typeString":"function (uint256) view external returns (uint128,uint128)"}},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4202:54:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint128_$_t_uint128_$","typeString":"tuple(uint128,uint128)"}},"nodeType":"VariableDeclarationStatement","src":"4167:89:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_LockedLiquidityState_$4288","typeString":"enum IHegicOperationalTreasury.LockedLiquidityState"},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3146,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"4287:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_LockedLiquidityState_$4288","typeString":"enum IHegicOperationalTreasury.LockedLiquidityState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":3147,"name":"IHegicOperationalTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"4296:25:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHegicOperationalTreasury_$4305_$","typeString":"type(contract IHegicOperationalTreasury)"}},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"LockedLiquidityState","nodeType":"MemberAccess","referencedDeclaration":4288,"src":"4296:46:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_LockedLiquidityState_$4288_$","typeString":"type(enum IHegicOperationalTreasury.LockedLiquidityState)"}},"id":3149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Locked","nodeType":"MemberAccess","referencedDeclaration":4287,"src":"4296:53:16","typeDescriptions":{"typeIdentifier":"t_enum$_LockedLiquidityState_$4288","typeString":"enum IHegicOperationalTreasury.LockedLiquidityState"}},"src":"4287:62:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f7074696f6e20697320616374697665","id":3151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4363:18:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4a7780333aa6b9ee5ac5e7ddd39defe393b59dd6021792a090a033c7ac9ff4","typeString":"literal_string \"option is active\""},"value":"option is active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4b4a7780333aa6b9ee5ac5e7ddd39defe393b59dd6021792a090a033c7ac9ff4","typeString":"literal_string \"option is active\""}],"id":3145,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4266:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4266:125:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3153,"nodeType":"ExpressionStatement","src":"4266:125:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3157,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"4433:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3155,"name":"collateralToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"4409:15:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2147","typeString":"contract IERC721"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":2080,"src":"4409:23:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4409:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3159,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4440:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4440:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4409:41:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"796f75206e6f74206f776e6572","id":3162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4452:15:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cbf950b70ead57203d569b7512bd24ad0ab13af8ce0c7ee3f1e9df1f544a0ae1","typeString":"literal_string \"you not owner\""},"value":"you not owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cbf950b70ead57203d569b7512bd24ad0ab13af8ce0c7ee3f1e9df1f544a0ae1","typeString":"literal_string \"you not owner\""}],"id":3154,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4401:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4401:67:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3164,"nodeType":"ExpressionStatement","src":"4401:67:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_HegicStrategyType_$2844","typeString":"enum DDL.HegicStrategyType"},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3166,"name":"strategyType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"4499:12:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_HegicStrategyType_$2844_$","typeString":"mapping(address => enum DDL.HegicStrategyType)"}},"id":3168,"indexExpression":{"id":3167,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"4512:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4499:22:16","typeDescriptions":{"typeIdentifier":"t_enum$_HegicStrategyType_$2844","typeString":"enum DDL.HegicStrategyType"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3169,"name":"HegicStrategyType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"4525:17:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_HegicStrategyType_$2844_$","typeString":"type(enum DDL.HegicStrategyType)"}},"id":3170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Invalid","nodeType":"MemberAccess","referencedDeclaration":2841,"src":"4525:25:16","typeDescriptions":{"typeIdentifier":"t_enum$_HegicStrategyType_$2844","typeString":"enum DDL.HegicStrategyType"}},"src":"4499:51:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7374726174656779206e6f7420737570706f72746564","id":3172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4564:24:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_926a54757c68bd6260dd61923e3390bf053a7ffa44eb6de969b1d147dcb979dc","typeString":"literal_string \"strategy not supported\""},"value":"strategy not supported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_926a54757c68bd6260dd61923e3390bf053a7ffa44eb6de969b1d147dcb979dc","typeString":"literal_string \"strategy not supported\""}],"id":3165,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4478:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4478:120:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3174,"nodeType":"ExpressionStatement","src":"4478:120:16"},{"expression":{"arguments":[{"expression":{"id":3178,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4637:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4637:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3182,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4657:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_DDL_$4283","typeString":"contract DDL"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DDL_$4283","typeString":"contract DDL"}],"id":3181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4649:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3180,"name":"address","nodeType":"ElementaryTypeName","src":"4649:7:16","typeDescriptions":{}}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4649:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3184,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"4664:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3175,"name":"collateralToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"4608:15:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2147","typeString":"contract IERC721"}},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"4608:28:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4608:59:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3186,"nodeType":"ExpressionStatement","src":"4608:59:16"},{"assignments":[3188],"declarations":[{"constant":false,"id":3188,"mutability":"mutable","name":"isLong","nameLocation":"4682:6:16","nodeType":"VariableDeclaration","scope":3224,"src":"4677:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3187,"name":"bool","nodeType":"ElementaryTypeName","src":"4677:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3198,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_enum$_HegicStrategyType_$2844","typeString":"enum DDL.HegicStrategyType"},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3189,"name":"strategyType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"4691:12:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_HegicStrategyType_$2844_$","typeString":"mapping(address => enum DDL.HegicStrategyType)"}},"id":3191,"indexExpression":{"id":3190,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"4704:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4691:22:16","typeDescriptions":{"typeIdentifier":"t_enum$_HegicStrategyType_$2844","typeString":"enum DDL.HegicStrategyType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3192,"name":"HegicStrategyType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"4717:17:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_HegicStrategyType_$2844_$","typeString":"type(enum DDL.HegicStrategyType)"}},"id":3193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Long","nodeType":"MemberAccess","referencedDeclaration":2842,"src":"4717:22:16","typeDescriptions":{"typeIdentifier":"t_enum$_HegicStrategyType_$2844","typeString":"enum DDL.HegicStrategyType"}},"src":"4691:48:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"66616c7365","id":3196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4748:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4691:62:16","trueExpression":{"hexValue":"74727565","id":3195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4742:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4677:76:16"},{"expression":{"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3199,"name":"collateralInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"4763:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CollateralInfo_$2840_storage_$","typeString":"mapping(uint256 => struct DDL.CollateralInfo storage ref)"}},"id":3201,"indexExpression":{"id":3200,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"4778:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4763:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage","typeString":"struct DDL.CollateralInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3203,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4812:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4812:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3206,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"4864:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3209,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"4898:6:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":3208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4890:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3207,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:16","typeDescriptions":{}}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4890:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3213,"name":"strike","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"4931:6:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":3212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4923:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3211,"name":"uint256","nodeType":"ElementaryTypeName","src":"4923:7:16","typeDescriptions":{}}},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4923:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3217,"name":"expiration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"4964:10:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":3216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4956:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3215,"name":"uint256","nodeType":"ElementaryTypeName","src":"4956:7:16","typeDescriptions":{}}},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4956:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3219,"name":"isLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"4993:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3205,"name":"optionInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"4836:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_optionInfo_$2834_storage_ptr_$","typeString":"type(struct DDL.optionInfo storage pointer)"}},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4836:177:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_optionInfo_$2834_memory_ptr","typeString":"struct DDL.optionInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_optionInfo_$2834_memory_ptr","typeString":"struct DDL.optionInfo memory"}],"id":3202,"name":"CollateralInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"4784:14:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_CollateralInfo_$2840_storage_ptr_$","typeString":"type(struct DDL.CollateralInfo storage pointer)"}},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4784:239:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_memory_ptr","typeString":"struct DDL.CollateralInfo memory"}},"src":"4763:260:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage","typeString":"struct DDL.CollateralInfo storage ref"}},"id":3223,"nodeType":"ExpressionStatement","src":"4763:260:16"}]},"functionSelector":"8ac2edc1","id":3225,"implemented":true,"kind":"function","modifiers":[],"name":"lockOption","nameLocation":"3780:10:16","nodeType":"FunctionDefinition","parameters":{"id":3096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3095,"mutability":"mutable","name":"id","nameLocation":"3799:2:16","nodeType":"VariableDeclaration","scope":3225,"src":"3791:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3094,"name":"uint256","nodeType":"ElementaryTypeName","src":"3791:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3790:12:16"},"returnParameters":{"id":3097,"nodeType":"ParameterList","parameters":[],"src":"3812:0:16"},"scope":4283,"src":"3771:1259:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3241,"nodeType":"Block","src":"5102:65:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3233,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"5135:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3232,"name":"profitByOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"5120:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5120:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3235,"name":"LTV_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"5141:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5120:33:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3237,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5119:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3238,"name":"LTV","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"5157:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5119:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3231,"id":3240,"nodeType":"Return","src":"5112:48:16"}]},"functionSelector":"9e3aa5b1","id":3242,"implemented":true,"kind":"function","modifiers":[],"name":"maxBorrowLimit","nameLocation":"5045:14:16","nodeType":"FunctionDefinition","parameters":{"id":3228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3227,"mutability":"mutable","name":"id","nameLocation":"5068:2:16","nodeType":"VariableDeclaration","scope":3242,"src":"5060:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3226,"name":"uint256","nodeType":"ElementaryTypeName","src":"5060:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5059:12:16"},"returnParameters":{"id":3231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3242,"src":"5093:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3229,"name":"uint256","nodeType":"ElementaryTypeName","src":"5093:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5092:9:16"},"scope":4283,"src":"5036:131:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3428,"nodeType":"Block","src":"5226:1638:16","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3250,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"5244:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolDDL_$4366","typeString":"contract IPoolDDL"}},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"openDeDeLend","nodeType":"MemberAccess","referencedDeclaration":4365,"src":"5244:17:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bool_$","typeString":"function () view external returns (bool)"}},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5244:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7061757365446544654c656e64","id":3253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5265:15:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_53c8d4b505fc4a6062e9676e98edcc8d1715f5765c94eec04006fa629d8118d0","typeString":"literal_string \"pauseDeDeLend\""},"value":"pauseDeDeLend"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_53c8d4b505fc4a6062e9676e98edcc8d1715f5765c94eec04006fa629d8118d0","typeString":"literal_string \"pauseDeDeLend\""}],"id":3249,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5236:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5236:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3255,"nodeType":"ExpressionStatement","src":"5236:45:16"},{"assignments":[3258],"declarations":[{"constant":false,"id":3258,"mutability":"mutable","name":"data","nameLocation":"5316:4:16","nodeType":"VariableDeclaration","scope":3428,"src":"5291:29:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption"},"typeName":{"id":3257,"nodeType":"UserDefinedTypeName","pathNode":{"id":3256,"name":"BorrowedByOption","nodeType":"IdentifierPath","referencedDeclaration":2823,"src":"5291:16:16"},"referencedDeclaration":2823,"src":"5291:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption"}},"visibility":"internal"}],"id":3262,"initialValue":{"baseExpression":{"id":3259,"name":"borrowedByOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"5323:16:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BorrowedByOption_$2823_storage_$","typeString":"mapping(uint256 => struct DDL.BorrowedByOption storage ref)"}},"id":3261,"indexExpression":{"id":3260,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"5340:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5323:20:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage","typeString":"struct DDL.BorrowedByOption storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5291:52:16"},{"assignments":[3264],"declarations":[{"constant":false,"id":3264,"mutability":"mutable","name":"maxLimit","nameLocation":"5361:8:16","nodeType":"VariableDeclaration","scope":3428,"src":"5353:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3263,"name":"uint256","nodeType":"ElementaryTypeName","src":"5353:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3268,"initialValue":{"arguments":[{"id":3266,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"5387:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3265,"name":"maxBorrowLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"5372:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5372:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5353:37:16"},{"assignments":[3273,null,null,null,null],"declarations":[{"constant":false,"id":3273,"mutability":"mutable","name":"state","nameLocation":"5461:5:16","nodeType":"VariableDeclaration","scope":3428,"src":"5414:52:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_LockedLiquidityState_$4288","typeString":"enum IHegicOperationalTreasury.LockedLiquidityState"},"typeName":{"id":3272,"nodeType":"UserDefinedTypeName","pathNode":{"id":3271,"name":"IHegicOperationalTreasury.LockedLiquidityState","nodeType":"IdentifierPath","referencedDeclaration":4288,"src":"5414:46:16"},"referencedDeclaration":4288,"src":"5414:46:16","typeDescriptions":{"typeIdentifier":"t_enum$_LockedLiquidityState_$4288","typeString":"enum IHegicOperationalTreasury.LockedLiquidityState"}},"visibility":"internal"},null,null,null,null],"id":3278,"initialValue":{"arguments":[{"id":3276,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"5555:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3274,"name":"operationalPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"5523:15:16","typeDescriptions":{"typeIdentifier":"t_contract$_IHegicOperationalTreasury_$4305","typeString":"contract IHegicOperationalTreasury"}},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"lockedLiquidity","nodeType":"MemberAccess","referencedDeclaration":4304,"src":"5523:31:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_enum$_LockedLiquidityState_$4288_$_t_address_$_t_uint128_$_t_uint128_$_t_uint32_$","typeString":"function (uint256) view external returns (enum IHegicOperationalTreasury.LockedLiquidityState,address,uint128,uint128,uint32)"}},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5523:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_enum$_LockedLiquidityState_$4288_$_t_address_$_t_uint128_$_t_uint128_$_t_uint32_$","typeString":"tuple(enum IHegicOperationalTreasury.LockedLiquidityState,address,uint128,uint128,uint32)"}},"nodeType":"VariableDeclarationStatement","src":"5400:158:16"},{"assignments":[3280],"declarations":[{"constant":false,"id":3280,"mutability":"mutable","name":"totalBalance","nameLocation":"5576:12:16","nodeType":"VariableDeclaration","scope":3428,"src":"5568:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3279,"name":"uint256","nodeType":"ElementaryTypeName","src":"5568:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3284,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3281,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"5591:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolDDL_$4366","typeString":"contract IPoolDDL"}},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getTotalBalance","nodeType":"MemberAccess","referencedDeclaration":4350,"src":"5591:20:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5591:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5568:45:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3286,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"5632:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3287,"name":"minBorrowLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"5642:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5632:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"616d6f756e74206c657373206d696e426f72726f774c696d6974","id":3289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5658:28:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_83fd2a98ff41d2cec5b50c37fb0bbd45d5fc012e1ba0d2538cbf2a4cc6d59b6a","typeString":"literal_string \"amount less minBorrowLimit\""},"value":"amount less minBorrowLimit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_83fd2a98ff41d2cec5b50c37fb0bbd45d5fc012e1ba0d2538cbf2a4cc6d59b6a","typeString":"literal_string \"amount less minBorrowLimit\""}],"id":3285,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5624:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5624:63:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3291,"nodeType":"ExpressionStatement","src":"5624:63:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3293,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"5705:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":3294,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"5714:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption storage pointer"}},"id":3295,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrowed","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"5714:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5705:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3297,"name":"maxLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"5731:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5705:34:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"616d6f756e74202b20646174612e626f72726f776564206c657373206d61784c696d6974","id":3299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5741:38:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_0b9b509653f27f971bea4c13bb5b5abfce613b87e1bdc4b69df24067d2fbe846","typeString":"literal_string \"amount + data.borrowed less maxLimit\""},"value":"amount + data.borrowed less maxLimit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0b9b509653f27f971bea4c13bb5b5abfce613b87e1bdc4b69df24067d2fbe846","typeString":"literal_string \"amount + data.borrowed less maxLimit\""}],"id":3292,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5697:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5697:83:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3301,"nodeType":"ExpressionStatement","src":"5697:83:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_LockedLiquidityState_$4288","typeString":"enum IHegicOperationalTreasury.LockedLiquidityState"},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3303,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"5798:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_LockedLiquidityState_$4288","typeString":"enum IHegicOperationalTreasury.LockedLiquidityState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":3304,"name":"IHegicOperationalTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"5807:25:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHegicOperationalTreasury_$4305_$","typeString":"type(contract IHegicOperationalTreasury)"}},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"LockedLiquidityState","nodeType":"MemberAccess","referencedDeclaration":4288,"src":"5807:46:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_LockedLiquidityState_$4288_$","typeString":"type(enum IHegicOperationalTreasury.LockedLiquidityState)"}},"id":3306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Locked","nodeType":"MemberAccess","referencedDeclaration":4287,"src":"5807:53:16","typeDescriptions":{"typeIdentifier":"t_enum$_LockedLiquidityState_$4288","typeString":"enum IHegicOperationalTreasury.LockedLiquidityState"}},"src":"5798:62:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c6964207374617465","id":3308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5862:15:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_de12ab57a0daa634f488033127dcfe962870ebf8c9e1b7fcbcea396d614f7ebb","typeString":"literal_string \"invalid state\""},"value":"invalid state"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_de12ab57a0daa634f488033127dcfe962870ebf8c9e1b7fcbcea396d614f7ebb","typeString":"literal_string \"invalid state\""}],"id":3302,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5790:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5790:88:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3310,"nodeType":"ExpressionStatement","src":"5790:88:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3312,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5896:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5896:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"baseExpression":{"id":3314,"name":"collateralInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"5910:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CollateralInfo_$2840_storage_$","typeString":"mapping(uint256 => struct DDL.CollateralInfo storage ref)"}},"id":3316,"indexExpression":{"id":3315,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"5925:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5910:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage","typeString":"struct DDL.CollateralInfo storage ref"}},"id":3317,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2836,"src":"5910:24:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5896:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"796f7520617265206e6f7420746865206f776e6572","id":3319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5936:23:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_89a3d2cdd8534687d72382851c0df038982c5ac6bd4b7d04f64810684712218f","typeString":"literal_string \"you are not the owner\""},"value":"you are not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_89a3d2cdd8534687d72382851c0df038982c5ac6bd4b7d04f64810684712218f","typeString":"literal_string \"you are not the owner\""}],"id":3311,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5888:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5888:72:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3321,"nodeType":"ExpressionStatement","src":"5888:72:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3323,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"5978:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3324,"name":"totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"5988:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5978:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7468657265206973206e6f7420656e6f756768206d6f6e657920696e2074686520706f6f6c","id":3326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6002:39:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_febe8c27865ec1cd0744dae89b54d7d193e7b1234f143f6959afd09101e3067f","typeString":"literal_string \"there is not enough money in the pool\""},"value":"there is not enough money in the pool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_febe8c27865ec1cd0744dae89b54d7d193e7b1234f143f6959afd09101e3067f","typeString":"literal_string \"there is not enough money in the pool\""}],"id":3322,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5970:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5970:72:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3328,"nodeType":"ExpressionStatement","src":"5970:72:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3330,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6060:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"6060:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"baseExpression":{"id":3332,"name":"collateralInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"6079:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CollateralInfo_$2840_storage_$","typeString":"mapping(uint256 => struct DDL.CollateralInfo storage ref)"}},"id":3334,"indexExpression":{"id":3333,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"6094:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6079:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage","typeString":"struct DDL.CollateralInfo storage ref"}},"id":3335,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"strategy","nodeType":"MemberAccess","referencedDeclaration":2839,"src":"6079:27:16","typeDescriptions":{"typeIdentifier":"t_struct$_optionInfo_$2834_storage","typeString":"struct DDL.optionInfo storage ref"}},"id":3336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"expiration","nodeType":"MemberAccess","referencedDeclaration":2831,"src":"6079:38:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3600_by_1","typeString":"int_const 3600"},"id":3339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3630","id":3337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6120:2:16","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3630","id":3338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6123:2:16","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"6120:5:16","typeDescriptions":{"typeIdentifier":"t_rational_3600_by_1","typeString":"int_const 3600"}},"src":"6079:46:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6060:65:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f6f206c617465","id":3342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6127:10:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d9653d91002129bb8471bce01d6c8bb486aa66e48f407a0dd073e6b452e1b6e5","typeString":"literal_string \"too late\""},"value":"too late"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d9653d91002129bb8471bce01d6c8bb486aa66e48f407a0dd073e6b452e1b6e5","typeString":"literal_string \"too late\""}],"id":3329,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6052:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6052:86:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3344,"nodeType":"ExpressionStatement","src":"6052:86:16"},{"condition":{"expression":{"expression":{"baseExpression":{"id":3345,"name":"collateralInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"6152:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CollateralInfo_$2840_storage_$","typeString":"mapping(uint256 => struct DDL.CollateralInfo storage ref)"}},"id":3347,"indexExpression":{"id":3346,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"6167:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6152:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage","typeString":"struct DDL.CollateralInfo storage ref"}},"id":3348,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"strategy","nodeType":"MemberAccess","referencedDeclaration":2839,"src":"6152:27:16","typeDescriptions":{"typeIdentifier":"t_struct$_optionInfo_$2834_storage","typeString":"struct DDL.optionInfo storage ref"}},"id":3349,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"isLong","nodeType":"MemberAccess","referencedDeclaration":2833,"src":"6152:34:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3373,"nodeType":"Block","src":"6288:95:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3364,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"6323:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3363,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"6310:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6310:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[{"id":3367,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"6343:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3366,"name":"priorLiqPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"6329:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6329:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6310:36:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"74686520707269636520697320746f6f2068696768","id":3370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6348:23:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_84ff6248860ff3ae576a1007948f4d59f9ce511219f65af0fe0e24464b1f433b","typeString":"literal_string \"the price is too high\""},"value":"the price is too high"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_84ff6248860ff3ae576a1007948f4d59f9ce511219f65af0fe0e24464b1f433b","typeString":"literal_string \"the price is too high\""}],"id":3362,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6302:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6302:70:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3372,"nodeType":"ExpressionStatement","src":"6302:70:16"}]},"id":3374,"nodeType":"IfStatement","src":"6148:235:16","trueBody":{"id":3361,"nodeType":"Block","src":"6188:94:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3352,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"6223:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3351,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"6210:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6210:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"id":3355,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"6243:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3354,"name":"priorLiqPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"6229:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6229:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6210:36:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"74686520707269636520697320746f6f206c6f77","id":3358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6248:22:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6edeaa141b7d3e77f4ea518839c3262911a7b9795d395c09a6a820e2445f4aaf","typeString":"literal_string \"the price is too low\""},"value":"the price is too low"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6edeaa141b7d3e77f4ea518839c3262911a7b9795d395c09a6a820e2445f4aaf","typeString":"literal_string \"the price is too low\""}],"id":3350,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6202:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6202:69:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3360,"nodeType":"ExpressionStatement","src":"6202:69:16"}]}},{"assignments":[3376],"declarations":[{"constant":false,"id":3376,"mutability":"mutable","name":"upcomingFee","nameLocation":"6400:11:16","nodeType":"VariableDeclaration","scope":3428,"src":"6392:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3375,"name":"uint256","nodeType":"ElementaryTypeName","src":"6392:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3380,"initialValue":{"arguments":[{"id":3378,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"6435:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3377,"name":"calculateUpcomingFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"6414:20:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6414:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6392:46:16"},{"expression":{"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3381,"name":"borrowedByOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"6448:16:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BorrowedByOption_$2823_storage_$","typeString":"mapping(uint256 => struct DDL.BorrowedByOption storage ref)"}},"id":3383,"indexExpression":{"id":3382,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"6465:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6448:20:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage","typeString":"struct DDL.BorrowedByOption storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3385,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"6501:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":3386,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"6510:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption storage pointer"}},"id":3387,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrowed","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"6510:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6501:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3389,"name":"upcomingFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"6526:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6501:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3391,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6551:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"6551:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3384,"name":"BorrowedByOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"6471:16:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_BorrowedByOption_$2823_storage_ptr_$","typeString":"type(struct DDL.BorrowedByOption storage pointer)"}},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6471:105:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_memory_ptr","typeString":"struct DDL.BorrowedByOption memory"}},"src":"6448:128:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage","typeString":"struct DDL.BorrowedByOption storage ref"}},"id":3395,"nodeType":"ExpressionStatement","src":"6448:128:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3399,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"6606:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3400,"name":"upcomingFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"6615:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6606:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3396,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"6586:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolDDL_$4366","typeString":"contract IPoolDDL"}},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"addTotalLocked","nodeType":"MemberAccess","referencedDeclaration":4355,"src":"6586:19:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6586:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3403,"nodeType":"ExpressionStatement","src":"6586:41:16"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":3407,"name":"collateralInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"6647:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CollateralInfo_$2840_storage_$","typeString":"mapping(uint256 => struct DDL.CollateralInfo storage ref)"}},"id":3409,"indexExpression":{"id":3408,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"6662:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6647:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage","typeString":"struct DDL.CollateralInfo storage ref"}},"id":3410,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2836,"src":"6647:24:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3411,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"6673:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3404,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"6637:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolDDL_$4366","typeString":"contract IPoolDDL"}},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"send","nodeType":"MemberAccess","referencedDeclaration":4345,"src":"6637:9:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6637:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3413,"nodeType":"ExpressionStatement","src":"6637:43:16"},{"eventCall":{"arguments":[{"expression":{"id":3415,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6715:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6715:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3417,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"6739:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3418,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"6755:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"baseExpression":{"id":3419,"name":"collateralInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"6775:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CollateralInfo_$2840_storage_$","typeString":"mapping(uint256 => struct DDL.CollateralInfo storage ref)"}},"id":3421,"indexExpression":{"id":3420,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"6790:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6775:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage","typeString":"struct DDL.CollateralInfo storage ref"}},"id":3422,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"strategy","nodeType":"MemberAccess","referencedDeclaration":2839,"src":"6775:27:16","typeDescriptions":{"typeIdentifier":"t_struct$_optionInfo_$2834_storage","typeString":"struct DDL.optionInfo storage ref"}},"id":3423,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"strategyAddress","nodeType":"MemberAccess","referencedDeclaration":2825,"src":"6775:43:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3424,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6832:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"6832:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3414,"name":"Borrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"6695:6:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,address,uint256)"}},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6695:162:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3427,"nodeType":"EmitStatement","src":"6690:167:16"}]},"functionSelector":"0ecbcdab","id":3429,"implemented":true,"kind":"function","modifiers":[],"name":"borrow","nameLocation":"5182:6:16","nodeType":"FunctionDefinition","parameters":{"id":3247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"id","nameLocation":"5197:2:16","nodeType":"VariableDeclaration","scope":3429,"src":"5189:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3243,"name":"uint256","nodeType":"ElementaryTypeName","src":"5189:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3246,"mutability":"mutable","name":"amount","nameLocation":"5209:6:16","nodeType":"VariableDeclaration","scope":3429,"src":"5201:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3245,"name":"uint256","nodeType":"ElementaryTypeName","src":"5201:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5188:28:16"},"returnParameters":{"id":3248,"nodeType":"ParameterList","parameters":[],"src":"5226:0:16"},"scope":4283,"src":"5173:1691:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3535,"nodeType":"Block","src":"6910:661:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":3436,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"6938:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3435,"name":"loanState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"6928:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6928:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c6964207072696365","id":3438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6943:15:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_67f3816c2c3c9d26e2c2164d44f506222f0a5a80a1dd5d735b15247affdd74e5","typeString":"literal_string \"invalid price\""},"value":"invalid price"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67f3816c2c3c9d26e2c2164d44f506222f0a5a80a1dd5d735b15247affdd74e5","typeString":"literal_string \"invalid price\""}],"id":3434,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6920:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6920:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3440,"nodeType":"ExpressionStatement","src":"6920:39:16"},{"assignments":[3443],"declarations":[{"constant":false,"id":3443,"mutability":"mutable","name":"data","nameLocation":"6994:4:16","nodeType":"VariableDeclaration","scope":3535,"src":"6969:29:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption"},"typeName":{"id":3442,"nodeType":"UserDefinedTypeName","pathNode":{"id":3441,"name":"BorrowedByOption","nodeType":"IdentifierPath","referencedDeclaration":2823,"src":"6969:16:16"},"referencedDeclaration":2823,"src":"6969:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption"}},"visibility":"internal"}],"id":3447,"initialValue":{"baseExpression":{"id":3444,"name":"borrowedByOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"7001:16:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BorrowedByOption_$2823_storage_$","typeString":"mapping(uint256 => struct DDL.BorrowedByOption storage ref)"}},"id":3446,"indexExpression":{"id":3445,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"7018:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7001:20:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage","typeString":"struct DDL.BorrowedByOption storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6969:52:16"},{"assignments":[3449],"declarations":[{"constant":false,"id":3449,"mutability":"mutable","name":"profit","nameLocation":"7039:6:16","nodeType":"VariableDeclaration","scope":3535,"src":"7031:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3448,"name":"uint256","nodeType":"ElementaryTypeName","src":"7031:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3453,"initialValue":{"arguments":[{"id":3451,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"7063:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3450,"name":"profitByOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"7048:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7048:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7031:35:16"},{"expression":{"arguments":[{"id":3455,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"7091:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3454,"name":"exerciseOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"7076:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7076:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3457,"nodeType":"ExpressionStatement","src":"7076:18:16"},{"assignments":[3459],"declarations":[{"constant":false,"id":3459,"mutability":"mutable","name":"diff","nameLocation":"7112:4:16","nodeType":"VariableDeclaration","scope":3535,"src":"7104:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3458,"name":"uint256","nodeType":"ElementaryTypeName","src":"7104:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3461,"initialValue":{"hexValue":"30","id":3460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7119:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7104:16:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3462,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"7134:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":3463,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"7143:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption storage pointer"}},"id":3464,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrowed","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"7143:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7134:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3513,"nodeType":"Block","src":"7339:61:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":3508,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"7375:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolDDL_$4366","typeString":"contract IPoolDDL"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IPoolDDL_$4366","typeString":"contract IPoolDDL"}],"id":3507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7367:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3506,"name":"address","nodeType":"ElementaryTypeName","src":"7367:7:16","typeDescriptions":{}}},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7367:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3510,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"7382:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3503,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"7353:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":789,"src":"7353:13:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7353:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3512,"nodeType":"ExpressionStatement","src":"7353:36:16"}]},"id":3514,"nodeType":"IfStatement","src":"7130:270:16","trueBody":{"id":3502,"nodeType":"Block","src":"7158:175:16","statements":[{"expression":{"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3466,"name":"diff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"7172:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3467,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"7179:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":3468,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"7188:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption storage pointer"}},"id":3469,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrowed","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"7188:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7179:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7172:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3472,"nodeType":"ExpressionStatement","src":"7172:29:16"},{"expression":{"arguments":[{"arguments":[{"id":3478,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"7237:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolDDL_$4366","typeString":"contract IPoolDDL"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IPoolDDL_$4366","typeString":"contract IPoolDDL"}],"id":3477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7229:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3476,"name":"address","nodeType":"ElementaryTypeName","src":"7229:7:16","typeDescriptions":{}}},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7229:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3480,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"7244:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption storage pointer"}},"id":3481,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrowed","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"7244:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3482,"name":"diff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"7258:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3930","id":3483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7263:2:16","typeDescriptions":{"typeIdentifier":"t_rational_90_by_1","typeString":"int_const 90"},"value":"90"},"src":"7258:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":3485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7266:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"7258:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7244:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3473,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"7215:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":789,"src":"7215:13:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7215:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3489,"nodeType":"ExpressionStatement","src":"7215:55:16"},{"expression":{"arguments":[{"expression":{"id":3493,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7298:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7298:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3495,"name":"diff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"7310:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":3496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7315:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7310:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":3498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7318:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"7310:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3490,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"7284:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":789,"src":"7284:13:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7284:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3501,"nodeType":"ExpressionStatement","src":"7284:38:16"}]}},{"eventCall":{"arguments":[{"expression":{"baseExpression":{"id":3516,"name":"collateralInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"7437:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CollateralInfo_$2840_storage_$","typeString":"mapping(uint256 => struct DDL.CollateralInfo storage ref)"}},"id":3518,"indexExpression":{"id":3517,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"7452:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7437:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage","typeString":"struct DDL.CollateralInfo storage ref"}},"id":3519,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2836,"src":"7437:24:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3520,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"7475:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3521,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"7491:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption storage pointer"}},"id":3522,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrowed","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"7491:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3523,"name":"diff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"7518:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3930","id":3524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7523:2:16","typeDescriptions":{"typeIdentifier":"t_rational_90_by_1","typeString":"int_const 90"},"value":"90"},"src":"7518:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":3526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7526:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"7518:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3528,"name":"diff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"7543:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":3529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7548:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7543:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":3531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"7543:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3515,"name":"Liquidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"7414:9:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256,uint256)"}},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7414:150:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3534,"nodeType":"EmitStatement","src":"7409:155:16"}]},"functionSelector":"415f1240","id":3536,"implemented":true,"kind":"function","modifiers":[],"name":"liquidate","nameLocation":"6879:9:16","nodeType":"FunctionDefinition","parameters":{"id":3432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3431,"mutability":"mutable","name":"id","nameLocation":"6897:2:16","nodeType":"VariableDeclaration","scope":3536,"src":"6889:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3430,"name":"uint256","nodeType":"ElementaryTypeName","src":"6889:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6888:12:16"},"returnParameters":{"id":3433,"nodeType":"ParameterList","parameters":[],"src":"6910:0:16"},"scope":4283,"src":"6870:701:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3650,"nodeType":"Block","src":"7622:724:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3542,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7653:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"7653:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"baseExpression":{"id":3544,"name":"collateralInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"7671:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CollateralInfo_$2840_storage_$","typeString":"mapping(uint256 => struct DDL.CollateralInfo storage ref)"}},"id":3546,"indexExpression":{"id":3545,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"7686:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7671:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage","typeString":"struct DDL.CollateralInfo storage ref"}},"id":3547,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"strategy","nodeType":"MemberAccess","referencedDeclaration":2839,"src":"7671:27:16","typeDescriptions":{"typeIdentifier":"t_struct$_optionInfo_$2834_storage","typeString":"struct DDL.optionInfo storage ref"}},"id":3548,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"expiration","nodeType":"MemberAccess","referencedDeclaration":2831,"src":"7671:38:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1800_by_1","typeString":"int_const 1800"},"id":3551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3330","id":3549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7712:2:16","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3630","id":3550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7717:2:16","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"7712:7:16","typeDescriptions":{"typeIdentifier":"t_rational_1800_by_1","typeString":"int_const 1800"}},"src":"7671:48:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7653:66:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3541,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7632:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7632:97:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3555,"nodeType":"ExpressionStatement","src":"7632:97:16"},{"assignments":[3558],"declarations":[{"constant":false,"id":3558,"mutability":"mutable","name":"data","nameLocation":"7764:4:16","nodeType":"VariableDeclaration","scope":3650,"src":"7739:29:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption"},"typeName":{"id":3557,"nodeType":"UserDefinedTypeName","pathNode":{"id":3556,"name":"BorrowedByOption","nodeType":"IdentifierPath","referencedDeclaration":2823,"src":"7739:16:16"},"referencedDeclaration":2823,"src":"7739:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption"}},"visibility":"internal"}],"id":3562,"initialValue":{"baseExpression":{"id":3559,"name":"borrowedByOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"7771:16:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BorrowedByOption_$2823_storage_$","typeString":"mapping(uint256 => struct DDL.BorrowedByOption storage ref)"}},"id":3561,"indexExpression":{"id":3560,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"7788:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7771:20:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage","typeString":"struct DDL.BorrowedByOption storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7739:52:16"},{"assignments":[3564],"declarations":[{"constant":false,"id":3564,"mutability":"mutable","name":"profit","nameLocation":"7809:6:16","nodeType":"VariableDeclaration","scope":3650,"src":"7801:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3563,"name":"uint256","nodeType":"ElementaryTypeName","src":"7801:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3568,"initialValue":{"arguments":[{"id":3566,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"7833:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3565,"name":"profitByOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"7818:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7818:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7801:35:16"},{"expression":{"arguments":[{"id":3570,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"7861:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3569,"name":"exerciseOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"7846:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7846:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3572,"nodeType":"ExpressionStatement","src":"7846:18:16"},{"assignments":[3574],"declarations":[{"constant":false,"id":3574,"mutability":"mutable","name":"diff","nameLocation":"7882:4:16","nodeType":"VariableDeclaration","scope":3650,"src":"7874:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3573,"name":"uint256","nodeType":"ElementaryTypeName","src":"7874:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3576,"initialValue":{"hexValue":"30","id":3575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7889:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7874:16:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3577,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"7904:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":3578,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"7913:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption storage pointer"}},"id":3579,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrowed","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"7913:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7904:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3628,"nodeType":"Block","src":"8109:61:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":3623,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"8145:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolDDL_$4366","typeString":"contract IPoolDDL"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IPoolDDL_$4366","typeString":"contract IPoolDDL"}],"id":3622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8137:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3621,"name":"address","nodeType":"ElementaryTypeName","src":"8137:7:16","typeDescriptions":{}}},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8137:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3625,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"8152:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3618,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"8123:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":789,"src":"8123:13:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8123:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3627,"nodeType":"ExpressionStatement","src":"8123:36:16"}]},"id":3629,"nodeType":"IfStatement","src":"7900:270:16","trueBody":{"id":3617,"nodeType":"Block","src":"7928:175:16","statements":[{"expression":{"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3581,"name":"diff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"7942:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3582,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"7949:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":3583,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"7958:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption storage pointer"}},"id":3584,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrowed","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"7958:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7949:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7942:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3587,"nodeType":"ExpressionStatement","src":"7942:29:16"},{"expression":{"arguments":[{"arguments":[{"id":3593,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"8007:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolDDL_$4366","typeString":"contract IPoolDDL"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IPoolDDL_$4366","typeString":"contract IPoolDDL"}],"id":3592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7999:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3591,"name":"address","nodeType":"ElementaryTypeName","src":"7999:7:16","typeDescriptions":{}}},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7999:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3595,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"8014:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption storage pointer"}},"id":3596,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrowed","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"8014:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3597,"name":"diff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"8028:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3930","id":3598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8033:2:16","typeDescriptions":{"typeIdentifier":"t_rational_90_by_1","typeString":"int_const 90"},"value":"90"},"src":"8028:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":3600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8036:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"8028:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8014:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3588,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"7985:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":789,"src":"7985:13:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7985:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3604,"nodeType":"ExpressionStatement","src":"7985:55:16"},{"expression":{"arguments":[{"expression":{"id":3608,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8068:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"8068:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3610,"name":"diff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"8080:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":3611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8085:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"8080:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":3613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8088:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"8080:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3605,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"8054:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":789,"src":"8054:13:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8054:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3616,"nodeType":"ExpressionStatement","src":"8054:38:16"}]}},{"eventCall":{"arguments":[{"expression":{"baseExpression":{"id":3631,"name":"collateralInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"8212:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CollateralInfo_$2840_storage_$","typeString":"mapping(uint256 => struct DDL.CollateralInfo storage ref)"}},"id":3633,"indexExpression":{"id":3632,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"8227:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8212:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage","typeString":"struct DDL.CollateralInfo storage ref"}},"id":3634,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2836,"src":"8212:24:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3635,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"8250:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3636,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"8266:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption storage pointer"}},"id":3637,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrowed","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"8266:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3638,"name":"diff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"8293:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3930","id":3639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8298:2:16","typeDescriptions":{"typeIdentifier":"t_rational_90_by_1","typeString":"int_const 90"},"value":"90"},"src":"8293:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":3641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8301:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"8293:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3643,"name":"diff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"8318:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":3644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"8318:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":3646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8326:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"8318:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3630,"name":"ForcedExercise","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"8184:14:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256,uint256)"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8184:155:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3649,"nodeType":"EmitStatement","src":"8179:160:16"}]},"functionSelector":"01d73641","id":3651,"implemented":true,"kind":"function","modifiers":[],"name":"forcedExercise","nameLocation":"7586:14:16","nodeType":"FunctionDefinition","parameters":{"id":3539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3538,"mutability":"mutable","name":"id","nameLocation":"7609:2:16","nodeType":"VariableDeclaration","scope":3651,"src":"7601:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3537,"name":"uint256","nodeType":"ElementaryTypeName","src":"7601:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7600:12:16"},"returnParameters":{"id":3540,"nodeType":"ParameterList","parameters":[],"src":"7622:0:16"},"scope":4283,"src":"7577:769:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3753,"nodeType":"Block","src":"8406:638:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":3658,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"8449:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3657,"name":"loanStateByPriorLiqPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"8424:24:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8424:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c6964207072696365","id":3660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8454:15:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_67f3816c2c3c9d26e2c2164d44f506222f0a5a80a1dd5d735b15247affdd74e5","typeString":"literal_string \"invalid price\""},"value":"invalid price"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67f3816c2c3c9d26e2c2164d44f506222f0a5a80a1dd5d735b15247affdd74e5","typeString":"literal_string \"invalid price\""}],"id":3656,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8416:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8416:54:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3662,"nodeType":"ExpressionStatement","src":"8416:54:16"},{"assignments":[3665],"declarations":[{"constant":false,"id":3665,"mutability":"mutable","name":"data","nameLocation":"8505:4:16","nodeType":"VariableDeclaration","scope":3753,"src":"8480:29:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption"},"typeName":{"id":3664,"nodeType":"UserDefinedTypeName","pathNode":{"id":3663,"name":"BorrowedByOption","nodeType":"IdentifierPath","referencedDeclaration":2823,"src":"8480:16:16"},"referencedDeclaration":2823,"src":"8480:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption"}},"visibility":"internal"}],"id":3669,"initialValue":{"baseExpression":{"id":3666,"name":"borrowedByOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"8512:16:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BorrowedByOption_$2823_storage_$","typeString":"mapping(uint256 => struct DDL.BorrowedByOption storage ref)"}},"id":3668,"indexExpression":{"id":3667,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"8529:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8512:20:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage","typeString":"struct DDL.BorrowedByOption storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8480:52:16"},{"assignments":[3671],"declarations":[{"constant":false,"id":3671,"mutability":"mutable","name":"profit","nameLocation":"8550:6:16","nodeType":"VariableDeclaration","scope":3753,"src":"8542:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3670,"name":"uint256","nodeType":"ElementaryTypeName","src":"8542:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3675,"initialValue":{"arguments":[{"id":3673,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"8574:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3672,"name":"profitByOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"8559:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8559:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8542:35:16"},{"expression":{"arguments":[{"id":3677,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"8602:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3676,"name":"exerciseOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"8587:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8587:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3679,"nodeType":"ExpressionStatement","src":"8587:18:16"},{"expression":{"arguments":[{"arguments":[{"id":3685,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"8637:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolDDL_$4366","typeString":"contract IPoolDDL"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IPoolDDL_$4366","typeString":"contract IPoolDDL"}],"id":3684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8629:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3683,"name":"address","nodeType":"ElementaryTypeName","src":"8629:7:16","typeDescriptions":{}}},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8629:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3687,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"8644:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption storage pointer"}},"id":3688,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrowed","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"8644:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3680,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"8615:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":789,"src":"8615:13:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8615:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3690,"nodeType":"ExpressionStatement","src":"8615:43:16"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":3694,"name":"collateralInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"8682:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CollateralInfo_$2840_storage_$","typeString":"mapping(uint256 => struct DDL.CollateralInfo storage ref)"}},"id":3696,"indexExpression":{"id":3695,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"8697:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8682:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage","typeString":"struct DDL.CollateralInfo storage ref"}},"id":3697,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2836,"src":"8682:24:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3698,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"8708:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3699,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"8718:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption storage pointer"}},"id":3700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrowed","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"8718:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3701,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"8734:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption storage pointer"}},"id":3702,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrowed","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"8734:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":3703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8748:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"8734:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":3705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8751:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"8734:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8718:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3708,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8717:38:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8708:47:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3691,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"8668:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":789,"src":"8668:13:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8668:88:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3711,"nodeType":"ExpressionStatement","src":"8668:88:16"},{"expression":{"arguments":[{"expression":{"id":3715,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8780:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"8780:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3717,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"8792:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption storage pointer"}},"id":3718,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrowed","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"8792:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":3719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"8792:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":3721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8809:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"8792:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3712,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"8766:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":789,"src":"8766:13:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8766:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3724,"nodeType":"ExpressionStatement","src":"8766:47:16"},{"eventCall":{"arguments":[{"expression":{"baseExpression":{"id":3726,"name":"collateralInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"8865:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CollateralInfo_$2840_storage_$","typeString":"mapping(uint256 => struct DDL.CollateralInfo storage ref)"}},"id":3728,"indexExpression":{"id":3727,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"8880:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8865:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage","typeString":"struct DDL.CollateralInfo storage ref"}},"id":3729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2836,"src":"8865:24:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3730,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"8903:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3731,"name":"profit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"8919:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3732,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"8929:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption storage pointer"}},"id":3733,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrowed","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"8929:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3734,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"8945:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption storage pointer"}},"id":3735,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrowed","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"8945:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":3736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8959:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"8945:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":3738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8962:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"8945:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8929:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3741,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8928:38:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8919:47:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3743,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"8980:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption storage pointer"}},"id":3744,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrowed","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"8980:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3745,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"9007:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption storage pointer"}},"id":3746,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrowed","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"9007:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":3747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9021:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"9007:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":3749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9024:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"9007:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3725,"name":"ExerciseByPriorLiqPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"8828:23:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256,uint256)"}},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8828:209:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3752,"nodeType":"EmitStatement","src":"8823:214:16"}]},"functionSelector":"333daaa0","id":3754,"implemented":true,"kind":"function","modifiers":[],"name":"exerciseByPriorLiqPrice","nameLocation":"8361:23:16","nodeType":"FunctionDefinition","parameters":{"id":3654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3653,"mutability":"mutable","name":"id","nameLocation":"8393:2:16","nodeType":"VariableDeclaration","scope":3754,"src":"8385:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3652,"name":"uint256","nodeType":"ElementaryTypeName","src":"8385:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8384:12:16"},"returnParameters":{"id":3655,"nodeType":"ParameterList","parameters":[],"src":"8406:0:16"},"scope":4283,"src":"8352:692:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3795,"nodeType":"Block","src":"9162:296:16","statements":[{"assignments":[3763],"declarations":[{"constant":false,"id":3763,"mutability":"mutable","name":"data","nameLocation":"9197:4:16","nodeType":"VariableDeclaration","scope":3795,"src":"9172:29:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption"},"typeName":{"id":3762,"nodeType":"UserDefinedTypeName","pathNode":{"id":3761,"name":"BorrowedByOption","nodeType":"IdentifierPath","referencedDeclaration":2823,"src":"9172:16:16"},"referencedDeclaration":2823,"src":"9172:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption"}},"visibility":"internal"}],"id":3767,"initialValue":{"baseExpression":{"id":3764,"name":"borrowedByOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"9204:16:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BorrowedByOption_$2823_storage_$","typeString":"mapping(uint256 => struct DDL.BorrowedByOption storage ref)"}},"id":3766,"indexExpression":{"id":3765,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"9221:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9204:20:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage","typeString":"struct DDL.BorrowedByOption storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9172:52:16"},{"assignments":[3769],"declarations":[{"constant":false,"id":3769,"mutability":"mutable","name":"periodInMinutes","nameLocation":"9242:15:16","nodeType":"VariableDeclaration","scope":3795,"src":"9234:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3768,"name":"uint256","nodeType":"ElementaryTypeName","src":"9234:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3778,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3770,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9261:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"9261:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":3772,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3763,"src":"9279:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption storage pointer"}},"id":3773,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"newBorrowTimestamp","nodeType":"MemberAccess","referencedDeclaration":2822,"src":"9279:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9261:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3775,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9260:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3630","id":3776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:2:16","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"9260:60:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9234:86:16"},{"expression":{"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3779,"name":"upcomingFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"9330:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3780,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3763,"src":"9358:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption storage pointer"}},"id":3781,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrowed","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"9358:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":3782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9374:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"9358:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3784,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9357:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3785,"name":"periodInMinutes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"9382:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3786,"name":"interestRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"9400:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9382:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3788,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9381:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9357:56:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3790,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9356:58:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3791,"name":"INTEREST_RATE_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"9429:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9356:95:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9330:121:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3794,"nodeType":"ExpressionStatement","src":"9330:121:16"}]},"functionSelector":"484f1371","id":3796,"implemented":true,"kind":"function","modifiers":[],"name":"calculateUpcomingFee","nameLocation":"9059:20:16","nodeType":"FunctionDefinition","parameters":{"id":3757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3756,"mutability":"mutable","name":"id","nameLocation":"9088:2:16","nodeType":"VariableDeclaration","scope":3796,"src":"9080:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3755,"name":"uint256","nodeType":"ElementaryTypeName","src":"9080:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9079:12:16"},"returnParameters":{"id":3760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3759,"mutability":"mutable","name":"upcomingFee","nameLocation":"9145:11:16","nodeType":"VariableDeclaration","scope":3796,"src":"9137:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3758,"name":"uint256","nodeType":"ElementaryTypeName","src":"9137:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9136:21:16"},"scope":4283,"src":"9050:408:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3901,"nodeType":"Block","src":"9516:750:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3804,"name":"borrowedByOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"9534:16:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BorrowedByOption_$2823_storage_$","typeString":"mapping(uint256 => struct DDL.BorrowedByOption storage ref)"}},"id":3806,"indexExpression":{"id":3805,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"9551:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9534:20:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage","typeString":"struct DDL.BorrowedByOption storage ref"}},"id":3807,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrowed","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"9534:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9534:33:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f7074696f6e2072656465656d6564","id":3810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9569:17:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_743cf35bb2dc585847026e9713ec3ac2f6c32fb22e1b3dd34a98cfeb20c133a6","typeString":"literal_string \"option redeemed\""},"value":"option redeemed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_743cf35bb2dc585847026e9713ec3ac2f6c32fb22e1b3dd34a98cfeb20c133a6","typeString":"literal_string \"option redeemed\""}],"id":3803,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9526:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9526:61:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3812,"nodeType":"ExpressionStatement","src":"9526:61:16"},{"assignments":[3814],"declarations":[{"constant":false,"id":3814,"mutability":"mutable","name":"upcomingFee","nameLocation":"9605:11:16","nodeType":"VariableDeclaration","scope":3901,"src":"9597:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3813,"name":"uint256","nodeType":"ElementaryTypeName","src":"9597:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3818,"initialValue":{"arguments":[{"id":3816,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"9640:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3815,"name":"calculateUpcomingFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"9619:20:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9619:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9597:46:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3820,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"9674:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3821,"name":"borrowedByOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"9684:16:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BorrowedByOption_$2823_storage_$","typeString":"mapping(uint256 => struct DDL.BorrowedByOption storage ref)"}},"id":3823,"indexExpression":{"id":3822,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"9701:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9684:20:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage","typeString":"struct DDL.BorrowedByOption storage ref"}},"id":3824,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrowed","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"9684:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3825,"name":"upcomingFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"9716:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9684:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9674:53:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f6f206d75636820616d6f756e74","id":3828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9741:17:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_298b54f5c2d6d68b7f924f52c9cf625a66043f559f95467f29c0a8c171568344","typeString":"literal_string \"too much amount\""},"value":"too much amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_298b54f5c2d6d68b7f924f52c9cf625a66043f559f95467f29c0a8c171568344","typeString":"literal_string \"too much amount\""}],"id":3819,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9653:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9653:115:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3830,"nodeType":"ExpressionStatement","src":"9653:115:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3832,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9786:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"9786:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"baseExpression":{"id":3834,"name":"collateralInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"9800:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CollateralInfo_$2840_storage_$","typeString":"mapping(uint256 => struct DDL.CollateralInfo storage ref)"}},"id":3836,"indexExpression":{"id":3835,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"9815:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9800:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage","typeString":"struct DDL.CollateralInfo storage ref"}},"id":3837,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2836,"src":"9800:24:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9786:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3831,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9778:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9778:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3840,"nodeType":"ExpressionStatement","src":"9778:47:16"},{"assignments":[3842],"declarations":[{"constant":false,"id":3842,"mutability":"mutable","name":"newBorrow","nameLocation":"9843:9:16","nodeType":"VariableDeclaration","scope":3901,"src":"9835:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3841,"name":"uint256","nodeType":"ElementaryTypeName","src":"9835:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3851,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3843,"name":"borrowedByOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"9855:16:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BorrowedByOption_$2823_storage_$","typeString":"mapping(uint256 => struct DDL.BorrowedByOption storage ref)"}},"id":3845,"indexExpression":{"id":3844,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"9872:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9855:20:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage","typeString":"struct DDL.BorrowedByOption storage ref"}},"id":3846,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrowed","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"9855:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3847,"name":"upcomingFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"9899:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9855:55:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3849,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"9925:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9855:76:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9835:96:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3855,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"9961:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3856,"name":"upcomingFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"9970:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9961:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3852,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"9941:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolDDL_$4366","typeString":"contract IPoolDDL"}},"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"subTotalLocked","nodeType":"MemberAccess","referencedDeclaration":4360,"src":"9941:19:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9941:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3859,"nodeType":"ExpressionStatement","src":"9941:41:16"},{"expression":{"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3860,"name":"borrowedByOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"9992:16:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BorrowedByOption_$2823_storage_$","typeString":"mapping(uint256 => struct DDL.BorrowedByOption storage ref)"}},"id":3862,"indexExpression":{"id":3861,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"10009:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9992:20:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage","typeString":"struct DDL.BorrowedByOption storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3864,"name":"newBorrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"10045:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3865,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10068:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"10068:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3863,"name":"BorrowedByOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"10015:16:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_BorrowedByOption_$2823_storage_ptr_$","typeString":"type(struct DDL.BorrowedByOption storage pointer)"}},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10015:78:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_memory_ptr","typeString":"struct DDL.BorrowedByOption memory"}},"src":"9992:101:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage","typeString":"struct DDL.BorrowedByOption storage ref"}},"id":3869,"nodeType":"ExpressionStatement","src":"9992:101:16"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":3873,"name":"collateralInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"10121:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CollateralInfo_$2840_storage_$","typeString":"mapping(uint256 => struct DDL.CollateralInfo storage ref)"}},"id":3875,"indexExpression":{"id":3874,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"10136:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10121:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage","typeString":"struct DDL.CollateralInfo storage ref"}},"id":3876,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2836,"src":"10121:24:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3879,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10155:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_DDL_$4283","typeString":"contract DDL"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DDL_$4283","typeString":"contract DDL"}],"id":3878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10147:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3877,"name":"address","nodeType":"ElementaryTypeName","src":"10147:7:16","typeDescriptions":{}}},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10147:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3881,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"10162:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3870,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"10103:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":821,"src":"10103:17:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10103:66:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3883,"nodeType":"ExpressionStatement","src":"10103:66:16"},{"expression":{"arguments":[{"arguments":[{"id":3889,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"10201:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolDDL_$4366","typeString":"contract IPoolDDL"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IPoolDDL_$4366","typeString":"contract IPoolDDL"}],"id":3888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10193:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3887,"name":"address","nodeType":"ElementaryTypeName","src":"10193:7:16","typeDescriptions":{}}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10193:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3891,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"10208:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3884,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"10179:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":789,"src":"10179:13:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10179:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3893,"nodeType":"ExpressionStatement","src":"10179:36:16"},{"eventCall":{"arguments":[{"expression":{"id":3895,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10236:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"10236:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3897,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"10248:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3898,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"10252:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3894,"name":"Repay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"10230:5:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10230:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3900,"nodeType":"EmitStatement","src":"10225:34:16"}]},"functionSelector":"d8aed145","id":3902,"implemented":true,"kind":"function","modifiers":[],"name":"repay","nameLocation":"9473:5:16","nodeType":"FunctionDefinition","parameters":{"id":3801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3798,"mutability":"mutable","name":"id","nameLocation":"9487:2:16","nodeType":"VariableDeclaration","scope":3902,"src":"9479:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3797,"name":"uint256","nodeType":"ElementaryTypeName","src":"9479:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3800,"mutability":"mutable","name":"amount","nameLocation":"9499:6:16","nodeType":"VariableDeclaration","scope":3902,"src":"9491:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3799,"name":"uint256","nodeType":"ElementaryTypeName","src":"9491:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9478:28:16"},"returnParameters":{"id":3802,"nodeType":"ParameterList","parameters":[],"src":"9516:0:16"},"scope":4283,"src":"9464:802:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3937,"nodeType":"Block","src":"10309:247:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3908,"name":"borrowedByOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"10327:16:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BorrowedByOption_$2823_storage_$","typeString":"mapping(uint256 => struct DDL.BorrowedByOption storage ref)"}},"id":3910,"indexExpression":{"id":3909,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"10344:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10327:20:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage","typeString":"struct DDL.BorrowedByOption storage ref"}},"id":3911,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrowed","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"10327:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10360:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10327:34:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f7074696f6e20697320626c6f636b6564","id":3914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10363:19:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_50f1ea23553b2a3016ed182e7c28c65357cf6b419cbdad2dd808aa43db8da5a2","typeString":"literal_string \"option is blocked\""},"value":"option is blocked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_50f1ea23553b2a3016ed182e7c28c65357cf6b419cbdad2dd808aa43db8da5a2","typeString":"literal_string \"option is blocked\""}],"id":3907,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10319:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10319:64:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3916,"nodeType":"ExpressionStatement","src":"10319:64:16"},{"expression":{"arguments":[{"arguments":[{"id":3922,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10443:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_DDL_$4283","typeString":"contract DDL"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DDL_$4283","typeString":"contract DDL"}],"id":3921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10435:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3920,"name":"address","nodeType":"ElementaryTypeName","src":"10435:7:16","typeDescriptions":{}}},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10435:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":3924,"name":"collateralInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"10462:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CollateralInfo_$2840_storage_$","typeString":"mapping(uint256 => struct DDL.CollateralInfo storage ref)"}},"id":3926,"indexExpression":{"id":3925,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"10477:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10462:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage","typeString":"struct DDL.CollateralInfo storage ref"}},"id":3927,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2836,"src":"10462:24:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3928,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"10500:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3917,"name":"collateralToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"10393:15:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2147","typeString":"contract IERC721"}},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"10393:28:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10393:119:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3930,"nodeType":"ExpressionStatement","src":"10393:119:16"},{"eventCall":{"arguments":[{"expression":{"id":3932,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10534:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"10534:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3934,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"10546:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3931,"name":"Unlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"10527:6:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10527:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3936,"nodeType":"EmitStatement","src":"10522:27:16"}]},"functionSelector":"6198e339","id":3938,"implemented":true,"kind":"function","modifiers":[],"name":"unlock","nameLocation":"10281:6:16","nodeType":"FunctionDefinition","parameters":{"id":3905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3904,"mutability":"mutable","name":"id","nameLocation":"10296:2:16","nodeType":"VariableDeclaration","scope":3938,"src":"10288:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3903,"name":"uint256","nodeType":"ElementaryTypeName","src":"10288:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10287:12:16"},"returnParameters":{"id":3906,"nodeType":"ParameterList","parameters":[],"src":"10309:0:16"},"scope":4283,"src":"10272:284:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3974,"nodeType":"Block","src":"10620:246:16","statements":[{"assignments":[3947],"declarations":[{"constant":false,"id":3947,"mutability":"mutable","name":"collateral","nameLocation":"10653:10:16","nodeType":"VariableDeclaration","scope":3974,"src":"10630:33:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage_ptr","typeString":"struct DDL.CollateralInfo"},"typeName":{"id":3946,"nodeType":"UserDefinedTypeName","pathNode":{"id":3945,"name":"CollateralInfo","nodeType":"IdentifierPath","referencedDeclaration":2840,"src":"10630:14:16"},"referencedDeclaration":2840,"src":"10630:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage_ptr","typeString":"struct DDL.CollateralInfo"}},"visibility":"internal"}],"id":3951,"initialValue":{"baseExpression":{"id":3948,"name":"collateralInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"10666:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CollateralInfo_$2840_storage_$","typeString":"mapping(uint256 => struct DDL.CollateralInfo storage ref)"}},"id":3950,"indexExpression":{"id":3949,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"10681:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10666:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage","typeString":"struct DDL.CollateralInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10630:54:16"},{"condition":{"expression":{"expression":{"id":3952,"name":"collateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"10698:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage_ptr","typeString":"struct DDL.CollateralInfo storage pointer"}},"id":3953,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"strategy","nodeType":"MemberAccess","referencedDeclaration":2839,"src":"10698:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_optionInfo_$2834_storage","typeString":"struct DDL.optionInfo storage ref"}},"id":3954,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"isLong","nodeType":"MemberAccess","referencedDeclaration":2833,"src":"10698:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3972,"nodeType":"Block","src":"10796:64:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3965,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"10830:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3964,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"10817:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10817:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[{"id":3968,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"10846:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3967,"name":"liqPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"10837:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10837:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10817:32:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3944,"id":3971,"nodeType":"Return","src":"10810:39:16"}]},"id":3973,"nodeType":"IfStatement","src":"10694:166:16","trueBody":{"id":3963,"nodeType":"Block","src":"10726:64:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3956,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"10760:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3955,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"10747:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10747:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"id":3959,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"10776:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3958,"name":"liqPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"10767:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10767:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10747:32:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3944,"id":3962,"nodeType":"Return","src":"10740:39:16"}]}}]},"functionSelector":"49b274ed","id":3975,"implemented":true,"kind":"function","modifiers":[],"name":"loanState","nameLocation":"10571:9:16","nodeType":"FunctionDefinition","parameters":{"id":3941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3940,"mutability":"mutable","name":"id","nameLocation":"10589:2:16","nodeType":"VariableDeclaration","scope":3975,"src":"10581:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3939,"name":"uint256","nodeType":"ElementaryTypeName","src":"10581:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10580:12:16"},"returnParameters":{"id":3944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3975,"src":"10614:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3942,"name":"bool","nodeType":"ElementaryTypeName","src":"10614:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10613:6:16"},"scope":4283,"src":"10562:304:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4011,"nodeType":"Block","src":"10945:256:16","statements":[{"assignments":[3984],"declarations":[{"constant":false,"id":3984,"mutability":"mutable","name":"collateral","nameLocation":"10978:10:16","nodeType":"VariableDeclaration","scope":4011,"src":"10955:33:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage_ptr","typeString":"struct DDL.CollateralInfo"},"typeName":{"id":3983,"nodeType":"UserDefinedTypeName","pathNode":{"id":3982,"name":"CollateralInfo","nodeType":"IdentifierPath","referencedDeclaration":2840,"src":"10955:14:16"},"referencedDeclaration":2840,"src":"10955:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage_ptr","typeString":"struct DDL.CollateralInfo"}},"visibility":"internal"}],"id":3988,"initialValue":{"baseExpression":{"id":3985,"name":"collateralInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"10991:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CollateralInfo_$2840_storage_$","typeString":"mapping(uint256 => struct DDL.CollateralInfo storage ref)"}},"id":3987,"indexExpression":{"id":3986,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"11006:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10991:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage","typeString":"struct DDL.CollateralInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10955:54:16"},{"condition":{"expression":{"expression":{"id":3989,"name":"collateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"11023:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage_ptr","typeString":"struct DDL.CollateralInfo storage pointer"}},"id":3990,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"strategy","nodeType":"MemberAccess","referencedDeclaration":2839,"src":"11023:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_optionInfo_$2834_storage","typeString":"struct DDL.optionInfo storage ref"}},"id":3991,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"isLong","nodeType":"MemberAccess","referencedDeclaration":2833,"src":"11023:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4009,"nodeType":"Block","src":"11126:69:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4002,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"11160:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4001,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"11147:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11147:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[{"id":4005,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"11181:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4004,"name":"priorLiqPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"11167:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11167:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11147:37:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3981,"id":4008,"nodeType":"Return","src":"11140:44:16"}]},"id":4010,"nodeType":"IfStatement","src":"11019:176:16","trueBody":{"id":4000,"nodeType":"Block","src":"11051:69:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3993,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"11085:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3992,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"11072:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11072:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"id":3996,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"11106:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3995,"name":"priorLiqPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"11092:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11092:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11072:37:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3981,"id":3999,"nodeType":"Return","src":"11065:44:16"}]}}]},"functionSelector":"365c7504","id":4012,"implemented":true,"kind":"function","modifiers":[],"name":"loanStateByPriorLiqPrice","nameLocation":"10881:24:16","nodeType":"FunctionDefinition","parameters":{"id":3978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3977,"mutability":"mutable","name":"id","nameLocation":"10914:2:16","nodeType":"VariableDeclaration","scope":4012,"src":"10906:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3976,"name":"uint256","nodeType":"ElementaryTypeName","src":"10906:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10905:12:16"},"returnParameters":{"id":3981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4012,"src":"10939:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3979,"name":"bool","nodeType":"ElementaryTypeName","src":"10939:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10938:6:16"},"scope":4283,"src":"10872:329:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4045,"nodeType":"Block","src":"11277:245:16","statements":[{"assignments":[4021],"declarations":[{"constant":false,"id":4021,"mutability":"mutable","name":"data","nameLocation":"11310:4:16","nodeType":"VariableDeclaration","scope":4045,"src":"11287:27:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage_ptr","typeString":"struct DDL.CollateralInfo"},"typeName":{"id":4020,"nodeType":"UserDefinedTypeName","pathNode":{"id":4019,"name":"CollateralInfo","nodeType":"IdentifierPath","referencedDeclaration":2840,"src":"11287:14:16"},"referencedDeclaration":2840,"src":"11287:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage_ptr","typeString":"struct DDL.CollateralInfo"}},"visibility":"internal"}],"id":4025,"initialValue":{"baseExpression":{"id":4022,"name":"collateralInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"11317:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CollateralInfo_$2840_storage_$","typeString":"mapping(uint256 => struct DDL.CollateralInfo storage ref)"}},"id":4024,"indexExpression":{"id":4023,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"11332:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11317:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage","typeString":"struct DDL.CollateralInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11287:48:16"},{"assignments":[null,4027,null,null,null],"declarations":[null,{"constant":false,"id":4027,"mutability":"mutable","name":"latestPrice","nameLocation":"11355:11:16","nodeType":"VariableDeclaration","scope":4045,"src":"11348:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4026,"name":"int256","nodeType":"ElementaryTypeName","src":"11348:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},null,null,null],"id":4037,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"expression":{"expression":{"id":4029,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"11404:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage_ptr","typeString":"struct DDL.CollateralInfo storage pointer"}},"id":4030,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"strategy","nodeType":"MemberAccess","referencedDeclaration":2839,"src":"11404:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_optionInfo_$2834_storage","typeString":"struct DDL.optionInfo storage ref"}},"id":4031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"strategyAddress","nodeType":"MemberAccess","referencedDeclaration":2825,"src":"11404:29:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4028,"name":"IHegicStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"11376:14:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHegicStrategy_$4336_$","typeString":"type(contract IHegicStrategy)"}},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11376:67:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IHegicStrategy_$4336","typeString":"contract IHegicStrategy"}},"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"priceProvider","nodeType":"MemberAccess","referencedDeclaration":4326,"src":"11376:81:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_AggregatorV3Interface_$45_$","typeString":"function () view external returns (contract AggregatorV3Interface)"}},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11376:83:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":44,"src":"11376:99:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11376:101:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"11345:132:16"},{"expression":{"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4038,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"11487:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4041,"name":"latestPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"11503:11:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11495:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4039,"name":"uint256","nodeType":"ElementaryTypeName","src":"11495:7:16","typeDescriptions":{}}},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11495:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11487:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4044,"nodeType":"ExpressionStatement","src":"11487:28:16"}]},"functionSelector":"7a3c4c17","id":4046,"implemented":true,"kind":"function","modifiers":[],"name":"currentPrice","nameLocation":"11216:12:16","nodeType":"FunctionDefinition","parameters":{"id":4015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4014,"mutability":"mutable","name":"id","nameLocation":"11237:2:16","nodeType":"VariableDeclaration","scope":4046,"src":"11229:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4013,"name":"uint256","nodeType":"ElementaryTypeName","src":"11229:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11228:12:16"},"returnParameters":{"id":4018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4017,"mutability":"mutable","name":"price","nameLocation":"11270:5:16","nodeType":"VariableDeclaration","scope":4046,"src":"11262:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4016,"name":"uint256","nodeType":"ElementaryTypeName","src":"11262:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11261:15:16"},"scope":4283,"src":"11207:315:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4100,"nodeType":"Block","src":"11599:396:16","statements":[{"assignments":[null,4054,null,null,null],"declarations":[null,{"constant":false,"id":4054,"mutability":"mutable","name":"strategy","nameLocation":"11645:8:16","nodeType":"VariableDeclaration","scope":4100,"src":"11637:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4053,"name":"address","nodeType":"ElementaryTypeName","src":"11637:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},null,null,null],"id":4059,"initialValue":{"arguments":[{"id":4057,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"11727:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4055,"name":"operationalPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"11695:15:16","typeDescriptions":{"typeIdentifier":"t_contract$_IHegicOperationalTreasury_$4305","typeString":"contract IHegicOperationalTreasury"}},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"lockedLiquidity","nodeType":"MemberAccess","referencedDeclaration":4304,"src":"11695:31:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_enum$_LockedLiquidityState_$4288_$_t_address_$_t_uint128_$_t_uint128_$_t_uint32_$","typeString":"function (uint256) view external returns (enum IHegicOperationalTreasury.LockedLiquidityState,address,uint128,uint128,uint32)"}},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11695:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_enum$_LockedLiquidityState_$4288_$_t_address_$_t_uint128_$_t_uint128_$_t_uint32_$","typeString":"tuple(enum IHegicOperationalTreasury.LockedLiquidityState,address,uint128,uint128,uint32)"}},"nodeType":"VariableDeclarationStatement","src":"11609:121:16"},{"assignments":[null,4061],"declarations":[null,{"constant":false,"id":4061,"mutability":"mutable","name":"strike","nameLocation":"11751:6:16","nodeType":"VariableDeclaration","scope":4100,"src":"11743:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4060,"name":"uint128","nodeType":"ElementaryTypeName","src":"11743:7:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":4068,"initialValue":{"arguments":[{"id":4066,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"11799:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4063,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"11776:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4062,"name":"IHegicStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"11761:14:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHegicStrategy_$4336_$","typeString":"type(contract IHegicStrategy)"}},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11761:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IHegicStrategy_$4336","typeString":"contract IHegicStrategy"}},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"strategyData","nodeType":"MemberAccess","referencedDeclaration":4335,"src":"11761:37:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint128_$_t_uint128_$","typeString":"function (uint256) view external returns (uint128,uint128)"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11761:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint128_$_t_uint128_$","typeString":"tuple(uint128,uint128)"}},"nodeType":"VariableDeclarationStatement","src":"11740:62:16"},{"condition":{"expression":{"expression":{"baseExpression":{"id":4069,"name":"collateralInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"11816:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CollateralInfo_$2840_storage_$","typeString":"mapping(uint256 => struct DDL.CollateralInfo storage ref)"}},"id":4071,"indexExpression":{"id":4070,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"11831:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11816:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage","typeString":"struct DDL.CollateralInfo storage ref"}},"id":4072,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"strategy","nodeType":"MemberAccess","referencedDeclaration":2839,"src":"11816:27:16","typeDescriptions":{"typeIdentifier":"t_struct$_optionInfo_$2834_storage","typeString":"struct DDL.optionInfo storage ref"}},"id":4073,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"isLong","nodeType":"MemberAccess","referencedDeclaration":2833,"src":"11816:34:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4087,"nodeType":"IfStatement","src":"11812:116:16","trueBody":{"id":4086,"nodeType":"Block","src":"11852:76:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4076,"name":"strike","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"11881:6:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":4075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11873:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4074,"name":"uint256","nodeType":"ElementaryTypeName","src":"11873:7:16","typeDescriptions":{}}},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11873:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313030","id":4078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11890:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4079,"name":"PriorLiqPriceCoef","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"11894:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11890:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4081,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11889:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11873:39:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":4083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11913:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"11873:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4052,"id":4085,"nodeType":"Return","src":"11866:50:16"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4090,"name":"strike","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"11953:6:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":4089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11945:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4088,"name":"uint256","nodeType":"ElementaryTypeName","src":"11945:7:16","typeDescriptions":{}}},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11945:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313030","id":4092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4093,"name":"PriorLiqPriceCoef","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"11966:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11962:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4095,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11961:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11945:39:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":4097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11985:3:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"11945:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4052,"id":4099,"nodeType":"Return","src":"11938:50:16"}]},"functionSelector":"f05735db","id":4101,"implemented":true,"kind":"function","modifiers":[],"name":"priorLiqPrice","nameLocation":"11537:13:16","nodeType":"FunctionDefinition","parameters":{"id":4049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4048,"mutability":"mutable","name":"id","nameLocation":"11559:2:16","nodeType":"VariableDeclaration","scope":4101,"src":"11551:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4047,"name":"uint256","nodeType":"ElementaryTypeName","src":"11551:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11550:12:16"},"returnParameters":{"id":4052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4051,"mutability":"mutable","name":"price","nameLocation":"11592:5:16","nodeType":"VariableDeclaration","scope":4101,"src":"11584:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4050,"name":"uint256","nodeType":"ElementaryTypeName","src":"11584:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11583:15:16"},"scope":4283,"src":"11528:467:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4183,"nodeType":"Block","src":"12066:605:16","statements":[{"assignments":[4110],"declarations":[{"constant":false,"id":4110,"mutability":"mutable","name":"optionData","nameLocation":"12101:10:16","nodeType":"VariableDeclaration","scope":4183,"src":"12076:35:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption"},"typeName":{"id":4109,"nodeType":"UserDefinedTypeName","pathNode":{"id":4108,"name":"BorrowedByOption","nodeType":"IdentifierPath","referencedDeclaration":2823,"src":"12076:16:16"},"referencedDeclaration":2823,"src":"12076:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption"}},"visibility":"internal"}],"id":4114,"initialValue":{"baseExpression":{"id":4111,"name":"borrowedByOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"12114:16:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BorrowedByOption_$2823_storage_$","typeString":"mapping(uint256 => struct DDL.BorrowedByOption storage ref)"}},"id":4113,"indexExpression":{"id":4112,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"12131:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12114:20:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage","typeString":"struct DDL.BorrowedByOption storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12076:58:16"},{"assignments":[4117],"declarations":[{"constant":false,"id":4117,"mutability":"mutable","name":"data","nameLocation":"12167:4:16","nodeType":"VariableDeclaration","scope":4183,"src":"12144:27:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage_ptr","typeString":"struct DDL.CollateralInfo"},"typeName":{"id":4116,"nodeType":"UserDefinedTypeName","pathNode":{"id":4115,"name":"CollateralInfo","nodeType":"IdentifierPath","referencedDeclaration":2840,"src":"12144:14:16"},"referencedDeclaration":2840,"src":"12144:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage_ptr","typeString":"struct DDL.CollateralInfo"}},"visibility":"internal"}],"id":4121,"initialValue":{"baseExpression":{"id":4118,"name":"collateralInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"12174:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CollateralInfo_$2840_storage_$","typeString":"mapping(uint256 => struct DDL.CollateralInfo storage ref)"}},"id":4120,"indexExpression":{"id":4119,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"12189:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12174:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage","typeString":"struct DDL.CollateralInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12144:48:16"},{"assignments":[null,4123,null,null,null],"declarations":[null,{"constant":false,"id":4123,"mutability":"mutable","name":"strategy","nameLocation":"12238:8:16","nodeType":"VariableDeclaration","scope":4183,"src":"12230:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4122,"name":"address","nodeType":"ElementaryTypeName","src":"12230:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},null,null,null],"id":4128,"initialValue":{"arguments":[{"id":4126,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"12320:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4124,"name":"operationalPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"12288:15:16","typeDescriptions":{"typeIdentifier":"t_contract$_IHegicOperationalTreasury_$4305","typeString":"contract IHegicOperationalTreasury"}},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"lockedLiquidity","nodeType":"MemberAccess","referencedDeclaration":4304,"src":"12288:31:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_enum$_LockedLiquidityState_$4288_$_t_address_$_t_uint128_$_t_uint128_$_t_uint32_$","typeString":"function (uint256) view external returns (enum IHegicOperationalTreasury.LockedLiquidityState,address,uint128,uint128,uint32)"}},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12288:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_enum$_LockedLiquidityState_$4288_$_t_address_$_t_uint128_$_t_uint128_$_t_uint32_$","typeString":"tuple(enum IHegicOperationalTreasury.LockedLiquidityState,address,uint128,uint128,uint32)"}},"nodeType":"VariableDeclarationStatement","src":"12202:121:16"},{"assignments":[4130,4132],"declarations":[{"constant":false,"id":4130,"mutability":"mutable","name":"amount","nameLocation":"12342:6:16","nodeType":"VariableDeclaration","scope":4183,"src":"12334:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4129,"name":"uint128","nodeType":"ElementaryTypeName","src":"12334:7:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4132,"mutability":"mutable","name":"strike","nameLocation":"12358:6:16","nodeType":"VariableDeclaration","scope":4183,"src":"12350:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4131,"name":"uint128","nodeType":"ElementaryTypeName","src":"12350:7:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":4139,"initialValue":{"arguments":[{"id":4137,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"12415:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4134,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"12383:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4133,"name":"IHegicStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"12368:14:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHegicStrategy_$4336_$","typeString":"type(contract IHegicStrategy)"}},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12368:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IHegicStrategy_$4336","typeString":"contract IHegicStrategy"}},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"strategyData","nodeType":"MemberAccess","referencedDeclaration":4335,"src":"12368:46:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint128_$_t_uint128_$","typeString":"function (uint256) view external returns (uint128,uint128)"}},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12368:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint128_$_t_uint128_$","typeString":"tuple(uint128,uint128)"}},"nodeType":"VariableDeclarationStatement","src":"12333:85:16"},{"condition":{"expression":{"expression":{"id":4140,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"12432:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage_ptr","typeString":"struct DDL.CollateralInfo storage pointer"}},"id":4141,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"strategy","nodeType":"MemberAccess","referencedDeclaration":2839,"src":"12432:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_optionInfo_$2834_storage","typeString":"struct DDL.optionInfo storage ref"}},"id":4142,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"isLong","nodeType":"MemberAccess","referencedDeclaration":2833,"src":"12432:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4163,"nodeType":"IfStatement","src":"12428:139:16","trueBody":{"id":4162,"nodeType":"Block","src":"12454:113:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4145,"name":"strike","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4132,"src":"12483:6:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":4144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12475:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4143,"name":"uint256","nodeType":"ElementaryTypeName","src":"12475:7:16","typeDescriptions":{}}},"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12475:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4147,"name":"optionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"12494:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption storage pointer"}},"id":4148,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrowed","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"12494:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4149,"name":"COLLATERAL_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"12514:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12494:39:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4151,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12493:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"arguments":[{"id":4154,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"12544:6:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":4153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12536:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4152,"name":"uint256","nodeType":"ElementaryTypeName","src":"12536:7:16","typeDescriptions":{}}},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12536:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4156,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12535:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12493:59:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313230","id":4158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12553:3:16","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},"src":"12493:63:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12475:81:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4107,"id":4161,"nodeType":"Return","src":"12468:88:16"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4166,"name":"strike","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4132,"src":"12591:6:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":4165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12583:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4164,"name":"uint256","nodeType":"ElementaryTypeName","src":"12583:7:16","typeDescriptions":{}}},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12583:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4168,"name":"optionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"12602:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_BorrowedByOption_$2823_storage_ptr","typeString":"struct DDL.BorrowedByOption storage pointer"}},"id":4169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"borrowed","nodeType":"MemberAccess","referencedDeclaration":2820,"src":"12602:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4170,"name":"COLLATERAL_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"12622:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12602:39:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4172,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12601:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"arguments":[{"id":4175,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"12652:6:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":4174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12644:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4173,"name":"uint256","nodeType":"ElementaryTypeName","src":"12644:7:16","typeDescriptions":{}}},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12644:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4177,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12643:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12601:59:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313230","id":4179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12661:3:16","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},"src":"12601:63:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12583:81:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4107,"id":4182,"nodeType":"Return","src":"12576:88:16"}]},"functionSelector":"d88c6910","id":4184,"implemented":true,"kind":"function","modifiers":[],"name":"liqPrice","nameLocation":"12009:8:16","nodeType":"FunctionDefinition","parameters":{"id":4104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4103,"mutability":"mutable","name":"id","nameLocation":"12026:2:16","nodeType":"VariableDeclaration","scope":4184,"src":"12018:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4102,"name":"uint256","nodeType":"ElementaryTypeName","src":"12018:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12017:12:16"},"returnParameters":{"id":4107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4106,"mutability":"mutable","name":"price","nameLocation":"12059:5:16","nodeType":"VariableDeclaration","scope":4184,"src":"12051:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4105,"name":"uint256","nodeType":"ElementaryTypeName","src":"12051:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12050:15:16"},"scope":4283,"src":"12000:671:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4237,"nodeType":"Block","src":"12750:376:16","statements":[{"assignments":[4193],"declarations":[{"constant":false,"id":4193,"mutability":"mutable","name":"data","nameLocation":"12783:4:16","nodeType":"VariableDeclaration","scope":4237,"src":"12760:27:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage_ptr","typeString":"struct DDL.CollateralInfo"},"typeName":{"id":4192,"nodeType":"UserDefinedTypeName","pathNode":{"id":4191,"name":"CollateralInfo","nodeType":"IdentifierPath","referencedDeclaration":2840,"src":"12760:14:16"},"referencedDeclaration":2840,"src":"12760:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage_ptr","typeString":"struct DDL.CollateralInfo"}},"visibility":"internal"}],"id":4197,"initialValue":{"baseExpression":{"id":4194,"name":"collateralInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"12790:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CollateralInfo_$2840_storage_$","typeString":"mapping(uint256 => struct DDL.CollateralInfo storage ref)"}},"id":4196,"indexExpression":{"id":4195,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"12805:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12790:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage","typeString":"struct DDL.CollateralInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12760:48:16"},{"condition":{"expression":{"expression":{"id":4198,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"12822:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage_ptr","typeString":"struct DDL.CollateralInfo storage pointer"}},"id":4199,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"strategy","nodeType":"MemberAccess","referencedDeclaration":2839,"src":"12822:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_optionInfo_$2834_storage","typeString":"struct DDL.optionInfo storage ref"}},"id":4200,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"isLong","nodeType":"MemberAccess","referencedDeclaration":2833,"src":"12822:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4219,"nodeType":"IfStatement","src":"12818:177:16","trueBody":{"id":4218,"nodeType":"Block","src":"12843:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4202,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"12875:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4201,"name":"priorLiqPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"12861:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12861:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"id":4205,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"12890:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4204,"name":"liqPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"12881:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12881:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12861:32:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4213,"nodeType":"IfStatement","src":"12857:95:16","trueBody":{"id":4212,"nodeType":"Block","src":"12895:57:16","statements":[{"expression":{"arguments":[{"id":4209,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"12934:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4208,"name":"priorLiqPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"12920:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12920:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4190,"id":4211,"nodeType":"Return","src":"12913:24:16"}]}},{"expression":{"arguments":[{"id":4215,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"12981:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4214,"name":"liqPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"12972:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12972:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4190,"id":4217,"nodeType":"Return","src":"12965:19:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4221,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"13022:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4220,"name":"priorLiqPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"13008:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13008:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[{"id":4224,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"13037:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4223,"name":"liqPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"13028:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13028:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13008:32:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4232,"nodeType":"IfStatement","src":"13004:87:16","trueBody":{"id":4231,"nodeType":"Block","src":"13042:49:16","statements":[{"expression":{"arguments":[{"id":4228,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"13077:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4227,"name":"priorLiqPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"13063:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13063:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4190,"id":4230,"nodeType":"Return","src":"13056:24:16"}]}},{"expression":{"arguments":[{"id":4234,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"13116:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4233,"name":"liqPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"13107:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13107:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4190,"id":4236,"nodeType":"Return","src":"13100:19:16"}]},"functionSelector":"2cb2f334","id":4238,"implemented":true,"kind":"function","modifiers":[],"name":"currentLiqPrice","nameLocation":"12686:15:16","nodeType":"FunctionDefinition","parameters":{"id":4187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4186,"mutability":"mutable","name":"id","nameLocation":"12710:2:16","nodeType":"VariableDeclaration","scope":4238,"src":"12702:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4185,"name":"uint256","nodeType":"ElementaryTypeName","src":"12702:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12701:12:16"},"returnParameters":{"id":4190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4189,"mutability":"mutable","name":"price","nameLocation":"12743:5:16","nodeType":"VariableDeclaration","scope":4238,"src":"12735:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4188,"name":"uint256","nodeType":"ElementaryTypeName","src":"12735:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12734:15:16"},"scope":4283,"src":"12677:449:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4259,"nodeType":"Block","src":"13205:131:16","statements":[{"assignments":[null,4246,null,null,null],"declarations":[null,{"constant":false,"id":4246,"mutability":"mutable","name":"strategy","nameLocation":"13225:8:16","nodeType":"VariableDeclaration","scope":4259,"src":"13217:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4245,"name":"address","nodeType":"ElementaryTypeName","src":"13217:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},null,null,null],"id":4251,"initialValue":{"arguments":[{"id":4249,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"13272:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4247,"name":"operationalPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"13240:15:16","typeDescriptions":{"typeIdentifier":"t_contract$_IHegicOperationalTreasury_$4305","typeString":"contract IHegicOperationalTreasury"}},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"lockedLiquidity","nodeType":"MemberAccess","referencedDeclaration":4304,"src":"13240:31:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_enum$_LockedLiquidityState_$4288_$_t_address_$_t_uint128_$_t_uint128_$_t_uint32_$","typeString":"function (uint256) view external returns (enum IHegicOperationalTreasury.LockedLiquidityState,address,uint128,uint128,uint32)"}},"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13240:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_enum$_LockedLiquidityState_$4288_$_t_address_$_t_uint128_$_t_uint128_$_t_uint32_$","typeString":"tuple(enum IHegicOperationalTreasury.LockedLiquidityState,address,uint128,uint128,uint32)"}},"nodeType":"VariableDeclarationStatement","src":"13215:60:16"},{"expression":{"arguments":[{"id":4256,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"13326:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4253,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4246,"src":"13307:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4252,"name":"IHegicStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"13292:14:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHegicStrategy_$4336_$","typeString":"type(contract IHegicStrategy)"}},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13292:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IHegicStrategy_$4336","typeString":"contract IHegicStrategy"}},"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"profitOf","nodeType":"MemberAccess","referencedDeclaration":4320,"src":"13292:33:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13292:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4244,"id":4258,"nodeType":"Return","src":"13285:44:16"}]},"functionSelector":"0833a6c6","id":4260,"implemented":true,"kind":"function","modifiers":[],"name":"profitByOption","nameLocation":"13141:14:16","nodeType":"FunctionDefinition","parameters":{"id":4241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4240,"mutability":"mutable","name":"id","nameLocation":"13164:2:16","nodeType":"VariableDeclaration","scope":4260,"src":"13156:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4239,"name":"uint256","nodeType":"ElementaryTypeName","src":"13156:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13155:12:16"},"returnParameters":{"id":4244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4243,"mutability":"mutable","name":"profit","nameLocation":"13197:6:16","nodeType":"VariableDeclaration","scope":4260,"src":"13189:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4242,"name":"uint256","nodeType":"ElementaryTypeName","src":"13189:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13188:16:16"},"scope":4283,"src":"13132:204:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4281,"nodeType":"Block","src":"13386:140:16","statements":[{"assignments":[4267],"declarations":[{"constant":false,"id":4267,"mutability":"mutable","name":"data","nameLocation":"13419:4:16","nodeType":"VariableDeclaration","scope":4281,"src":"13396:27:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage_ptr","typeString":"struct DDL.CollateralInfo"},"typeName":{"id":4266,"nodeType":"UserDefinedTypeName","pathNode":{"id":4265,"name":"CollateralInfo","nodeType":"IdentifierPath","referencedDeclaration":2840,"src":"13396:14:16"},"referencedDeclaration":2840,"src":"13396:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage_ptr","typeString":"struct DDL.CollateralInfo"}},"visibility":"internal"}],"id":4271,"initialValue":{"baseExpression":{"id":4268,"name":"collateralInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"13426:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CollateralInfo_$2840_storage_$","typeString":"mapping(uint256 => struct DDL.CollateralInfo storage ref)"}},"id":4270,"indexExpression":{"id":4269,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"13441:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13426:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage","typeString":"struct DDL.CollateralInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13396:48:16"},{"expression":{"arguments":[{"id":4278,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"13516:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"expression":{"id":4273,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4267,"src":"13476:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_CollateralInfo_$2840_storage_ptr","typeString":"struct DDL.CollateralInfo storage pointer"}},"id":4274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"strategy","nodeType":"MemberAccess","referencedDeclaration":2839,"src":"13476:13:16","typeDescriptions":{"typeIdentifier":"t_struct$_optionInfo_$2834_storage","typeString":"struct DDL.optionInfo storage ref"}},"id":4275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"strategyAddress","nodeType":"MemberAccess","referencedDeclaration":2825,"src":"13476:29:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4272,"name":"IHegicStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"13461:14:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IHegicStrategy_$4336_$","typeString":"type(contract IHegicStrategy)"}},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13461:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IHegicStrategy_$4336","typeString":"contract IHegicStrategy"}},"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exercise","nodeType":"MemberAccess","referencedDeclaration":4313,"src":"13461:54:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13461:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"functionReturnParameters":4264,"id":4280,"nodeType":"Return","src":"13454:65:16"}]},"id":4282,"implemented":true,"kind":"function","modifiers":[],"name":"exerciseOption","nameLocation":"13351:14:16","nodeType":"FunctionDefinition","parameters":{"id":4263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4262,"mutability":"mutable","name":"id","nameLocation":"13374:2:16","nodeType":"VariableDeclaration","scope":4282,"src":"13366:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4261,"name":"uint256","nodeType":"ElementaryTypeName","src":"13366:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13365:12:16"},"returnParameters":{"id":4264,"nodeType":"ParameterList","parameters":[],"src":"13386:0:16"},"scope":4283,"src":"13342:184:16","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":4284,"src":"300:13228:16","usedErrors":[]}],"src":"0:13529:16"},"id":16},"contracts/IHegicOperationalTreasury.sol":{"ast":{"absolutePath":"contracts/IHegicOperationalTreasury.sol","exportedSymbols":{"IHegicOperationalTreasury":[4305]},"id":4306,"nodeType":"SourceUnit","nodes":[{"id":4285,"literals":["solidity","0.8",".6"],"nodeType":"PragmaDirective","src":"0:22:17"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4305,"linearizedBaseContracts":[4305],"name":"IHegicOperationalTreasury","nameLocation":"34:25:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IHegicOperationalTreasury.LockedLiquidityState","id":4288,"members":[{"id":4286,"name":"Unlocked","nameLocation":"93:8:17","nodeType":"EnumValue","src":"93:8:17"},{"id":4287,"name":"Locked","nameLocation":"103:6:17","nodeType":"EnumValue","src":"103:6:17"}],"name":"LockedLiquidityState","nameLocation":"71:20:17","nodeType":"EnumDefinition","src":"66:44:17"},{"functionSelector":"3755269b","id":4304,"implemented":false,"kind":"function","modifiers":[],"name":"lockedLiquidity","nameLocation":"125:15:17","nodeType":"FunctionDefinition","parameters":{"id":4291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4290,"mutability":"mutable","name":"id","nameLocation":"149:2:17","nodeType":"VariableDeclaration","scope":4304,"src":"141:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4289,"name":"uint256","nodeType":"ElementaryTypeName","src":"141:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"140:12:17"},"returnParameters":{"id":4303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4294,"mutability":"mutable","name":"state","nameLocation":"234:5:17","nodeType":"VariableDeclaration","scope":4304,"src":"213:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_LockedLiquidityState_$4288","typeString":"enum IHegicOperationalTreasury.LockedLiquidityState"},"typeName":{"id":4293,"nodeType":"UserDefinedTypeName","pathNode":{"id":4292,"name":"LockedLiquidityState","nodeType":"IdentifierPath","referencedDeclaration":4288,"src":"213:20:17"},"referencedDeclaration":4288,"src":"213:20:17","typeDescriptions":{"typeIdentifier":"t_enum$_LockedLiquidityState_$4288","typeString":"enum IHegicOperationalTreasury.LockedLiquidityState"}},"visibility":"internal"},{"constant":false,"id":4296,"mutability":"mutable","name":"strategy","nameLocation":"261:8:17","nodeType":"VariableDeclaration","scope":4304,"src":"253:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4295,"name":"address","nodeType":"ElementaryTypeName","src":"253:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4298,"mutability":"mutable","name":"negativepnl","nameLocation":"291:11:17","nodeType":"VariableDeclaration","scope":4304,"src":"283:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4297,"name":"uint128","nodeType":"ElementaryTypeName","src":"283:7:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4300,"mutability":"mutable","name":"positivepnl","nameLocation":"324:11:17","nodeType":"VariableDeclaration","scope":4304,"src":"316:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4299,"name":"uint128","nodeType":"ElementaryTypeName","src":"316:7:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4302,"mutability":"mutable","name":"expiration","nameLocation":"356:10:17","nodeType":"VariableDeclaration","scope":4304,"src":"349:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4301,"name":"uint32","nodeType":"ElementaryTypeName","src":"349:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"199:177:17"},"scope":4305,"src":"116:261:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4306,"src":"24:355:17","usedErrors":[]}],"src":"0:380:17"},"id":17},"contracts/IHegicStrategy.sol":{"ast":{"absolutePath":"contracts/IHegicStrategy.sol","exportedSymbols":{"AggregatorV3Interface":[45],"IHegicStrategy":[4336]},"id":4337,"nodeType":"SourceUnit","nodes":[{"id":4307,"literals":["solidity","0.8",".6"],"nodeType":"PragmaDirective","src":"0:22:18"},{"absolutePath":"@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol","id":4308,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4337,"sourceUnit":46,"src":"25:76:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4336,"linearizedBaseContracts":[4336],"name":"IHegicStrategy","nameLocation":"113:14:18","nodeType":"ContractDefinition","nodes":[{"functionSelector":"b07f0a41","id":4313,"implemented":false,"kind":"function","modifiers":[],"name":"exercise","nameLocation":"143:8:18","nodeType":"FunctionDefinition","parameters":{"id":4311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4310,"mutability":"mutable","name":"optionID","nameLocation":"160:8:18","nodeType":"VariableDeclaration","scope":4313,"src":"152:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4309,"name":"uint256","nodeType":"ElementaryTypeName","src":"152:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"151:18:18"},"returnParameters":{"id":4312,"nodeType":"ParameterList","parameters":[],"src":"178:0:18"},"scope":4336,"src":"134:45:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"7632bffb","id":4320,"implemented":false,"kind":"function","modifiers":[],"name":"profitOf","nameLocation":"194:8:18","nodeType":"FunctionDefinition","parameters":{"id":4316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4315,"mutability":"mutable","name":"optionID","nameLocation":"211:8:18","nodeType":"VariableDeclaration","scope":4320,"src":"203:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4314,"name":"uint256","nodeType":"ElementaryTypeName","src":"203:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"202:18:18"},"returnParameters":{"id":4319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4318,"mutability":"mutable","name":"amount","nameLocation":"252:6:18","nodeType":"VariableDeclaration","scope":4320,"src":"244:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4317,"name":"uint256","nodeType":"ElementaryTypeName","src":"244:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"243:16:18"},"scope":4336,"src":"185:75:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b888879e","id":4326,"implemented":false,"kind":"function","modifiers":[],"name":"priceProvider","nameLocation":"275:13:18","nodeType":"FunctionDefinition","parameters":{"id":4321,"nodeType":"ParameterList","parameters":[],"src":"288:2:18"},"returnParameters":{"id":4325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4324,"mutability":"mutable","name":"priceProvider","nameLocation":"336:13:18","nodeType":"VariableDeclaration","scope":4326,"src":"314:35:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"},"typeName":{"id":4323,"nodeType":"UserDefinedTypeName","pathNode":{"id":4322,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"314:21:18"},"referencedDeclaration":45,"src":"314:21:18","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"src":"313:37:18"},"scope":4336,"src":"266:85:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d6c8d1b4","id":4335,"implemented":false,"kind":"function","modifiers":[],"name":"strategyData","nameLocation":"366:12:18","nodeType":"FunctionDefinition","parameters":{"id":4329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4328,"mutability":"mutable","name":"id","nameLocation":"387:2:18","nodeType":"VariableDeclaration","scope":4335,"src":"379:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4327,"name":"uint256","nodeType":"ElementaryTypeName","src":"379:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"378:12:18"},"returnParameters":{"id":4334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4331,"mutability":"mutable","name":"amount","nameLocation":"422:6:18","nodeType":"VariableDeclaration","scope":4335,"src":"414:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4330,"name":"uint128","nodeType":"ElementaryTypeName","src":"414:7:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4333,"mutability":"mutable","name":"strike","nameLocation":"438:6:18","nodeType":"VariableDeclaration","scope":4335,"src":"430:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4332,"name":"uint128","nodeType":"ElementaryTypeName","src":"430:7:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"413:32:18"},"scope":4336,"src":"357:89:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4337,"src":"103:345:18","usedErrors":[]}],"src":"0:449:18"},"id":18},"contracts/IPoolDDL.sol":{"ast":{"absolutePath":"contracts/IPoolDDL.sol","exportedSymbols":{"IPoolDDL":[4366]},"id":4367,"nodeType":"SourceUnit","nodes":[{"id":4338,"literals":["solidity","0.8",".6"],"nodeType":"PragmaDirective","src":"0:22:19"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4366,"linearizedBaseContracts":[4366],"name":"IPoolDDL","nameLocation":"34:8:19","nodeType":"ContractDefinition","nodes":[{"functionSelector":"d0679d34","id":4345,"implemented":false,"kind":"function","modifiers":[],"name":"send","nameLocation":"58:4:19","nodeType":"FunctionDefinition","parameters":{"id":4343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4340,"mutability":"mutable","name":"to","nameLocation":"71:2:19","nodeType":"VariableDeclaration","scope":4345,"src":"63:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4339,"name":"address","nodeType":"ElementaryTypeName","src":"63:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4342,"mutability":"mutable","name":"amount","nameLocation":"80:6:19","nodeType":"VariableDeclaration","scope":4345,"src":"75:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4341,"name":"uint","nodeType":"ElementaryTypeName","src":"75:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"62:25:19"},"returnParameters":{"id":4344,"nodeType":"ParameterList","parameters":[],"src":"96:0:19"},"scope":4366,"src":"49:48:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"12b58349","id":4350,"implemented":false,"kind":"function","modifiers":[],"name":"getTotalBalance","nameLocation":"111:15:19","nodeType":"FunctionDefinition","parameters":{"id":4346,"nodeType":"ParameterList","parameters":[],"src":"126:2:19"},"returnParameters":{"id":4349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4348,"mutability":"mutable","name":"balance","nameLocation":"160:7:19","nodeType":"VariableDeclaration","scope":4350,"src":"152:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4347,"name":"uint256","nodeType":"ElementaryTypeName","src":"152:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"151:17:19"},"scope":4366,"src":"102:67:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"2bc355ca","id":4355,"implemented":false,"kind":"function","modifiers":[],"name":"addTotalLocked","nameLocation":"183:14:19","nodeType":"FunctionDefinition","parameters":{"id":4353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4352,"mutability":"mutable","name":"value","nameLocation":"206:5:19","nodeType":"VariableDeclaration","scope":4355,"src":"198:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4351,"name":"uint256","nodeType":"ElementaryTypeName","src":"198:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"197:15:19"},"returnParameters":{"id":4354,"nodeType":"ParameterList","parameters":[],"src":"221:0:19"},"scope":4366,"src":"174:48:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"1b45a68d","id":4360,"implemented":false,"kind":"function","modifiers":[],"name":"subTotalLocked","nameLocation":"236:14:19","nodeType":"FunctionDefinition","parameters":{"id":4358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4357,"mutability":"mutable","name":"value","nameLocation":"259:5:19","nodeType":"VariableDeclaration","scope":4360,"src":"251:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4356,"name":"uint256","nodeType":"ElementaryTypeName","src":"251:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"250:15:19"},"returnParameters":{"id":4359,"nodeType":"ParameterList","parameters":[],"src":"274:0:19"},"scope":4366,"src":"227:48:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ae3050e1","id":4365,"implemented":false,"kind":"function","modifiers":[],"name":"openDeDeLend","nameLocation":"290:12:19","nodeType":"FunctionDefinition","parameters":{"id":4361,"nodeType":"ParameterList","parameters":[],"src":"302:2:19"},"returnParameters":{"id":4364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4363,"mutability":"mutable","name":"openDeDeLend","nameLocation":"333:12:19","nodeType":"VariableDeclaration","scope":4365,"src":"328:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4362,"name":"bool","nodeType":"ElementaryTypeName","src":"328:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"327:19:19"},"scope":4366,"src":"281:66:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4367,"src":"24:325:19","usedErrors":[]}],"src":"0:349:19"},"id":19},"contracts/PoolDDL.sol":{"ast":{"absolutePath":"contracts/PoolDDL.sol","exportedSymbols":{"Context":[2509],"ERC20":[744],"IERC20":[822],"IERC20Metadata":[847],"Ownable":[158],"PoolDDL":[4716]},"id":4717,"nodeType":"SourceUnit","nodes":[{"id":4368,"literals":["solidity","0.8",".6"],"nodeType":"PragmaDirective","src":"0:22:20"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":4369,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4717,"sourceUnit":745,"src":"24:55:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":4370,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4717,"sourceUnit":159,"src":"80:52:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4371,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":158,"src":"154:7:20"},"id":4372,"nodeType":"InheritanceSpecifier","src":"154:7:20"},{"arguments":[{"hexValue":"57726974696e672044444c","id":4374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"169:13:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_17cab43c8d98aeda26e78ec8493d49375e52a80cb6da17e9d614d4db29c966c2","typeString":"literal_string \"Writing DDL\""},"value":"Writing DDL"},{"hexValue":"44444c","id":4375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"184:5:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_5fd4e1a6fa5cd4451c03859322f95b4151c03f48e0a3c4c3d2a469f951bb64b6","typeString":"literal_string \"DDL\""},"value":"DDL"}],"baseName":{"id":4373,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":744,"src":"163:5:20"},"id":4376,"nodeType":"InheritanceSpecifier","src":"163:27:20"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4716,"linearizedBaseContracts":[4716,744,847,822,158,2509],"name":"PoolDDL","nameLocation":"143:7:20","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"4dbac733","id":4379,"mutability":"constant","name":"INITIAL_RATE","nameLocation":"221:12:20","nodeType":"VariableDeclaration","scope":4716,"src":"197:43:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4377,"name":"uint256","nodeType":"ElementaryTypeName","src":"197:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":4378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"236:4:20","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"public"},{"constant":false,"functionSelector":"8ed83271","id":4386,"mutability":"mutable","name":"maxDepositAmount","nameLocation":"261:16:20","nodeType":"VariableDeclaration","scope":4716,"src":"246:51:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4380,"name":"uint256","nodeType":"ElementaryTypeName","src":"246:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"expression":{"arguments":[{"id":4383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"285:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4382,"name":"uint256","nodeType":"ElementaryTypeName","src":"285:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4381,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"280:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"280:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"280:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"32f13d8c","id":4390,"mutability":"mutable","name":"ddlContracts","nameLocation":"335:12:20","nodeType":"VariableDeclaration","scope":4716,"src":"303:44:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":4389,"keyType":{"id":4387,"name":"address","nodeType":"ElementaryTypeName","src":"311:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"303:24:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":4388,"name":"bool","nodeType":"ElementaryTypeName","src":"322:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"fc0c546a","id":4393,"mutability":"mutable","name":"token","nameLocation":"367:5:20","nodeType":"VariableDeclaration","scope":4716,"src":"353:19:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"},"typeName":{"id":4392,"nodeType":"UserDefinedTypeName","pathNode":{"id":4391,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":822,"src":"353:6:20"},"referencedDeclaration":822,"src":"353:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"56891412","id":4395,"mutability":"mutable","name":"totalLocked","nameLocation":"393:11:20","nodeType":"VariableDeclaration","scope":4716,"src":"378:26:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4394,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ae3050e1","id":4398,"mutability":"mutable","name":"openDeDeLend","nameLocation":"422:12:20","nodeType":"VariableDeclaration","scope":4716,"src":"410:31:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4396,"name":"bool","nodeType":"ElementaryTypeName","src":"410:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"hexValue":"74727565","id":4397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"437:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"visibility":"public"},{"anonymous":false,"id":4404,"name":"Provide","nameLocation":"454:7:20","nodeType":"EventDefinition","parameters":{"id":4403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4400,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"478:4:20","nodeType":"VariableDeclaration","scope":4404,"src":"462:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4399,"name":"address","nodeType":"ElementaryTypeName","src":"462:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4402,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"492:6:20","nodeType":"VariableDeclaration","scope":4404,"src":"484:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4401,"name":"uint256","nodeType":"ElementaryTypeName","src":"484:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"461:38:20"},"src":"448:52:20"},{"anonymous":false,"id":4410,"name":"Withdraw","nameLocation":"511:8:20","nodeType":"EventDefinition","parameters":{"id":4409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4406,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"536:4:20","nodeType":"VariableDeclaration","scope":4410,"src":"520:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4405,"name":"address","nodeType":"ElementaryTypeName","src":"520:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4408,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"550:6:20","nodeType":"VariableDeclaration","scope":4410,"src":"542:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4407,"name":"uint256","nodeType":"ElementaryTypeName","src":"542:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"519:38:20"},"src":"505:53:20"},{"body":{"id":4421,"nodeType":"Block","src":"623:37:20","statements":[{"expression":{"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4417,"name":"openDeDeLend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"633:12:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"648:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"633:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4420,"nodeType":"ExpressionStatement","src":"633:20:20"}]},"functionSelector":"e3b86a5e","id":4422,"implemented":true,"kind":"function","modifiers":[{"id":4415,"kind":"modifierInvocation","modifierName":{"id":4414,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"613:9:20"},"nodeType":"ModifierInvocation","src":"613:9:20"}],"name":"changeOpenDeDeLend","nameLocation":"573:18:20","nodeType":"FunctionDefinition","parameters":{"id":4413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4412,"mutability":"mutable","name":"value","nameLocation":"597:5:20","nodeType":"VariableDeclaration","scope":4422,"src":"592:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4411,"name":"bool","nodeType":"ElementaryTypeName","src":"592:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"591:12:20"},"returnParameters":{"id":4416,"nodeType":"ParameterList","parameters":[],"src":"623:0:20"},"scope":4716,"src":"564:96:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4438,"nodeType":"Block","src":"712:80:20","statements":[{"expression":{"arguments":[{"baseExpression":{"id":4428,"name":"ddlContracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4390,"src":"730:12:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4431,"indexExpression":{"expression":{"id":4429,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"743:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"743:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"730:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4427,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"722:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"722:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4433,"nodeType":"ExpressionStatement","src":"722:33:20"},{"expression":{"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4434,"name":"totalLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"765:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"780:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"765:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4437,"nodeType":"ExpressionStatement","src":"765:20:20"}]},"functionSelector":"2bc355ca","id":4439,"implemented":true,"kind":"function","modifiers":[],"name":"addTotalLocked","nameLocation":"675:14:20","nodeType":"FunctionDefinition","parameters":{"id":4425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4424,"mutability":"mutable","name":"value","nameLocation":"698:5:20","nodeType":"VariableDeclaration","scope":4439,"src":"690:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4423,"name":"uint256","nodeType":"ElementaryTypeName","src":"690:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"689:15:20"},"returnParameters":{"id":4426,"nodeType":"ParameterList","parameters":[],"src":"712:0:20"},"scope":4716,"src":"666:126:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4455,"nodeType":"Block","src":"844:80:20","statements":[{"expression":{"arguments":[{"baseExpression":{"id":4445,"name":"ddlContracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4390,"src":"862:12:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4448,"indexExpression":{"expression":{"id":4446,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"875:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"875:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"862:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4444,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"854:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"854:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4450,"nodeType":"ExpressionStatement","src":"854:33:20"},{"expression":{"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4451,"name":"totalLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"897:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"912:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"897:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4454,"nodeType":"ExpressionStatement","src":"897:20:20"}]},"functionSelector":"1b45a68d","id":4456,"implemented":true,"kind":"function","modifiers":[],"name":"subTotalLocked","nameLocation":"807:14:20","nodeType":"FunctionDefinition","parameters":{"id":4442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4441,"mutability":"mutable","name":"value","nameLocation":"830:5:20","nodeType":"VariableDeclaration","scope":4456,"src":"822:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4440,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:15:20"},"returnParameters":{"id":4443,"nodeType":"ParameterList","parameters":[],"src":"844:0:20"},"scope":4716,"src":"798:126:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4471,"nodeType":"Block","src":"995:57:20","statements":[{"expression":{"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4461,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"1005:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4466,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1039:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_PoolDDL_$4716","typeString":"contract PoolDDL"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PoolDDL_$4716","typeString":"contract PoolDDL"}],"id":4465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1031:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4464,"name":"address","nodeType":"ElementaryTypeName","src":"1031:7:20","typeDescriptions":{}}},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1031:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4462,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4393,"src":"1015:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":779,"src":"1015:15:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1015:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1005:40:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4470,"nodeType":"ExpressionStatement","src":"1005:40:20"}]},"functionSelector":"12b58349","id":4472,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalBalance","nameLocation":"939:15:20","nodeType":"FunctionDefinition","parameters":{"id":4457,"nodeType":"ParameterList","parameters":[],"src":"954:2:20"},"returnParameters":{"id":4460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4459,"mutability":"mutable","name":"balance","nameLocation":"986:7:20","nodeType":"VariableDeclaration","scope":4472,"src":"978:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4458,"name":"uint256","nodeType":"ElementaryTypeName","src":"978:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"977:17:20"},"scope":4716,"src":"930:122:20","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4501,"nodeType":"Block","src":"1130:140:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4479,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"1144:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1144:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1160:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1144:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4496,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4477,"src":"1254:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1262:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1254:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4499,"nodeType":"ExpressionStatement","src":"1254:9:20"},"id":4500,"nodeType":"IfStatement","src":"1140:123:20","trueBody":{"expression":{"id":4494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4483,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4477,"src":"1175:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4484,"name":"getTotalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4472,"src":"1184:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1184:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4487,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"1214:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4486,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"1204:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1204:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1184:38:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4490,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1183:40:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4491,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"1226:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1226:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1183:56:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1175:64:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4495,"nodeType":"ExpressionStatement","src":"1175:64:20"}}]},"functionSelector":"21e5e2c4","id":4502,"implemented":true,"kind":"function","modifiers":[],"name":"shareOf","nameLocation":"1067:7:20","nodeType":"FunctionDefinition","parameters":{"id":4475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4474,"mutability":"mutable","name":"account","nameLocation":"1083:7:20","nodeType":"VariableDeclaration","scope":4502,"src":"1075:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4473,"name":"address","nodeType":"ElementaryTypeName","src":"1075:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1074:17:20"},"returnParameters":{"id":4478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4477,"mutability":"mutable","name":"share","nameLocation":"1123:5:20","nodeType":"VariableDeclaration","scope":4502,"src":"1115:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4476,"name":"uint256","nodeType":"ElementaryTypeName","src":"1115:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1114:15:20"},"scope":4716,"src":"1058:212:20","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4528,"nodeType":"Block","src":"1377:117:20","statements":[{"expression":{"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4512,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4393,"src":"1387:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4513,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"1395:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"src":"1387:14:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"id":4515,"nodeType":"ExpressionStatement","src":"1387:14:20"},{"expression":{"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4516,"name":"ddlContracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4390,"src":"1411:12:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4518,"indexExpression":{"id":4517,"name":"ddlContract1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"1424:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1411:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1440:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1411:33:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4521,"nodeType":"ExpressionStatement","src":"1411:33:20"},{"expression":{"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4522,"name":"ddlContracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4390,"src":"1454:12:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4524,"indexExpression":{"id":4523,"name":"ddlContract2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4509,"src":"1467:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1454:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1483:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1454:33:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4527,"nodeType":"ExpressionStatement","src":"1454:33:20"}]},"id":4529,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4505,"mutability":"mutable","name":"_token","nameLocation":"1304:6:20","nodeType":"VariableDeclaration","scope":4529,"src":"1297:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"},"typeName":{"id":4504,"nodeType":"UserDefinedTypeName","pathNode":{"id":4503,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":822,"src":"1297:6:20"},"referencedDeclaration":822,"src":"1297:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4507,"mutability":"mutable","name":"ddlContract1","nameLocation":"1328:12:20","nodeType":"VariableDeclaration","scope":4529,"src":"1320:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4506,"name":"address","nodeType":"ElementaryTypeName","src":"1320:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4509,"mutability":"mutable","name":"ddlContract2","nameLocation":"1358:12:20","nodeType":"VariableDeclaration","scope":4529,"src":"1350:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4508,"name":"address","nodeType":"ElementaryTypeName","src":"1350:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1287:89:20"},"returnParameters":{"id":4511,"nodeType":"ParameterList","parameters":[],"src":"1377:0:20"},"scope":4716,"src":"1276:218:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4625,"nodeType":"Block","src":"1635:732:20","statements":[{"expression":{"arguments":[{"id":4541,"name":"openDeDeLend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"1653:12:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7061757365446544654c656e64","id":4542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1667:15:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_53c8d4b505fc4a6062e9676e98edcc8d1715f5765c94eec04006fa629d8118d0","typeString":"literal_string \"pauseDeDeLend\""},"value":"pauseDeDeLend"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_53c8d4b505fc4a6062e9676e98edcc8d1715f5765c94eec04006fa629d8118d0","typeString":"literal_string \"pauseDeDeLend\""}],"id":4540,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1645:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1645:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4544,"nodeType":"ExpressionStatement","src":"1645:38:20"},{"assignments":[4546],"declarations":[{"constant":false,"id":4546,"mutability":"mutable","name":"totalBalance","nameLocation":"1701:12:20","nodeType":"VariableDeclaration","scope":4625,"src":"1693:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4545,"name":"uint256","nodeType":"ElementaryTypeName","src":"1693:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4551,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4547,"name":"getTotalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4472,"src":"1716:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1716:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4549,"name":"totalLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"1736:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1716:31:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1693:54:20"},{"expression":{"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4552,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"1757:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4553,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"1765:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1765:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1781:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1765:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4557,"name":"totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4546,"src":"1786:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1801:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1786:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1765:37:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4568,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"1871:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4569,"name":"INITIAL_RATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"1880:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1871:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1765:127:20","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4561,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"1818:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4562,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"1827:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1827:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1818:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4565,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1817:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4566,"name":"totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4546,"src":"1844:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1817:39:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1757:135:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4573,"nodeType":"ExpressionStatement","src":"1757:135:20"},{"assignments":[4575],"declarations":[{"constant":false,"id":4575,"mutability":"mutable","name":"limit","nameLocation":"1910:5:20","nodeType":"VariableDeclaration","scope":4625,"src":"1902:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4574,"name":"uint256","nodeType":"ElementaryTypeName","src":"1902:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4579,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4576,"name":"maxDepositAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"1918:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4577,"name":"totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4546,"src":"1937:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1918:31:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1902:47:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4581,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"1967:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4582,"name":"minShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"1976:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1967:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c204572726f723a20546865206d696e74206c696d697420697320746f6f206c61726765","id":4584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1986:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_b87bd4f8ab6cab4e05b627666c690eac70070f778ac6ae87e78c887e9456ebc1","typeString":"literal_string \"Pool Error: The mint limit is too large\""},"value":"Pool Error: The mint limit is too large"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b87bd4f8ab6cab4e05b627666c690eac70070f778ac6ae87e78c887e9456ebc1","typeString":"literal_string \"Pool Error: The mint limit is too large\""}],"id":4580,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1959:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1959:69:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4586,"nodeType":"ExpressionStatement","src":"1959:69:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4588,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"2046:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2054:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2046:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c204572726f723a2054686520616d6f756e7420697320746f6f20736d616c6c","id":4591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2057:37:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_92aacf893d2b78594d88afacb0b9e3fb8ba3272d88dc07c1b2cb0b3f742f8ed6","typeString":"literal_string \"Pool Error: The amount is too small\""},"value":"Pool Error: The amount is too small"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_92aacf893d2b78594d88afacb0b9e3fb8ba3272d88dc07c1b2cb0b3f742f8ed6","typeString":"literal_string \"Pool Error: The amount is too small\""}],"id":4587,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2038:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2038:57:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4593,"nodeType":"ExpressionStatement","src":"2038:57:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4595,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"2126:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4596,"name":"limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"2136:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2126:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c204572726f723a204465706f736974696e6720696e746f2074686520706f6f6c206973206e6f7420617661696c61626c65","id":4598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2155:55:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_33e2b1f84abe46a3fc0645ff9d05c4355790ff6c0ca7542300a6e6f0867cd147","typeString":"literal_string \"Pool Error: Depositing into the pool is not available\""},"value":"Pool Error: Depositing into the pool is not available"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_33e2b1f84abe46a3fc0645ff9d05c4355790ff6c0ca7542300a6e6f0867cd147","typeString":"literal_string \"Pool Error: Depositing into the pool is not available\""}],"id":4594,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2105:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2105:115:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4600,"nodeType":"ExpressionStatement","src":"2105:115:20"},{"expression":{"arguments":[{"expression":{"id":4604,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2250:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2250:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4608,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2270:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_PoolDDL_$4716","typeString":"contract PoolDDL"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PoolDDL_$4716","typeString":"contract PoolDDL"}],"id":4607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2262:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4606,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:20","typeDescriptions":{}}},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2262:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4610,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"2277:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4601,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4393,"src":"2231:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":821,"src":"2231:18:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2231:53:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4612,"nodeType":"ExpressionStatement","src":"2231:53:20"},{"expression":{"arguments":[{"expression":{"id":4614,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2300:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2300:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4616,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"2312:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4613,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"2294:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2294:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4618,"nodeType":"ExpressionStatement","src":"2294:24:20"},{"eventCall":{"arguments":[{"expression":{"id":4620,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2341:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2341:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4622,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"2353:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4619,"name":"Provide","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"2333:7:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2333:27:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4624,"nodeType":"EmitStatement","src":"2328:32:20"}]},"functionSelector":"13bdde8b","id":4626,"implemented":true,"kind":"function","modifiers":[],"name":"provideFrom","nameLocation":"1509:11:20","nodeType":"FunctionDefinition","parameters":{"id":4536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4531,"mutability":"mutable","name":"account","nameLocation":"1538:7:20","nodeType":"VariableDeclaration","scope":4626,"src":"1530:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4530,"name":"address","nodeType":"ElementaryTypeName","src":"1530:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4533,"mutability":"mutable","name":"amount","nameLocation":"1563:6:20","nodeType":"VariableDeclaration","scope":4626,"src":"1555:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4532,"name":"uint256","nodeType":"ElementaryTypeName","src":"1555:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4535,"mutability":"mutable","name":"minShare","nameLocation":"1587:8:20","nodeType":"VariableDeclaration","scope":4626,"src":"1579:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4534,"name":"uint256","nodeType":"ElementaryTypeName","src":"1579:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1520:81:20"},"returnParameters":{"id":4539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4538,"mutability":"mutable","name":"share","nameLocation":"1628:5:20","nodeType":"VariableDeclaration","scope":4626,"src":"1620:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4537,"name":"uint256","nodeType":"ElementaryTypeName","src":"1620:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1619:15:20"},"scope":4716,"src":"1500:867:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4685,"nodeType":"Block","src":"2416:372:20","statements":[{"assignments":[4632],"declarations":[{"constant":false,"id":4632,"mutability":"mutable","name":"totalBalance","nameLocation":"2434:12:20","nodeType":"VariableDeclaration","scope":4685,"src":"2426:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4631,"name":"uint256","nodeType":"ElementaryTypeName","src":"2426:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4637,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4633,"name":"getTotalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4472,"src":"2449:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2449:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4635,"name":"totalLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"2469:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2449:31:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2426:54:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4639,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"2498:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4640,"name":"getTotalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4472,"src":"2508:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2508:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2498:27:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4638,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2490:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2490:36:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4644,"nodeType":"ExpressionStatement","src":"2490:36:20"},{"assignments":[4646],"declarations":[{"constant":false,"id":4646,"mutability":"mutable","name":"burn","nameLocation":"2544:4:20","nodeType":"VariableDeclaration","scope":4685,"src":"2536:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4645,"name":"uint256","nodeType":"ElementaryTypeName","src":"2536:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4654,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4647,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"2552:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4648,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"2561:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2561:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2552:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4651,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2551:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4652,"name":"totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"2578:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:39:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2536:54:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4656,"name":"burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4646,"src":"2608:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"id":4658,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2626:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2626:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4657,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"2616:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2616:21:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2608:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e7420697320746f6f206c61726765","id":4662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2639:21:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_374e68e173e86f595df5cf495ac0ac4f9128724fe573c888db944b89d7cc2af8","typeString":"literal_string \"Amount is too large\""},"value":"Amount is too large"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_374e68e173e86f595df5cf495ac0ac4f9128724fe573c888db944b89d7cc2af8","typeString":"literal_string \"Amount is too large\""}],"id":4655,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2600:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2600:61:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4664,"nodeType":"ExpressionStatement","src":"2600:61:20"},{"expression":{"arguments":[{"expression":{"id":4666,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2677:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2677:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4668,"name":"burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4646,"src":"2689:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4665,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"2671:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2671:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4670,"nodeType":"ExpressionStatement","src":"2671:23:20"},{"expression":{"arguments":[{"expression":{"id":4674,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2719:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2719:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4676,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"2731:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4671,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4393,"src":"2704:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":789,"src":"2704:14:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2704:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4678,"nodeType":"ExpressionStatement","src":"2704:34:20"},{"eventCall":{"arguments":[{"expression":{"id":4680,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2762:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2762:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4682,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"2774:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4679,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"2753:8:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2753:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4684,"nodeType":"EmitStatement","src":"2748:33:20"}]},"functionSelector":"2e1a7d4d","id":4686,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"2382:8:20","nodeType":"FunctionDefinition","parameters":{"id":4629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4628,"mutability":"mutable","name":"amount","nameLocation":"2399:6:20","nodeType":"VariableDeclaration","scope":4686,"src":"2391:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4627,"name":"uint256","nodeType":"ElementaryTypeName","src":"2391:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2390:16:20"},"returnParameters":{"id":4630,"nodeType":"ParameterList","parameters":[],"src":"2416:0:20"},"scope":4716,"src":"2373:415:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4714,"nodeType":"Block","src":"2843:132:20","statements":[{"expression":{"arguments":[{"baseExpression":{"id":4694,"name":"ddlContracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4390,"src":"2861:12:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4697,"indexExpression":{"expression":{"id":4695,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2874:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2874:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2861:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4693,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2853:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2853:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4699,"nodeType":"ExpressionStatement","src":"2853:33:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4701,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4690,"src":"2904:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4702,"name":"getTotalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4472,"src":"2914:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2914:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2904:27:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4700,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2896:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2896:36:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4706,"nodeType":"ExpressionStatement","src":"2896:36:20"},{"expression":{"arguments":[{"id":4710,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"2957:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4711,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4690,"src":"2961:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4707,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4393,"src":"2942:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$822","typeString":"contract IERC20"}},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":789,"src":"2942:14:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2942:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4713,"nodeType":"ExpressionStatement","src":"2942:26:20"}]},"functionSelector":"d0679d34","id":4715,"implemented":true,"kind":"function","modifiers":[],"name":"send","nameLocation":"2803:4:20","nodeType":"FunctionDefinition","parameters":{"id":4691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4688,"mutability":"mutable","name":"to","nameLocation":"2816:2:20","nodeType":"VariableDeclaration","scope":4715,"src":"2808:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4687,"name":"address","nodeType":"ElementaryTypeName","src":"2808:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4690,"mutability":"mutable","name":"amount","nameLocation":"2828:6:20","nodeType":"VariableDeclaration","scope":4715,"src":"2820:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4689,"name":"uint256","nodeType":"ElementaryTypeName","src":"2820:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2807:28:20"},"returnParameters":{"id":4692,"nodeType":"ParameterList","parameters":[],"src":"2843:0:20"},"scope":4716,"src":"2794:181:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":4717,"src":"134:2843:20","usedErrors":[]}],"src":"0:2978:20"},"id":20}},"contracts":{"@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0;\\n\\ninterface AggregatorV3Interface {\\n\\n  function decimals() external view returns (uint8);\\n  function description() external view returns (string memory);\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n}\\n\",\"keccak256\":\"0x78af5c13ec137bdbb22ec9d65c730fb6f138d3a61a3fdbb63be4838ce7faf2a6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":53,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_203":{"entryPoint":null,"id":203,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":270,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":453,"id":null,"parameterSlots":2,"returnSlots":2},"extract_byte_array_length":{"entryPoint":559,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":620,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1985:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"78:821:21","statements":[{"body":{"nodeType":"YulBlock","src":"127:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"136:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"139:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"129:6:21"},"nodeType":"YulFunctionCall","src":"129:12:21"},"nodeType":"YulExpressionStatement","src":"129:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"106:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"114:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"102:3:21"},"nodeType":"YulFunctionCall","src":"102:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"121:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"98:3:21"},"nodeType":"YulFunctionCall","src":"98:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"91:6:21"},"nodeType":"YulFunctionCall","src":"91:35:21"},"nodeType":"YulIf","src":"88:2:21"},{"nodeType":"YulVariableDeclaration","src":"152:23:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"168:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"162:5:21"},"nodeType":"YulFunctionCall","src":"162:13:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"156:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"184:28:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"202:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"206:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"198:3:21"},"nodeType":"YulFunctionCall","src":"198:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"210:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"194:3:21"},"nodeType":"YulFunctionCall","src":"194:18:21"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"188:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"235:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"237:16:21"},"nodeType":"YulFunctionCall","src":"237:18:21"},"nodeType":"YulExpressionStatement","src":"237:18:21"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"227:2:21"},{"name":"_2","nodeType":"YulIdentifier","src":"231:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"224:2:21"},"nodeType":"YulFunctionCall","src":"224:10:21"},"nodeType":"YulIf","src":"221:2:21"},{"nodeType":"YulVariableDeclaration","src":"266:17:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"280:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"276:3:21"},"nodeType":"YulFunctionCall","src":"276:7:21"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"270:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"292:23:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"312:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"306:5:21"},"nodeType":"YulFunctionCall","src":"306:9:21"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"296:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"324:71:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"346:6:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"370:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"374:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"366:3:21"},"nodeType":"YulFunctionCall","src":"366:13:21"},{"name":"_3","nodeType":"YulIdentifier","src":"381:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"362:3:21"},"nodeType":"YulFunctionCall","src":"362:22:21"},{"kind":"number","nodeType":"YulLiteral","src":"386:2:21","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"358:3:21"},"nodeType":"YulFunctionCall","src":"358:31:21"},{"name":"_3","nodeType":"YulIdentifier","src":"391:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"354:3:21"},"nodeType":"YulFunctionCall","src":"354:40:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"342:3:21"},"nodeType":"YulFunctionCall","src":"342:53:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"328:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"454:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"456:16:21"},"nodeType":"YulFunctionCall","src":"456:18:21"},"nodeType":"YulExpressionStatement","src":"456:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"413:10:21"},{"name":"_2","nodeType":"YulIdentifier","src":"425:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"410:2:21"},"nodeType":"YulFunctionCall","src":"410:18:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"433:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"445:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"430:2:21"},"nodeType":"YulFunctionCall","src":"430:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"407:2:21"},"nodeType":"YulFunctionCall","src":"407:46:21"},"nodeType":"YulIf","src":"404:2:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"492:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"496:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"485:6:21"},"nodeType":"YulFunctionCall","src":"485:22:21"},"nodeType":"YulExpressionStatement","src":"485:22:21"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"523:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"531:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"516:6:21"},"nodeType":"YulFunctionCall","src":"516:18:21"},"nodeType":"YulExpressionStatement","src":"516:18:21"},{"nodeType":"YulVariableDeclaration","src":"543:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"553:4:21","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"547:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"603:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"612:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"615:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"605:6:21"},"nodeType":"YulFunctionCall","src":"605:12:21"},"nodeType":"YulExpressionStatement","src":"605:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"580:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"588:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"576:3:21"},"nodeType":"YulFunctionCall","src":"576:15:21"},{"name":"_4","nodeType":"YulIdentifier","src":"593:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"572:3:21"},"nodeType":"YulFunctionCall","src":"572:24:21"},{"name":"end","nodeType":"YulIdentifier","src":"598:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"569:2:21"},"nodeType":"YulFunctionCall","src":"569:33:21"},"nodeType":"YulIf","src":"566:2:21"},{"nodeType":"YulVariableDeclaration","src":"628:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"637:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"632:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"693:87:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"722:6:21"},{"name":"i","nodeType":"YulIdentifier","src":"730:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"718:3:21"},"nodeType":"YulFunctionCall","src":"718:14:21"},{"name":"_4","nodeType":"YulIdentifier","src":"734:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"714:3:21"},"nodeType":"YulFunctionCall","src":"714:23:21"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"753:6:21"},{"name":"i","nodeType":"YulIdentifier","src":"761:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"749:3:21"},"nodeType":"YulFunctionCall","src":"749:14:21"},{"name":"_4","nodeType":"YulIdentifier","src":"765:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:21"},"nodeType":"YulFunctionCall","src":"745:23:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"739:5:21"},"nodeType":"YulFunctionCall","src":"739:30:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"707:6:21"},"nodeType":"YulFunctionCall","src":"707:63:21"},"nodeType":"YulExpressionStatement","src":"707:63:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"658:1:21"},{"name":"_1","nodeType":"YulIdentifier","src":"661:2:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"655:2:21"},"nodeType":"YulFunctionCall","src":"655:9:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"665:19:21","statements":[{"nodeType":"YulAssignment","src":"667:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"676:1:21"},{"name":"_4","nodeType":"YulIdentifier","src":"679:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"672:3:21"},"nodeType":"YulFunctionCall","src":"672:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"667:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"651:3:21","statements":[]},"src":"647:133:21"},{"body":{"nodeType":"YulBlock","src":"810:59:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"839:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"847:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"835:3:21"},"nodeType":"YulFunctionCall","src":"835:15:21"},{"name":"_4","nodeType":"YulIdentifier","src":"852:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"831:3:21"},"nodeType":"YulFunctionCall","src":"831:24:21"},{"kind":"number","nodeType":"YulLiteral","src":"857:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"824:6:21"},"nodeType":"YulFunctionCall","src":"824:35:21"},"nodeType":"YulExpressionStatement","src":"824:35:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"795:1:21"},{"name":"_1","nodeType":"YulIdentifier","src":"798:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"792:2:21"},"nodeType":"YulFunctionCall","src":"792:9:21"},"nodeType":"YulIf","src":"789:2:21"},{"nodeType":"YulAssignment","src":"878:15:21","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"887:6:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"878:5:21"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"52:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"60:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"68:5:21","type":""}],"src":"14:885:21"},{"body":{"nodeType":"YulBlock","src":"1022:444:21","statements":[{"body":{"nodeType":"YulBlock","src":"1068:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1077:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1080:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1070:6:21"},"nodeType":"YulFunctionCall","src":"1070:12:21"},"nodeType":"YulExpressionStatement","src":"1070:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1043:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1052:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1039:3:21"},"nodeType":"YulFunctionCall","src":"1039:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1064:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1035:3:21"},"nodeType":"YulFunctionCall","src":"1035:32:21"},"nodeType":"YulIf","src":"1032:2:21"},{"nodeType":"YulVariableDeclaration","src":"1093:30:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1113:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1107:5:21"},"nodeType":"YulFunctionCall","src":"1107:16:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1132:28:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1150:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1154:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1146:3:21"},"nodeType":"YulFunctionCall","src":"1146:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"1158:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1142:3:21"},"nodeType":"YulFunctionCall","src":"1142:18:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1136:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1187:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1196:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1199:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1189:6:21"},"nodeType":"YulFunctionCall","src":"1189:12:21"},"nodeType":"YulExpressionStatement","src":"1189:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1175:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"1183:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1172:2:21"},"nodeType":"YulFunctionCall","src":"1172:14:21"},"nodeType":"YulIf","src":"1169:2:21"},{"nodeType":"YulAssignment","src":"1212:71:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1255:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1266:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1251:3:21"},"nodeType":"YulFunctionCall","src":"1251:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1275:7:21"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1222:28:21"},"nodeType":"YulFunctionCall","src":"1222:61:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1212:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"1292:41:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1318:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1329:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1314:3:21"},"nodeType":"YulFunctionCall","src":"1314:18:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1308:5:21"},"nodeType":"YulFunctionCall","src":"1308:25:21"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1296:8:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1362:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1371:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1374:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1364:6:21"},"nodeType":"YulFunctionCall","src":"1364:12:21"},"nodeType":"YulExpressionStatement","src":"1364:12:21"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1348:8:21"},{"name":"_1","nodeType":"YulIdentifier","src":"1358:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1345:2:21"},"nodeType":"YulFunctionCall","src":"1345:16:21"},"nodeType":"YulIf","src":"1342:2:21"},{"nodeType":"YulAssignment","src":"1387:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1430:9:21"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1441:8:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1426:3:21"},"nodeType":"YulFunctionCall","src":"1426:24:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1452:7:21"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1397:28:21"},"nodeType":"YulFunctionCall","src":"1397:63:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1387:6:21"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"980:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"991:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1003:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1011:6:21","type":""}],"src":"904:562:21"},{"body":{"nodeType":"YulBlock","src":"1526:325:21","statements":[{"nodeType":"YulAssignment","src":"1536:22:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1550:1:21","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1553:4:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1546:3:21"},"nodeType":"YulFunctionCall","src":"1546:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1536:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"1567:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1597:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"1603:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1593:3:21"},"nodeType":"YulFunctionCall","src":"1593:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1571:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1644:31:21","statements":[{"nodeType":"YulAssignment","src":"1646:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1660:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1668:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1656:3:21"},"nodeType":"YulFunctionCall","src":"1656:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1646:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1624:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1617:6:21"},"nodeType":"YulFunctionCall","src":"1617:26:21"},"nodeType":"YulIf","src":"1614:2:21"},{"body":{"nodeType":"YulBlock","src":"1734:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1755:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1762:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1767:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1758:3:21"},"nodeType":"YulFunctionCall","src":"1758:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1748:6:21"},"nodeType":"YulFunctionCall","src":"1748:31:21"},"nodeType":"YulExpressionStatement","src":"1748:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1799:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1802:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1792:6:21"},"nodeType":"YulFunctionCall","src":"1792:15:21"},"nodeType":"YulExpressionStatement","src":"1792:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1827:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1830:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1820:6:21"},"nodeType":"YulFunctionCall","src":"1820:15:21"},"nodeType":"YulExpressionStatement","src":"1820:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1690:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1713:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1721:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1710:2:21"},"nodeType":"YulFunctionCall","src":"1710:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1687:2:21"},"nodeType":"YulFunctionCall","src":"1687:38:21"},"nodeType":"YulIf","src":"1684:2:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1506:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1515:6:21","type":""}],"src":"1471:380:21"},{"body":{"nodeType":"YulBlock","src":"1888:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1905:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1917:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1908:3:21"},"nodeType":"YulFunctionCall","src":"1908:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1898:6:21"},"nodeType":"YulFunctionCall","src":"1898:31:21"},"nodeType":"YulExpressionStatement","src":"1898:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1945:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1948:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1938:6:21"},"nodeType":"YulFunctionCall","src":"1938:15:21"},"nodeType":"YulExpressionStatement","src":"1938:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1969:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1972:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1962:6:21"},"nodeType":"YulFunctionCall","src":"1962:15:21"},"nodeType":"YulExpressionStatement","src":"1962:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1856:127:21"}]},"contents":"{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000b1938038062000b198339810160408190526200003491620001c5565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b82805462000076906200022f565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200012057600080fd5b81516001600160401b03808211156200013d576200013d6200026c565b604051601f8301601f19908116603f011681019082821181831017156200016857620001686200026c565b816040528381526020925086838588010111156200018557600080fd5b600091505b83821015620001a957858201830151818301840152908201906200018a565b83821115620001bb5760008385830101525b9695505050505050565b60008060408385031215620001d957600080fd5b82516001600160401b0380821115620001f157600080fd5b620001ff868387016200010e565b935060208501519150808211156200021657600080fd5b5062000225858286016200010e565b9150509250929050565b600181811c908216806200024457607f821691505b602082108114156200026657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61088780620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061079b565b60405180910390f35b6100df6100da366004610771565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610735565b61024a565b604051601281526020016100c3565b6100df610131366004610771565b61026e565b6100f36101443660046106e0565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610771565b61029f565b6100df610188366004610771565b61031f565b6100f361019b366004610702565b61032d565b6060600380546101af90610816565b80601f01602080910402602001604051908101604052809291908181526020018280546101db90610816565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b91906107f0565b610358565b6060600480546101af90610816565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b9084906107f0565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b80356001600160a01b03811681146106db57600080fd5b919050565b6000602082840312156106f257600080fd5b6106fb826106c4565b9392505050565b6000806040838503121561071557600080fd5b61071e836106c4565b915061072c602084016106c4565b90509250929050565b60008060006060848603121561074a57600080fd5b610753846106c4565b9250610761602085016106c4565b9150604084013590509250925092565b6000806040838503121561078457600080fd5b61078d836106c4565b946020939093013593505050565b600060208083528351808285015260005b818110156107c8578581018301518582016040015282016107ac565b818111156107da576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561081157634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061082a57607f821691505b6020821081141561084b57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220410f8633e5efe6c5700c6c64b6452e4574ef4855120af9601b1b05c7c8c6c40464736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB19 CODESIZE SUB DUP1 PUSH3 0xB19 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C5 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x22F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13D JUMPI PUSH3 0x13D PUSH3 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x168 JUMPI PUSH3 0x168 PUSH3 0x26C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A9 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x18A JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1BB JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FF DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x225 DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x266 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x887 DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x702 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x816 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x816 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x816 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x7F0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6FB DUP3 PUSH2 0x6C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x71E DUP4 PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x72C PUSH1 0x20 DUP5 ADD PUSH2 0x6C4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x753 DUP5 PUSH2 0x6C4 JUMP JUMPDEST SWAP3 POP PUSH2 0x761 PUSH1 0x20 DUP6 ADD PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x784 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78D DUP4 PUSH2 0x6C4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C8 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7AC JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7DA JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x811 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x82A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x84B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xF DUP7 CALLER 0xE5 0xEF 0xE6 0xC5 PUSH17 0xC6C64B6452E4574EF4855120AF9601B1B SDIV 0xC7 0xC8 0xC6 0xC4 DIV PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"1403:11214:2:-:0;;;1978:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2044:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2067:17:2;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;1403:11214;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1403:11214:2;;;-1:-1:-1;1403:11214:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:21;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;139:1;136;129:12;88:2;162:13;;-1:-1:-1;;;;;224:10:21;;;221:2;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:21;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:2;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:2;;;615:1;612;605:12;566:2;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:2;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:2;887:6;78:821;-1:-1:-1;;;;;;78:821:21:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:2;;;1080:1;1077;1070:12;1032:2;1107:16;;-1:-1:-1;;;;;1172:14:21;;;1169:2;;;1199:1;1196;1189:12;1169:2;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:2;;;1374:1;1371;1364:12;1342:2;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;1022:444;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:2;;1668:4;1660:6;1656:17;1646:27;;1614:2;1721;1713:6;1710:14;1690:18;1687:38;1684:2;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:2;;1526:325;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1888:95;1403:11214:2;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_743":{"entryPoint":null,"id":743,"parameterSlots":3,"returnSlots":0},"@_approve_678":{"entryPoint":856,"id":678,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_732":{"entryPoint":null,"id":732,"parameterSlots":3,"returnSlots":0},"@_msgSender_2499":{"entryPoint":null,"id":2499,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_721":{"entryPoint":1148,"id":721,"parameterSlots":3,"returnSlots":0},"@_transfer_505":{"entryPoint":1270,"id":505,"parameterSlots":3,"returnSlots":0},"@allowance_300":{"entryPoint":813,"id":300,"parameterSlots":2,"returnSlots":1},"@approve_325":{"entryPoint":562,"id":325,"parameterSlots":2,"returnSlots":1},"@balanceOf_257":{"entryPoint":null,"id":257,"parameterSlots":1,"returnSlots":1},"@decimals_233":{"entryPoint":null,"id":233,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_428":{"entryPoint":671,"id":428,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_387":{"entryPoint":622,"id":387,"parameterSlots":2,"returnSlots":1},"@name_213":{"entryPoint":416,"id":213,"parameterSlots":0,"returnSlots":1},"@symbol_223":{"entryPoint":656,"id":223,"parameterSlots":0,"returnSlots":1},"@totalSupply_243":{"entryPoint":null,"id":243,"parameterSlots":0,"returnSlots":1},"@transferFrom_358":{"entryPoint":586,"id":358,"parameterSlots":3,"returnSlots":1},"@transfer_282":{"entryPoint":799,"id":282,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1732,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1760,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1794,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1845,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1905,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1947,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2032,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2070,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5806:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:21","statements":[{"nodeType":"YulAssignment","src":"73:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:21"},"nodeType":"YulFunctionCall","src":"82:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:21"}]},{"body":{"nodeType":"YulBlock","src":"165:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:21"},"nodeType":"YulFunctionCall","src":"167:12:21"},"nodeType":"YulExpressionStatement","src":"167:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:21"},"nodeType":"YulFunctionCall","src":"146:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:21"},"nodeType":"YulFunctionCall","src":"142:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:21"},"nodeType":"YulFunctionCall","src":"131:31:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:21"},"nodeType":"YulFunctionCall","src":"121:42:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:21"},"nodeType":"YulFunctionCall","src":"114:50:21"},"nodeType":"YulIf","src":"111:2:21"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:21","type":""}],"src":"14:173:21"},{"body":{"nodeType":"YulBlock","src":"262:116:21","statements":[{"body":{"nodeType":"YulBlock","src":"308:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:21"},"nodeType":"YulFunctionCall","src":"310:12:21"},"nodeType":"YulExpressionStatement","src":"310:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"283:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"292:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"279:3:21"},"nodeType":"YulFunctionCall","src":"279:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"304:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"275:3:21"},"nodeType":"YulFunctionCall","src":"275:32:21"},"nodeType":"YulIf","src":"272:2:21"},{"nodeType":"YulAssignment","src":"333:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"362:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"343:18:21"},"nodeType":"YulFunctionCall","src":"343:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"333:6:21"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"228:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"239:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"251:6:21","type":""}],"src":"192:186:21"},{"body":{"nodeType":"YulBlock","src":"470:173:21","statements":[{"body":{"nodeType":"YulBlock","src":"516:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"525:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"528:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"518:6:21"},"nodeType":"YulFunctionCall","src":"518:12:21"},"nodeType":"YulExpressionStatement","src":"518:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"491:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"500:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"487:3:21"},"nodeType":"YulFunctionCall","src":"487:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"512:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"483:3:21"},"nodeType":"YulFunctionCall","src":"483:32:21"},"nodeType":"YulIf","src":"480:2:21"},{"nodeType":"YulAssignment","src":"541:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"570:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"551:18:21"},"nodeType":"YulFunctionCall","src":"551:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"541:6:21"}]},{"nodeType":"YulAssignment","src":"589:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"622:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"633:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"618:3:21"},"nodeType":"YulFunctionCall","src":"618:18:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"599:18:21"},"nodeType":"YulFunctionCall","src":"599:38:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"589:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"428:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"439:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"451:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"459:6:21","type":""}],"src":"383:260:21"},{"body":{"nodeType":"YulBlock","src":"752:224:21","statements":[{"body":{"nodeType":"YulBlock","src":"798:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"807:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"810:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"800:6:21"},"nodeType":"YulFunctionCall","src":"800:12:21"},"nodeType":"YulExpressionStatement","src":"800:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"773:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"782:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"769:3:21"},"nodeType":"YulFunctionCall","src":"769:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"794:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"765:3:21"},"nodeType":"YulFunctionCall","src":"765:32:21"},"nodeType":"YulIf","src":"762:2:21"},{"nodeType":"YulAssignment","src":"823:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"852:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"833:18:21"},"nodeType":"YulFunctionCall","src":"833:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"823:6:21"}]},{"nodeType":"YulAssignment","src":"871:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"904:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"915:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"900:3:21"},"nodeType":"YulFunctionCall","src":"900:18:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"881:18:21"},"nodeType":"YulFunctionCall","src":"881:38:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"871:6:21"}]},{"nodeType":"YulAssignment","src":"928:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"955:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"966:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"951:3:21"},"nodeType":"YulFunctionCall","src":"951:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"938:12:21"},"nodeType":"YulFunctionCall","src":"938:32:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"928:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"702:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"713:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"725:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"733:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"741:6:21","type":""}],"src":"648:328:21"},{"body":{"nodeType":"YulBlock","src":"1068:167:21","statements":[{"body":{"nodeType":"YulBlock","src":"1114:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1123:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1126:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1116:6:21"},"nodeType":"YulFunctionCall","src":"1116:12:21"},"nodeType":"YulExpressionStatement","src":"1116:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1089:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1098:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1085:3:21"},"nodeType":"YulFunctionCall","src":"1085:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1110:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1081:3:21"},"nodeType":"YulFunctionCall","src":"1081:32:21"},"nodeType":"YulIf","src":"1078:2:21"},{"nodeType":"YulAssignment","src":"1139:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1149:18:21"},"nodeType":"YulFunctionCall","src":"1149:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1139:6:21"}]},{"nodeType":"YulAssignment","src":"1187:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1214:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1225:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1210:3:21"},"nodeType":"YulFunctionCall","src":"1210:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1197:12:21"},"nodeType":"YulFunctionCall","src":"1197:32:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1187:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1026:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1037:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1049:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1057:6:21","type":""}],"src":"981:254:21"},{"body":{"nodeType":"YulBlock","src":"1335:92:21","statements":[{"nodeType":"YulAssignment","src":"1345:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1357:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1368:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1353:3:21"},"nodeType":"YulFunctionCall","src":"1353:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1345:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1387:9:21"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1412:6:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1405:6:21"},"nodeType":"YulFunctionCall","src":"1405:14:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1398:6:21"},"nodeType":"YulFunctionCall","src":"1398:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1380:6:21"},"nodeType":"YulFunctionCall","src":"1380:41:21"},"nodeType":"YulExpressionStatement","src":"1380:41:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1304:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1315:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1326:4:21","type":""}],"src":"1240:187:21"},{"body":{"nodeType":"YulBlock","src":"1553:476:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1563:12:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1573:2:21","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1567:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1591:9:21"},{"name":"_1","nodeType":"YulIdentifier","src":"1602:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1584:6:21"},"nodeType":"YulFunctionCall","src":"1584:21:21"},"nodeType":"YulExpressionStatement","src":"1584:21:21"},{"nodeType":"YulVariableDeclaration","src":"1614:27:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1634:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1628:5:21"},"nodeType":"YulFunctionCall","src":"1628:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1618:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1661:9:21"},{"name":"_1","nodeType":"YulIdentifier","src":"1672:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1657:3:21"},"nodeType":"YulFunctionCall","src":"1657:18:21"},{"name":"length","nodeType":"YulIdentifier","src":"1677:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1650:6:21"},"nodeType":"YulFunctionCall","src":"1650:34:21"},"nodeType":"YulExpressionStatement","src":"1650:34:21"},{"nodeType":"YulVariableDeclaration","src":"1693:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1702:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1697:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1762:90:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1791:9:21"},{"name":"i","nodeType":"YulIdentifier","src":"1802:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1787:3:21"},"nodeType":"YulFunctionCall","src":"1787:17:21"},{"kind":"number","nodeType":"YulLiteral","src":"1806:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1783:3:21"},"nodeType":"YulFunctionCall","src":"1783:26:21"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1825:6:21"},{"name":"i","nodeType":"YulIdentifier","src":"1833:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1821:3:21"},"nodeType":"YulFunctionCall","src":"1821:14:21"},{"name":"_1","nodeType":"YulIdentifier","src":"1837:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1817:3:21"},"nodeType":"YulFunctionCall","src":"1817:23:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1811:5:21"},"nodeType":"YulFunctionCall","src":"1811:30:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1776:6:21"},"nodeType":"YulFunctionCall","src":"1776:66:21"},"nodeType":"YulExpressionStatement","src":"1776:66:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1723:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"1726:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1720:2:21"},"nodeType":"YulFunctionCall","src":"1720:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1734:19:21","statements":[{"nodeType":"YulAssignment","src":"1736:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1745:1:21"},{"name":"_1","nodeType":"YulIdentifier","src":"1748:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1741:3:21"},"nodeType":"YulFunctionCall","src":"1741:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1736:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"1716:3:21","statements":[]},"src":"1712:140:21"},{"body":{"nodeType":"YulBlock","src":"1886:66:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1915:9:21"},{"name":"length","nodeType":"YulIdentifier","src":"1926:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1911:3:21"},"nodeType":"YulFunctionCall","src":"1911:22:21"},{"kind":"number","nodeType":"YulLiteral","src":"1935:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1907:3:21"},"nodeType":"YulFunctionCall","src":"1907:31:21"},{"kind":"number","nodeType":"YulLiteral","src":"1940:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1900:6:21"},"nodeType":"YulFunctionCall","src":"1900:42:21"},"nodeType":"YulExpressionStatement","src":"1900:42:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1867:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"1870:6:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1864:2:21"},"nodeType":"YulFunctionCall","src":"1864:13:21"},"nodeType":"YulIf","src":"1861:2:21"},{"nodeType":"YulAssignment","src":"1961:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1977:9:21"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1996:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2004:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1992:3:21"},"nodeType":"YulFunctionCall","src":"1992:15:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2013:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2009:3:21"},"nodeType":"YulFunctionCall","src":"2009:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1988:3:21"},"nodeType":"YulFunctionCall","src":"1988:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1973:3:21"},"nodeType":"YulFunctionCall","src":"1973:45:21"},{"kind":"number","nodeType":"YulLiteral","src":"2020:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1969:3:21"},"nodeType":"YulFunctionCall","src":"1969:54:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1961:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1522:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1533:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1544:4:21","type":""}],"src":"1432:597:21"},{"body":{"nodeType":"YulBlock","src":"2208:225:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2225:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2236:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2218:6:21"},"nodeType":"YulFunctionCall","src":"2218:21:21"},"nodeType":"YulExpressionStatement","src":"2218:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2259:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2270:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2255:3:21"},"nodeType":"YulFunctionCall","src":"2255:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"2275:2:21","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2248:6:21"},"nodeType":"YulFunctionCall","src":"2248:30:21"},"nodeType":"YulExpressionStatement","src":"2248:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2298:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2309:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2294:3:21"},"nodeType":"YulFunctionCall","src":"2294:18:21"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"2314:34:21","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2287:6:21"},"nodeType":"YulFunctionCall","src":"2287:62:21"},"nodeType":"YulExpressionStatement","src":"2287:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2369:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2380:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2365:3:21"},"nodeType":"YulFunctionCall","src":"2365:18:21"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"2385:5:21","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2358:6:21"},"nodeType":"YulFunctionCall","src":"2358:33:21"},"nodeType":"YulExpressionStatement","src":"2358:33:21"},{"nodeType":"YulAssignment","src":"2400:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2412:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2423:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2408:3:21"},"nodeType":"YulFunctionCall","src":"2408:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2400:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2185:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2199:4:21","type":""}],"src":"2034:399:21"},{"body":{"nodeType":"YulBlock","src":"2612:224:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2629:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2640:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2622:6:21"},"nodeType":"YulFunctionCall","src":"2622:21:21"},"nodeType":"YulExpressionStatement","src":"2622:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2663:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2674:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2659:3:21"},"nodeType":"YulFunctionCall","src":"2659:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"2679:2:21","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2652:6:21"},"nodeType":"YulFunctionCall","src":"2652:30:21"},"nodeType":"YulExpressionStatement","src":"2652:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2702:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2713:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2698:3:21"},"nodeType":"YulFunctionCall","src":"2698:18:21"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"2718:34:21","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2691:6:21"},"nodeType":"YulFunctionCall","src":"2691:62:21"},"nodeType":"YulExpressionStatement","src":"2691:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2773:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2784:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2769:3:21"},"nodeType":"YulFunctionCall","src":"2769:18:21"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"2789:4:21","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2762:6:21"},"nodeType":"YulFunctionCall","src":"2762:32:21"},"nodeType":"YulExpressionStatement","src":"2762:32:21"},{"nodeType":"YulAssignment","src":"2803:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2815:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2826:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2811:3:21"},"nodeType":"YulFunctionCall","src":"2811:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2803:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2589:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2603:4:21","type":""}],"src":"2438:398:21"},{"body":{"nodeType":"YulBlock","src":"3015:179:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3032:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3043:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3025:6:21"},"nodeType":"YulFunctionCall","src":"3025:21:21"},"nodeType":"YulExpressionStatement","src":"3025:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3066:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3077:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3062:3:21"},"nodeType":"YulFunctionCall","src":"3062:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"3082:2:21","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3055:6:21"},"nodeType":"YulFunctionCall","src":"3055:30:21"},"nodeType":"YulExpressionStatement","src":"3055:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3105:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3116:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3101:3:21"},"nodeType":"YulFunctionCall","src":"3101:18:21"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"3121:31:21","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3094:6:21"},"nodeType":"YulFunctionCall","src":"3094:59:21"},"nodeType":"YulExpressionStatement","src":"3094:59:21"},{"nodeType":"YulAssignment","src":"3162:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3174:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3185:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3170:3:21"},"nodeType":"YulFunctionCall","src":"3170:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3162:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2992:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3006:4:21","type":""}],"src":"2841:353:21"},{"body":{"nodeType":"YulBlock","src":"3373:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3390:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3401:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3383:6:21"},"nodeType":"YulFunctionCall","src":"3383:21:21"},"nodeType":"YulExpressionStatement","src":"3383:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3424:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3435:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3420:3:21"},"nodeType":"YulFunctionCall","src":"3420:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"3440:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3413:6:21"},"nodeType":"YulFunctionCall","src":"3413:30:21"},"nodeType":"YulExpressionStatement","src":"3413:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3463:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3474:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3459:3:21"},"nodeType":"YulFunctionCall","src":"3459:18:21"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"3479:34:21","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3452:6:21"},"nodeType":"YulFunctionCall","src":"3452:62:21"},"nodeType":"YulExpressionStatement","src":"3452:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3534:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3545:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3530:3:21"},"nodeType":"YulFunctionCall","src":"3530:18:21"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"3550:8:21","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3523:6:21"},"nodeType":"YulFunctionCall","src":"3523:36:21"},"nodeType":"YulExpressionStatement","src":"3523:36:21"},{"nodeType":"YulAssignment","src":"3568:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3580:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3591:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3576:3:21"},"nodeType":"YulFunctionCall","src":"3576:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3568:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3350:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3364:4:21","type":""}],"src":"3199:402:21"},{"body":{"nodeType":"YulBlock","src":"3780:227:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3797:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3808:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3790:6:21"},"nodeType":"YulFunctionCall","src":"3790:21:21"},"nodeType":"YulExpressionStatement","src":"3790:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3831:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3842:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3827:3:21"},"nodeType":"YulFunctionCall","src":"3827:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"3847:2:21","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3820:6:21"},"nodeType":"YulFunctionCall","src":"3820:30:21"},"nodeType":"YulExpressionStatement","src":"3820:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3870:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3881:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3866:3:21"},"nodeType":"YulFunctionCall","src":"3866:18:21"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"3886:34:21","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3859:6:21"},"nodeType":"YulFunctionCall","src":"3859:62:21"},"nodeType":"YulExpressionStatement","src":"3859:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3941:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3952:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3937:3:21"},"nodeType":"YulFunctionCall","src":"3937:18:21"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"3957:7:21","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3930:6:21"},"nodeType":"YulFunctionCall","src":"3930:35:21"},"nodeType":"YulExpressionStatement","src":"3930:35:21"},{"nodeType":"YulAssignment","src":"3974:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3986:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3997:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3982:3:21"},"nodeType":"YulFunctionCall","src":"3982:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3974:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3757:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3771:4:21","type":""}],"src":"3606:401:21"},{"body":{"nodeType":"YulBlock","src":"4186:226:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4203:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4214:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4196:6:21"},"nodeType":"YulFunctionCall","src":"4196:21:21"},"nodeType":"YulExpressionStatement","src":"4196:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4237:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4248:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4233:3:21"},"nodeType":"YulFunctionCall","src":"4233:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"4253:2:21","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4226:6:21"},"nodeType":"YulFunctionCall","src":"4226:30:21"},"nodeType":"YulExpressionStatement","src":"4226:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4276:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4287:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4272:3:21"},"nodeType":"YulFunctionCall","src":"4272:18:21"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"4292:34:21","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4265:6:21"},"nodeType":"YulFunctionCall","src":"4265:62:21"},"nodeType":"YulExpressionStatement","src":"4265:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4347:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4358:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4343:3:21"},"nodeType":"YulFunctionCall","src":"4343:18:21"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"4363:6:21","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4336:6:21"},"nodeType":"YulFunctionCall","src":"4336:34:21"},"nodeType":"YulExpressionStatement","src":"4336:34:21"},{"nodeType":"YulAssignment","src":"4379:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4391:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4402:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4387:3:21"},"nodeType":"YulFunctionCall","src":"4387:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4379:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4163:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4177:4:21","type":""}],"src":"4012:400:21"},{"body":{"nodeType":"YulBlock","src":"4591:227:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4608:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4619:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4601:6:21"},"nodeType":"YulFunctionCall","src":"4601:21:21"},"nodeType":"YulExpressionStatement","src":"4601:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4642:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4653:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4638:3:21"},"nodeType":"YulFunctionCall","src":"4638:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"4658:2:21","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4631:6:21"},"nodeType":"YulFunctionCall","src":"4631:30:21"},"nodeType":"YulExpressionStatement","src":"4631:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4681:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4692:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4677:3:21"},"nodeType":"YulFunctionCall","src":"4677:18:21"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"4697:34:21","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4670:6:21"},"nodeType":"YulFunctionCall","src":"4670:62:21"},"nodeType":"YulExpressionStatement","src":"4670:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4752:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4763:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4748:3:21"},"nodeType":"YulFunctionCall","src":"4748:18:21"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"4768:7:21","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4741:6:21"},"nodeType":"YulFunctionCall","src":"4741:35:21"},"nodeType":"YulExpressionStatement","src":"4741:35:21"},{"nodeType":"YulAssignment","src":"4785:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4797:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4808:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4793:3:21"},"nodeType":"YulFunctionCall","src":"4793:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4785:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4568:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4582:4:21","type":""}],"src":"4417:401:21"},{"body":{"nodeType":"YulBlock","src":"4924:76:21","statements":[{"nodeType":"YulAssignment","src":"4934:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4946:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4957:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4942:3:21"},"nodeType":"YulFunctionCall","src":"4942:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4934:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4976:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"4987:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4969:6:21"},"nodeType":"YulFunctionCall","src":"4969:25:21"},"nodeType":"YulExpressionStatement","src":"4969:25:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4893:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4904:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4915:4:21","type":""}],"src":"4823:177:21"},{"body":{"nodeType":"YulBlock","src":"5102:87:21","statements":[{"nodeType":"YulAssignment","src":"5112:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5124:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5135:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5120:3:21"},"nodeType":"YulFunctionCall","src":"5120:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5112:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5154:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5169:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5177:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5165:3:21"},"nodeType":"YulFunctionCall","src":"5165:17:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5147:6:21"},"nodeType":"YulFunctionCall","src":"5147:36:21"},"nodeType":"YulExpressionStatement","src":"5147:36:21"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5071:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5082:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5093:4:21","type":""}],"src":"5005:184:21"},{"body":{"nodeType":"YulBlock","src":"5242:177:21","statements":[{"body":{"nodeType":"YulBlock","src":"5277:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5298:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5305:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5310:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5301:3:21"},"nodeType":"YulFunctionCall","src":"5301:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5291:6:21"},"nodeType":"YulFunctionCall","src":"5291:31:21"},"nodeType":"YulExpressionStatement","src":"5291:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5342:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5345:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5335:6:21"},"nodeType":"YulFunctionCall","src":"5335:15:21"},"nodeType":"YulExpressionStatement","src":"5335:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5370:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5373:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5363:6:21"},"nodeType":"YulFunctionCall","src":"5363:15:21"},"nodeType":"YulExpressionStatement","src":"5363:15:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5258:1:21"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5265:1:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5261:3:21"},"nodeType":"YulFunctionCall","src":"5261:6:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5255:2:21"},"nodeType":"YulFunctionCall","src":"5255:13:21"},"nodeType":"YulIf","src":"5252:2:21"},{"nodeType":"YulAssignment","src":"5397:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5408:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"5411:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5404:3:21"},"nodeType":"YulFunctionCall","src":"5404:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"5397:3:21"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5225:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"5228:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5234:3:21","type":""}],"src":"5194:225:21"},{"body":{"nodeType":"YulBlock","src":"5479:325:21","statements":[{"nodeType":"YulAssignment","src":"5489:22:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5503:1:21","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"5506:4:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5499:3:21"},"nodeType":"YulFunctionCall","src":"5499:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5489:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"5520:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5550:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"5556:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5546:3:21"},"nodeType":"YulFunctionCall","src":"5546:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5524:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"5597:31:21","statements":[{"nodeType":"YulAssignment","src":"5599:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5613:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5621:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5609:3:21"},"nodeType":"YulFunctionCall","src":"5609:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5599:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5577:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5570:6:21"},"nodeType":"YulFunctionCall","src":"5570:26:21"},"nodeType":"YulIf","src":"5567:2:21"},{"body":{"nodeType":"YulBlock","src":"5687:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5708:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5715:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5720:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5711:3:21"},"nodeType":"YulFunctionCall","src":"5711:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5701:6:21"},"nodeType":"YulFunctionCall","src":"5701:31:21"},"nodeType":"YulExpressionStatement","src":"5701:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5752:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5755:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5745:6:21"},"nodeType":"YulFunctionCall","src":"5745:15:21"},"nodeType":"YulExpressionStatement","src":"5745:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5780:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5783:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5773:6:21"},"nodeType":"YulFunctionCall","src":"5773:15:21"},"nodeType":"YulExpressionStatement","src":"5773:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5643:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5666:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5674:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5663:2:21"},"nodeType":"YulFunctionCall","src":"5663:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5640:2:21"},"nodeType":"YulFunctionCall","src":"5640:38:21"},"nodeType":"YulIf","src":"5637:2:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5459:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5468:6:21","type":""}],"src":"5424:380:21"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061079b565b60405180910390f35b6100df6100da366004610771565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610735565b61024a565b604051601281526020016100c3565b6100df610131366004610771565b61026e565b6100f36101443660046106e0565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610771565b61029f565b6100df610188366004610771565b61031f565b6100f361019b366004610702565b61032d565b6060600380546101af90610816565b80601f01602080910402602001604051908101604052809291908181526020018280546101db90610816565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b91906107f0565b610358565b6060600480546101af90610816565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b9084906107f0565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b80356001600160a01b03811681146106db57600080fd5b919050565b6000602082840312156106f257600080fd5b6106fb826106c4565b9392505050565b6000806040838503121561071557600080fd5b61071e836106c4565b915061072c602084016106c4565b90509250929050565b60008060006060848603121561074a57600080fd5b610753846106c4565b9250610761602085016106c4565b9150604084013590509250925092565b6000806040838503121561078457600080fd5b61078d836106c4565b946020939093013593505050565b600060208083528351808285015260005b818110156107c8578581018301518582016040015282016107ac565b818111156107da576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561081157634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061082a57607f821691505b6020821081141561084b57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220410f8633e5efe6c5700c6c64b6452e4574ef4855120af9601b1b05c7c8c6c40464736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x702 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x816 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x816 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x816 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x7F0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6FB DUP3 PUSH2 0x6C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x71E DUP4 PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x72C PUSH1 0x20 DUP5 ADD PUSH2 0x6C4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x753 DUP5 PUSH2 0x6C4 JUMP JUMPDEST SWAP3 POP PUSH2 0x761 PUSH1 0x20 DUP6 ADD PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x784 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78D DUP4 PUSH2 0x6C4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C8 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7AC JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7DA JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x811 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x82A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x84B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xF DUP7 CALLER 0xE5 0xEF 0xE6 0xC5 PUSH17 0xC6C64B6452E4574EF4855120AF9601B1B SDIV 0xC7 0xC8 0xC6 0xC4 DIV PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"1403:11214:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1405:14:21;;1398:22;1380:41;;1368:2;1353:18;4433:197:2;1335:92:21;3244:106:2;3331:12;;3244:106;;;4969:25:21;;;4957:2;4942:18;3244:106:2;4924:76:21;5192:286:2;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;5147:36:21;;5135:2;5120:18;3093:91:2;5102:87:21;5873:234:2;;;;;;:::i;:::-;;:::i;3408:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:2;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;;:::i;2156:98::-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:12;4570:32:2;719:10:12;4586:7:2;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:2;;4433:197;-1:-1:-1;;;4433:197:2:o;5192:286::-;5319:4;719:10:12;5375:38:2;5391:4;719:10:12;5406:6:2;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:2;;5192:286;-1:-1:-1;;;;5192:286:2:o;5873:234::-;5961:4;719:10:12;6015:64:2;719:10:12;6031:7:2;6068:10;6040:25;719:10:12;6031:7:2;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:12;6687:4:2;6768:25;719:10:12;6785:7:2;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:2;;4619:2:21;6803:85:2;;;4601:21:21;4658:2;4638:18;;;4631:30;4697:34;4677:18;;;4670:62;-1:-1:-1;;;4748:18:21;;;4741:35;4793:19;;6803:85:2;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:12;3862:28:2;719:10:12;3879:2:2;3883:6;3862:9;:28::i;3976:149::-;-1:-1:-1;;;;;4091:18:2;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;10110:370::-;-1:-1:-1;;;;;10241:19:2;;10233:68;;;;-1:-1:-1;;;10233:68:2;;4214:2:21;10233:68:2;;;4196:21:21;4253:2;4233:18;;;4226:30;4292:34;4272:18;;;4265:62;-1:-1:-1;;;4343:18:21;;;4336:34;4387:19;;10233:68:2;4186:226:21;10233:68:2;-1:-1:-1;;;;;10319:21:2;;10311:68;;;;-1:-1:-1;;;10311:68:2;;2640:2:21;10311:68:2;;;2622:21:21;2679:2;2659:18;;;2652:30;2718:34;2698:18;;;2691:62;-1:-1:-1;;;2769:18:21;;;2762:32;2811:19;;10311:68:2;2612:224:21;10311:68:2;-1:-1:-1;;;;;10390:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;4969:25:21;;;10441:32:2;;4942:18:21;10441:32:2;;;;;;;10110:370;;;:::o;10761:441::-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;-1:-1:-1;;10957:16:2;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;11010:68:2;;3043:2:21;11010:68:2;;;3025:21:21;3082:2;3062:18;;;3055:30;3121:31;3101:18;;;3094:59;3170:18;;11010:68:2;3015:179:21;11010:68:2;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10881:321;10761:441;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:2;;7593:68;;;;-1:-1:-1;;;7593:68:2;;3808:2:21;7593:68:2;;;3790:21:21;3847:2;3827:18;;;3820:30;3886:34;3866:18;;;3859:62;-1:-1:-1;;;3937:18:21;;;3930:35;3982:19;;7593:68:2;3780:227:21;7593:68:2;-1:-1:-1;;;;;7679:16:2;;7671:64;;;;-1:-1:-1;;;7671:64:2;;2236:2:21;7671:64:2;;;2218:21:21;2275:2;2255:18;;;2248:30;2314:34;2294:18;;;2287:62;-1:-1:-1;;;2365:18:21;;;2358:33;2408:19;;7671:64:2;2208:225:21;7671:64:2;-1:-1:-1;;;;;7817:15:2;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:2;;3401:2:21;7842:72:2;;;3383:21:21;3440:2;3420:18;;;3413:30;3479:34;3459:18;;;3452:62;-1:-1:-1;;;3530:18:21;;;3523:36;3576:19;;7842:72:2;3373:228:21;7842:72:2;-1:-1:-1;;;;;7948:15:2;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:2;8054:4;-1:-1:-1;;;;;8045:26:2;;8064:6;8045:26;;;;4969:25:21;;4957:2;4942:18;;4924:76;8045:26:2;;;;;;;;8082:37;11786:121;14:173:21;82:20;;-1:-1:-1;;;;;131:31:21;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;320:1;317;310:12;272:2;343:29;362:9;343:29;:::i;:::-;333:39;262:116;-1:-1:-1;;;262:116:21:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:2;;;528:1;525;518:12;480:2;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;470:173;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:2;;;810:1;807;800:12;762:2;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;752:224;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:2;;;1126:1;1123;1116:12;1078:2;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;1068:167:21:o;1432:597::-;1544:4;1573:2;1602;1591:9;1584:21;1634:6;1628:13;1677:6;1672:2;1661:9;1657:18;1650:34;1702:1;1712:140;1726:6;1723:1;1720:13;1712:140;;;1821:14;;;1817:23;;1811:30;1787:17;;;1806:2;1783:26;1776:66;1741:10;;1712:140;;;1870:6;1867:1;1864:13;1861:2;;;1940:1;1935:2;1926:6;1915:9;1911:22;1907:31;1900:42;1861:2;-1:-1:-1;2013:2:21;1992:15;-1:-1:-1;;1988:29:21;1973:45;;;;2020:2;1969:54;;1553:476;-1:-1:-1;;;1553:476:21:o;5194:225::-;5234:3;5265:1;5261:6;5258:1;5255:13;5252:2;;;5310:10;5305:3;5301:20;5298:1;5291:31;5345:4;5342:1;5335:15;5373:4;5370:1;5363:15;5252:2;-1:-1:-1;5404:9:21;;5242:177::o;5424:380::-;5503:1;5499:12;;;;5546;;;5567:2;;5621:4;5613:6;5609:17;5599:27;;5567:2;5674;5666:6;5663:14;5643:18;5640:38;5637:2;;;5720:10;5715:3;5711:20;5708:1;5701:31;5755:4;5752:1;5745:15;5783:4;5780:1;5773:15;5637:2;;5479:325;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"436600","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24624","balanceOf(address)":"2562","decimals()":"266","decreaseAllowance(address,uint256)":"27016","increaseAllowance(address,uint256)":"26978","name()":"infinite","symbol()":"infinite","totalSupply()":"2326","transfer(address,uint256)":"51270","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"infinite","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"infinite","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":174,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":180,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":182,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":184,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":186,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.","kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122064da0d4d7cb7d5a849d6f8b4147d95c08e9c043138ecccb08c9e48206a5c478264736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0xDA0D4D7CB7 0xD5 0xA8 0x49 0xD6 0xF8 0xB4 EQ PUSH30 0x95C08E9C043138ECCCB08C9E48206A5C478264736F6C6343000806003300 ","sourceMap":"707:3748:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;707:3748:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122064da0d4d7cb7d5a849d6f8b4147d95c08e9c043138ecccb08c9e48206a5c478264736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0xDA0D4D7CB7 0xD5 0xA8 0x49 0xD6 0xF8 0xB4 EQ PUSH30 0x95C08E9C043138ECCCB08C9E48206A5C478264736F6C6343000806003300 ","sourceMap":"707:3748:6:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","safeApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1227":{"entryPoint":null,"id":1227,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":270,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":453,"id":null,"parameterSlots":2,"returnSlots":2},"extract_byte_array_length":{"entryPoint":559,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":620,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1985:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"78:821:21","statements":[{"body":{"nodeType":"YulBlock","src":"127:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"136:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"139:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"129:6:21"},"nodeType":"YulFunctionCall","src":"129:12:21"},"nodeType":"YulExpressionStatement","src":"129:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"106:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"114:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"102:3:21"},"nodeType":"YulFunctionCall","src":"102:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"121:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"98:3:21"},"nodeType":"YulFunctionCall","src":"98:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"91:6:21"},"nodeType":"YulFunctionCall","src":"91:35:21"},"nodeType":"YulIf","src":"88:2:21"},{"nodeType":"YulVariableDeclaration","src":"152:23:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"168:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"162:5:21"},"nodeType":"YulFunctionCall","src":"162:13:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"156:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"184:28:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"202:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"206:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"198:3:21"},"nodeType":"YulFunctionCall","src":"198:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"210:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"194:3:21"},"nodeType":"YulFunctionCall","src":"194:18:21"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"188:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"235:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"237:16:21"},"nodeType":"YulFunctionCall","src":"237:18:21"},"nodeType":"YulExpressionStatement","src":"237:18:21"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"227:2:21"},{"name":"_2","nodeType":"YulIdentifier","src":"231:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"224:2:21"},"nodeType":"YulFunctionCall","src":"224:10:21"},"nodeType":"YulIf","src":"221:2:21"},{"nodeType":"YulVariableDeclaration","src":"266:17:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"280:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"276:3:21"},"nodeType":"YulFunctionCall","src":"276:7:21"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"270:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"292:23:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"312:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"306:5:21"},"nodeType":"YulFunctionCall","src":"306:9:21"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"296:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"324:71:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"346:6:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"370:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"374:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"366:3:21"},"nodeType":"YulFunctionCall","src":"366:13:21"},{"name":"_3","nodeType":"YulIdentifier","src":"381:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"362:3:21"},"nodeType":"YulFunctionCall","src":"362:22:21"},{"kind":"number","nodeType":"YulLiteral","src":"386:2:21","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"358:3:21"},"nodeType":"YulFunctionCall","src":"358:31:21"},{"name":"_3","nodeType":"YulIdentifier","src":"391:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"354:3:21"},"nodeType":"YulFunctionCall","src":"354:40:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"342:3:21"},"nodeType":"YulFunctionCall","src":"342:53:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"328:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"454:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"456:16:21"},"nodeType":"YulFunctionCall","src":"456:18:21"},"nodeType":"YulExpressionStatement","src":"456:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"413:10:21"},{"name":"_2","nodeType":"YulIdentifier","src":"425:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"410:2:21"},"nodeType":"YulFunctionCall","src":"410:18:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"433:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"445:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"430:2:21"},"nodeType":"YulFunctionCall","src":"430:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"407:2:21"},"nodeType":"YulFunctionCall","src":"407:46:21"},"nodeType":"YulIf","src":"404:2:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"492:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"496:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"485:6:21"},"nodeType":"YulFunctionCall","src":"485:22:21"},"nodeType":"YulExpressionStatement","src":"485:22:21"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"523:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"531:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"516:6:21"},"nodeType":"YulFunctionCall","src":"516:18:21"},"nodeType":"YulExpressionStatement","src":"516:18:21"},{"nodeType":"YulVariableDeclaration","src":"543:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"553:4:21","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"547:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"603:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"612:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"615:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"605:6:21"},"nodeType":"YulFunctionCall","src":"605:12:21"},"nodeType":"YulExpressionStatement","src":"605:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"580:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"588:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"576:3:21"},"nodeType":"YulFunctionCall","src":"576:15:21"},{"name":"_4","nodeType":"YulIdentifier","src":"593:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"572:3:21"},"nodeType":"YulFunctionCall","src":"572:24:21"},{"name":"end","nodeType":"YulIdentifier","src":"598:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"569:2:21"},"nodeType":"YulFunctionCall","src":"569:33:21"},"nodeType":"YulIf","src":"566:2:21"},{"nodeType":"YulVariableDeclaration","src":"628:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"637:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"632:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"693:87:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"722:6:21"},{"name":"i","nodeType":"YulIdentifier","src":"730:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"718:3:21"},"nodeType":"YulFunctionCall","src":"718:14:21"},{"name":"_4","nodeType":"YulIdentifier","src":"734:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"714:3:21"},"nodeType":"YulFunctionCall","src":"714:23:21"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"753:6:21"},{"name":"i","nodeType":"YulIdentifier","src":"761:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"749:3:21"},"nodeType":"YulFunctionCall","src":"749:14:21"},{"name":"_4","nodeType":"YulIdentifier","src":"765:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:21"},"nodeType":"YulFunctionCall","src":"745:23:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"739:5:21"},"nodeType":"YulFunctionCall","src":"739:30:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"707:6:21"},"nodeType":"YulFunctionCall","src":"707:63:21"},"nodeType":"YulExpressionStatement","src":"707:63:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"658:1:21"},{"name":"_1","nodeType":"YulIdentifier","src":"661:2:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"655:2:21"},"nodeType":"YulFunctionCall","src":"655:9:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"665:19:21","statements":[{"nodeType":"YulAssignment","src":"667:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"676:1:21"},{"name":"_4","nodeType":"YulIdentifier","src":"679:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"672:3:21"},"nodeType":"YulFunctionCall","src":"672:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"667:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"651:3:21","statements":[]},"src":"647:133:21"},{"body":{"nodeType":"YulBlock","src":"810:59:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"839:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"847:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"835:3:21"},"nodeType":"YulFunctionCall","src":"835:15:21"},{"name":"_4","nodeType":"YulIdentifier","src":"852:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"831:3:21"},"nodeType":"YulFunctionCall","src":"831:24:21"},{"kind":"number","nodeType":"YulLiteral","src":"857:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"824:6:21"},"nodeType":"YulFunctionCall","src":"824:35:21"},"nodeType":"YulExpressionStatement","src":"824:35:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"795:1:21"},{"name":"_1","nodeType":"YulIdentifier","src":"798:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"792:2:21"},"nodeType":"YulFunctionCall","src":"792:9:21"},"nodeType":"YulIf","src":"789:2:21"},{"nodeType":"YulAssignment","src":"878:15:21","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"887:6:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"878:5:21"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"52:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"60:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"68:5:21","type":""}],"src":"14:885:21"},{"body":{"nodeType":"YulBlock","src":"1022:444:21","statements":[{"body":{"nodeType":"YulBlock","src":"1068:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1077:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1080:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1070:6:21"},"nodeType":"YulFunctionCall","src":"1070:12:21"},"nodeType":"YulExpressionStatement","src":"1070:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1043:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1052:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1039:3:21"},"nodeType":"YulFunctionCall","src":"1039:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1064:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1035:3:21"},"nodeType":"YulFunctionCall","src":"1035:32:21"},"nodeType":"YulIf","src":"1032:2:21"},{"nodeType":"YulVariableDeclaration","src":"1093:30:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1113:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1107:5:21"},"nodeType":"YulFunctionCall","src":"1107:16:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1132:28:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1150:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1154:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1146:3:21"},"nodeType":"YulFunctionCall","src":"1146:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"1158:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1142:3:21"},"nodeType":"YulFunctionCall","src":"1142:18:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1136:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1187:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1196:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1199:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1189:6:21"},"nodeType":"YulFunctionCall","src":"1189:12:21"},"nodeType":"YulExpressionStatement","src":"1189:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1175:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"1183:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1172:2:21"},"nodeType":"YulFunctionCall","src":"1172:14:21"},"nodeType":"YulIf","src":"1169:2:21"},{"nodeType":"YulAssignment","src":"1212:71:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1255:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1266:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1251:3:21"},"nodeType":"YulFunctionCall","src":"1251:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1275:7:21"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1222:28:21"},"nodeType":"YulFunctionCall","src":"1222:61:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1212:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"1292:41:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1318:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1329:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1314:3:21"},"nodeType":"YulFunctionCall","src":"1314:18:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1308:5:21"},"nodeType":"YulFunctionCall","src":"1308:25:21"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1296:8:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1362:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1371:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1374:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1364:6:21"},"nodeType":"YulFunctionCall","src":"1364:12:21"},"nodeType":"YulExpressionStatement","src":"1364:12:21"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1348:8:21"},{"name":"_1","nodeType":"YulIdentifier","src":"1358:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1345:2:21"},"nodeType":"YulFunctionCall","src":"1345:16:21"},"nodeType":"YulIf","src":"1342:2:21"},{"nodeType":"YulAssignment","src":"1387:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1430:9:21"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1441:8:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1426:3:21"},"nodeType":"YulFunctionCall","src":"1426:24:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1452:7:21"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1397:28:21"},"nodeType":"YulFunctionCall","src":"1397:63:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1387:6:21"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"980:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"991:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1003:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1011:6:21","type":""}],"src":"904:562:21"},{"body":{"nodeType":"YulBlock","src":"1526:325:21","statements":[{"nodeType":"YulAssignment","src":"1536:22:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1550:1:21","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1553:4:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1546:3:21"},"nodeType":"YulFunctionCall","src":"1546:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1536:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"1567:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1597:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"1603:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1593:3:21"},"nodeType":"YulFunctionCall","src":"1593:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1571:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1644:31:21","statements":[{"nodeType":"YulAssignment","src":"1646:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1660:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1668:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1656:3:21"},"nodeType":"YulFunctionCall","src":"1656:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1646:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1624:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1617:6:21"},"nodeType":"YulFunctionCall","src":"1617:26:21"},"nodeType":"YulIf","src":"1614:2:21"},{"body":{"nodeType":"YulBlock","src":"1734:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1755:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1762:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1767:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1758:3:21"},"nodeType":"YulFunctionCall","src":"1758:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1748:6:21"},"nodeType":"YulFunctionCall","src":"1748:31:21"},"nodeType":"YulExpressionStatement","src":"1748:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1799:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1802:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1792:6:21"},"nodeType":"YulFunctionCall","src":"1792:15:21"},"nodeType":"YulExpressionStatement","src":"1792:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1827:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1830:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1820:6:21"},"nodeType":"YulFunctionCall","src":"1820:15:21"},"nodeType":"YulExpressionStatement","src":"1820:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1690:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1713:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1721:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1710:2:21"},"nodeType":"YulFunctionCall","src":"1710:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1687:2:21"},"nodeType":"YulFunctionCall","src":"1687:38:21"},"nodeType":"YulIf","src":"1684:2:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1506:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1515:6:21","type":""}],"src":"1471:380:21"},{"body":{"nodeType":"YulBlock","src":"1888:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1905:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1917:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1908:3:21"},"nodeType":"YulFunctionCall","src":"1908:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1898:6:21"},"nodeType":"YulFunctionCall","src":"1898:31:21"},"nodeType":"YulExpressionStatement","src":"1898:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1945:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1948:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1938:6:21"},"nodeType":"YulFunctionCall","src":"1938:15:21"},"nodeType":"YulExpressionStatement","src":"1938:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1969:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1972:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1962:6:21"},"nodeType":"YulFunctionCall","src":"1962:15:21"},"nodeType":"YulExpressionStatement","src":"1962:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1856:127:21"}]},"contents":"{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x13D7 CODESIZE SUB DUP1 PUSH3 0x13D7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C5 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x22F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13D JUMPI PUSH3 0x13D PUSH3 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x168 JUMPI PUSH3 0x168 PUSH3 0x26C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A9 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x18A JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1BB JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FF DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x225 DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x266 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1145 DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xE2A JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xF15 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xE64 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x44E JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xE64 JUMP JUMPDEST PUSH2 0x49A JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xC5E JUMP JUMPDEST PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x580 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC4 JUMP JUMPDEST PUSH2 0x58F JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE8 JUMP JUMPDEST PUSH2 0x59E JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xE64 JUMP JUMPDEST PUSH2 0x5D6 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xC79 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0x1037 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0x1037 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x317 DUP3 PUSH2 0x64A JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33E DUP3 PUSH2 0x49A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x3B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3CD JUMPI POP PUSH2 0x3CD DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x43F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x449 DUP4 DUP4 PUSH2 0x6AC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x458 CALLER DUP3 PUSH2 0x71A JUMP JUMPDEST PUSH2 0x474 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A8 SWAP1 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0x449 DUP4 DUP4 DUP4 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x449 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x59E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x564 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A8 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0x1037 JUMP JUMPDEST PUSH2 0x59A CALLER DUP4 DUP4 PUSH2 0x935 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5A8 CALLER DUP4 PUSH2 0x71A JUMP JUMPDEST PUSH2 0x5C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A8 SWAP1 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0x5D0 DUP5 DUP5 DUP5 DUP5 PUSH2 0xA04 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5E1 DUP3 PUSH2 0x64A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F8 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x643 JUMP JUMPDEST DUP1 PUSH2 0x622 DUP5 PUSH2 0xA37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x633 SWAP3 SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x6E1 DUP3 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x726 DUP4 PUSH2 0x49A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x76D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x791 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x786 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7AC DUP3 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x810 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x872 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x87D PUSH1 0x0 DUP3 PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x8A6 SWAP1 DUP5 SWAP1 PUSH2 0xFF4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x8D4 SWAP1 DUP5 SWAP1 PUSH2 0xFC8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x997 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xA0F DUP5 DUP5 DUP5 PUSH2 0x799 JUMP JUMPDEST PUSH2 0xA1B DUP5 DUP5 DUP5 DUP5 PUSH2 0xB35 JUMP JUMPDEST PUSH2 0x5D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A8 SWAP1 PUSH2 0xF28 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xA5B JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xA85 JUMPI DUP1 PUSH2 0xA6F DUP2 PUSH2 0x1072 JUMP JUMPDEST SWAP2 POP PUSH2 0xA7E SWAP1 POP PUSH1 0xA DUP4 PUSH2 0xFE0 JUMP JUMPDEST SWAP2 POP PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAA0 JUMPI PUSH2 0xAA0 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xACA JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x791 JUMPI PUSH2 0xADF PUSH1 0x1 DUP4 PUSH2 0xFF4 JUMP JUMPDEST SWAP2 POP PUSH2 0xAEC PUSH1 0xA DUP7 PUSH2 0x108D JUMP JUMPDEST PUSH2 0xAF7 SWAP1 PUSH1 0x30 PUSH2 0xFC8 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB0C JUMPI PUSH2 0xB0C PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xB2E PUSH1 0xA DUP7 PUSH2 0xFE0 JUMP JUMPDEST SWAP5 POP PUSH2 0xACE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xC37 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xB79 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xED8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xBC3 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xBC0 SWAP2 DUP2 ADD SWAP1 PUSH2 0xE47 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC1D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xBF1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBF6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xC15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A8 SWAP1 PUSH2 0xF28 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x791 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x643 DUP3 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC95 DUP4 PUSH2 0xC42 JUMP JUMPDEST SWAP2 POP PUSH2 0xCA3 PUSH1 0x20 DUP5 ADD PUSH2 0xC42 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCCA DUP5 PUSH2 0xC42 JUMP JUMPDEST SWAP3 POP PUSH2 0xCD8 PUSH1 0x20 DUP6 ADD PUSH2 0xC42 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xCFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD07 DUP6 PUSH2 0xC42 JUMP JUMPDEST SWAP4 POP PUSH2 0xD15 PUSH1 0x20 DUP7 ADD PUSH2 0xC42 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xD5F JUMPI PUSH2 0xD5F PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xD87 JUMPI PUSH2 0xD87 PUSH2 0x10E3 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xDA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDE0 DUP4 PUSH2 0xC42 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1C DUP4 PUSH2 0xC42 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x643 DUP2 PUSH2 0x10F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x643 DUP2 PUSH2 0x10F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xE95 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x100B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xEBB DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x100B JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xECF DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x100B JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xF0B SWAP1 DUP4 ADD DUP5 PUSH2 0xE7D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x643 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE7D JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x1C881B9BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xFDB JUMPI PUSH2 0xFDB PUSH2 0x10A1 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xFEF JUMPI PUSH2 0xFEF PUSH2 0x10B7 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1006 JUMPI PUSH2 0x1006 PUSH2 0x10A1 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1026 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x100E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x5D0 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x104B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x106C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1086 JUMPI PUSH2 0x1086 PUSH2 0x10A1 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x109C JUMPI PUSH2 0x109C PUSH2 0x10B7 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x6A9 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 ADD LOG2 EXP PUSH15 0xAB6A823851FC940E5556BC0A8F6300 PUSH1 0x82 CALLDATASIZE 0xB5 CREATE EXTCODEHASH PUSH14 0x5829ECF25F64736F6C6343000806 STOP CALLER ","sourceMap":"628:13718:7:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1479:17:7;;;;:7;;:17;;;;;:::i;:::-;;1390:113;;628:13718;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;628:13718:7;;;-1:-1:-1;628:13718:7;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:21;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;139:1;136;129:12;88:2;162:13;;-1:-1:-1;;;;;224:10:21;;;221:2;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:21;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:2;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:2;;;615:1;612;605:12;566:2;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:2;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:2;887:6;78:821;-1:-1:-1;;;;;;78:821:21:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:2;;;1080:1;1077;1070:12;1032:2;1107:16;;-1:-1:-1;;;;;1172:14:21;;;1169:2;;;1199:1;1196;1189:12;1169:2;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:2;;;1374:1;1371;1364:12;1342:2;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;1022:444;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:2;;1668:4;1660:6;1656:17;1646:27;;1614:2;1721;1713:6;1710:14;1690:18;1687:38;1684:2;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:2;;1526:325;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1888:95;628:13718:7;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_2030":{"entryPoint":null,"id":2030,"parameterSlots":3,"returnSlots":0},"@_approve_1900":{"entryPoint":1708,"id":1900,"parameterSlots":2,"returnSlots":0},"@_baseURI_1378":{"entryPoint":null,"id":1378,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_2019":{"entryPoint":null,"id":2019,"parameterSlots":3,"returnSlots":0},"@_checkOnERC721Received_2008":{"entryPoint":2869,"id":2008,"parameterSlots":4,"returnSlots":1},"@_exists_1597":{"entryPoint":null,"id":1597,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_1631":{"entryPoint":1818,"id":1631,"parameterSlots":2,"returnSlots":1},"@_msgSender_2499":{"entryPoint":null,"id":2499,"parameterSlots":0,"returnSlots":1},"@_requireMinted_1946":{"entryPoint":1610,"id":1946,"parameterSlots":1,"returnSlots":0},"@_safeTransfer_1579":{"entryPoint":2564,"id":1579,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_1932":{"entryPoint":2357,"id":1932,"parameterSlots":3,"returnSlots":0},"@_transfer_1876":{"entryPoint":1945,"id":1876,"parameterSlots":3,"returnSlots":0},"@approve_1421":{"entryPoint":819,"id":1421,"parameterSlots":2,"returnSlots":0},"@balanceOf_1282":{"entryPoint":1274,"id":1282,"parameterSlots":1,"returnSlots":1},"@getApproved_1439":{"entryPoint":780,"id":1439,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_1474":{"entryPoint":null,"id":1474,"parameterSlots":2,"returnSlots":1},"@isContract_2210":{"entryPoint":null,"id":2210,"parameterSlots":1,"returnSlots":1},"@name_1320":{"entryPoint":634,"id":1320,"parameterSlots":0,"returnSlots":1},"@ownerOf_1310":{"entryPoint":1178,"id":1310,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_1520":{"entryPoint":1151,"id":1520,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1550":{"entryPoint":1438,"id":1550,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1456":{"entryPoint":1423,"id":1456,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1258":{"entryPoint":552,"id":1258,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2758":{"entryPoint":null,"id":2758,"parameterSlots":1,"returnSlots":1},"@symbol_1330":{"entryPoint":1408,"id":1330,"parameterSlots":0,"returnSlots":1},"@toString_2597":{"entryPoint":2615,"id":2597,"parameterSlots":1,"returnSlots":1},"@tokenURI_1369":{"entryPoint":1494,"id":1369,"parameterSlots":1,"returnSlots":1},"@transferFrom_1501":{"entryPoint":1102,"id":1501,"parameterSlots":3,"returnSlots":0},"abi_decode_address":{"entryPoint":3138,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3166,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3193,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3244,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":3304,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":3524,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3584,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":3626,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":3655,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3684,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes":{"entryPoint":3709,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":3753,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":3800,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3861,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3880,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3962,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4040,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":4064,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4084,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":4107,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4151,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":4210,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":4237,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":4257,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":4279,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4301,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4323,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":4345,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11009:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:21","statements":[{"nodeType":"YulAssignment","src":"73:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:21"},"nodeType":"YulFunctionCall","src":"82:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:21"}]},{"body":{"nodeType":"YulBlock","src":"165:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:21"},"nodeType":"YulFunctionCall","src":"167:12:21"},"nodeType":"YulExpressionStatement","src":"167:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:21"},"nodeType":"YulFunctionCall","src":"146:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:21"},"nodeType":"YulFunctionCall","src":"142:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:21"},"nodeType":"YulFunctionCall","src":"131:31:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:21"},"nodeType":"YulFunctionCall","src":"121:42:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:21"},"nodeType":"YulFunctionCall","src":"114:50:21"},"nodeType":"YulIf","src":"111:2:21"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:21","type":""}],"src":"14:173:21"},{"body":{"nodeType":"YulBlock","src":"262:116:21","statements":[{"body":{"nodeType":"YulBlock","src":"308:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:21"},"nodeType":"YulFunctionCall","src":"310:12:21"},"nodeType":"YulExpressionStatement","src":"310:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"283:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"292:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"279:3:21"},"nodeType":"YulFunctionCall","src":"279:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"304:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"275:3:21"},"nodeType":"YulFunctionCall","src":"275:32:21"},"nodeType":"YulIf","src":"272:2:21"},{"nodeType":"YulAssignment","src":"333:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"362:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"343:18:21"},"nodeType":"YulFunctionCall","src":"343:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"333:6:21"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"228:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"239:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"251:6:21","type":""}],"src":"192:186:21"},{"body":{"nodeType":"YulBlock","src":"470:173:21","statements":[{"body":{"nodeType":"YulBlock","src":"516:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"525:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"528:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"518:6:21"},"nodeType":"YulFunctionCall","src":"518:12:21"},"nodeType":"YulExpressionStatement","src":"518:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"491:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"500:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"487:3:21"},"nodeType":"YulFunctionCall","src":"487:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"512:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"483:3:21"},"nodeType":"YulFunctionCall","src":"483:32:21"},"nodeType":"YulIf","src":"480:2:21"},{"nodeType":"YulAssignment","src":"541:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"570:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"551:18:21"},"nodeType":"YulFunctionCall","src":"551:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"541:6:21"}]},{"nodeType":"YulAssignment","src":"589:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"622:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"633:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"618:3:21"},"nodeType":"YulFunctionCall","src":"618:18:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"599:18:21"},"nodeType":"YulFunctionCall","src":"599:38:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"589:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"428:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"439:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"451:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"459:6:21","type":""}],"src":"383:260:21"},{"body":{"nodeType":"YulBlock","src":"752:224:21","statements":[{"body":{"nodeType":"YulBlock","src":"798:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"807:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"810:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"800:6:21"},"nodeType":"YulFunctionCall","src":"800:12:21"},"nodeType":"YulExpressionStatement","src":"800:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"773:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"782:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"769:3:21"},"nodeType":"YulFunctionCall","src":"769:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"794:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"765:3:21"},"nodeType":"YulFunctionCall","src":"765:32:21"},"nodeType":"YulIf","src":"762:2:21"},{"nodeType":"YulAssignment","src":"823:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"852:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"833:18:21"},"nodeType":"YulFunctionCall","src":"833:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"823:6:21"}]},{"nodeType":"YulAssignment","src":"871:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"904:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"915:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"900:3:21"},"nodeType":"YulFunctionCall","src":"900:18:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"881:18:21"},"nodeType":"YulFunctionCall","src":"881:38:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"871:6:21"}]},{"nodeType":"YulAssignment","src":"928:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"955:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"966:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"951:3:21"},"nodeType":"YulFunctionCall","src":"951:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"938:12:21"},"nodeType":"YulFunctionCall","src":"938:32:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"928:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"702:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"713:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"725:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"733:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"741:6:21","type":""}],"src":"648:328:21"},{"body":{"nodeType":"YulBlock","src":"1111:1008:21","statements":[{"body":{"nodeType":"YulBlock","src":"1158:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1167:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1170:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1160:6:21"},"nodeType":"YulFunctionCall","src":"1160:12:21"},"nodeType":"YulExpressionStatement","src":"1160:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1132:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1141:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1128:3:21"},"nodeType":"YulFunctionCall","src":"1128:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1153:3:21","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1124:3:21"},"nodeType":"YulFunctionCall","src":"1124:33:21"},"nodeType":"YulIf","src":"1121:2:21"},{"nodeType":"YulAssignment","src":"1183:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1212:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1193:18:21"},"nodeType":"YulFunctionCall","src":"1193:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1183:6:21"}]},{"nodeType":"YulAssignment","src":"1231:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1264:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1275:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1260:3:21"},"nodeType":"YulFunctionCall","src":"1260:18:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1241:18:21"},"nodeType":"YulFunctionCall","src":"1241:38:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1231:6:21"}]},{"nodeType":"YulAssignment","src":"1288:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1315:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1326:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1311:3:21"},"nodeType":"YulFunctionCall","src":"1311:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1298:12:21"},"nodeType":"YulFunctionCall","src":"1298:32:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1288:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"1339:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1370:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1381:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1366:3:21"},"nodeType":"YulFunctionCall","src":"1366:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1353:12:21"},"nodeType":"YulFunctionCall","src":"1353:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1343:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1394:28:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1404:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1398:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1449:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1458:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1461:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1451:6:21"},"nodeType":"YulFunctionCall","src":"1451:12:21"},"nodeType":"YulExpressionStatement","src":"1451:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1437:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"1445:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1434:2:21"},"nodeType":"YulFunctionCall","src":"1434:14:21"},"nodeType":"YulIf","src":"1431:2:21"},{"nodeType":"YulVariableDeclaration","src":"1474:32:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1488:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1499:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1484:3:21"},"nodeType":"YulFunctionCall","src":"1484:22:21"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1478:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1554:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1563:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1566:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1556:6:21"},"nodeType":"YulFunctionCall","src":"1556:12:21"},"nodeType":"YulExpressionStatement","src":"1556:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1533:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"1537:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1529:3:21"},"nodeType":"YulFunctionCall","src":"1529:13:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1544:7:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1525:3:21"},"nodeType":"YulFunctionCall","src":"1525:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1518:6:21"},"nodeType":"YulFunctionCall","src":"1518:35:21"},"nodeType":"YulIf","src":"1515:2:21"},{"nodeType":"YulVariableDeclaration","src":"1579:26:21","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1602:2:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1589:12:21"},"nodeType":"YulFunctionCall","src":"1589:16:21"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"1583:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1628:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1630:16:21"},"nodeType":"YulFunctionCall","src":"1630:18:21"},"nodeType":"YulExpressionStatement","src":"1630:18:21"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1620:2:21"},{"name":"_1","nodeType":"YulIdentifier","src":"1624:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1617:2:21"},"nodeType":"YulFunctionCall","src":"1617:10:21"},"nodeType":"YulIf","src":"1614:2:21"},{"nodeType":"YulVariableDeclaration","src":"1659:17:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1673:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1669:3:21"},"nodeType":"YulFunctionCall","src":"1669:7:21"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"1663:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1685:23:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1705:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1699:5:21"},"nodeType":"YulFunctionCall","src":"1699:9:21"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1689:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1717:71:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1739:6:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1763:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"1767:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1759:3:21"},"nodeType":"YulFunctionCall","src":"1759:13:21"},{"name":"_4","nodeType":"YulIdentifier","src":"1774:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1755:3:21"},"nodeType":"YulFunctionCall","src":"1755:22:21"},{"kind":"number","nodeType":"YulLiteral","src":"1779:2:21","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1751:3:21"},"nodeType":"YulFunctionCall","src":"1751:31:21"},{"name":"_4","nodeType":"YulIdentifier","src":"1784:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1747:3:21"},"nodeType":"YulFunctionCall","src":"1747:40:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1735:3:21"},"nodeType":"YulFunctionCall","src":"1735:53:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1721:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1847:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1849:16:21"},"nodeType":"YulFunctionCall","src":"1849:18:21"},"nodeType":"YulExpressionStatement","src":"1849:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1806:10:21"},{"name":"_1","nodeType":"YulIdentifier","src":"1818:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1803:2:21"},"nodeType":"YulFunctionCall","src":"1803:18:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1826:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1838:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1823:2:21"},"nodeType":"YulFunctionCall","src":"1823:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1800:2:21"},"nodeType":"YulFunctionCall","src":"1800:46:21"},"nodeType":"YulIf","src":"1797:2:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1885:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1889:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1878:6:21"},"nodeType":"YulFunctionCall","src":"1878:22:21"},"nodeType":"YulExpressionStatement","src":"1878:22:21"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1916:6:21"},{"name":"_3","nodeType":"YulIdentifier","src":"1924:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1909:6:21"},"nodeType":"YulFunctionCall","src":"1909:18:21"},"nodeType":"YulExpressionStatement","src":"1909:18:21"},{"body":{"nodeType":"YulBlock","src":"1973:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1982:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1985:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1975:6:21"},"nodeType":"YulFunctionCall","src":"1975:12:21"},"nodeType":"YulExpressionStatement","src":"1975:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1950:2:21"},{"name":"_3","nodeType":"YulIdentifier","src":"1954:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1946:3:21"},"nodeType":"YulFunctionCall","src":"1946:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"1959:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1942:3:21"},"nodeType":"YulFunctionCall","src":"1942:20:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1964:7:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1939:2:21"},"nodeType":"YulFunctionCall","src":"1939:33:21"},"nodeType":"YulIf","src":"1936:2:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2015:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2023:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2011:3:21"},"nodeType":"YulFunctionCall","src":"2011:15:21"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2032:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"2036:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2028:3:21"},"nodeType":"YulFunctionCall","src":"2028:11:21"},{"name":"_3","nodeType":"YulIdentifier","src":"2041:2:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1998:12:21"},"nodeType":"YulFunctionCall","src":"1998:46:21"},"nodeType":"YulExpressionStatement","src":"1998:46:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2068:6:21"},{"name":"_3","nodeType":"YulIdentifier","src":"2076:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2064:3:21"},"nodeType":"YulFunctionCall","src":"2064:15:21"},{"kind":"number","nodeType":"YulLiteral","src":"2081:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2060:3:21"},"nodeType":"YulFunctionCall","src":"2060:24:21"},{"kind":"number","nodeType":"YulLiteral","src":"2086:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2053:6:21"},"nodeType":"YulFunctionCall","src":"2053:35:21"},"nodeType":"YulExpressionStatement","src":"2053:35:21"},{"nodeType":"YulAssignment","src":"2097:16:21","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"2107:6:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2097:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1053:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1064:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1076:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1084:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1092:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1100:6:21","type":""}],"src":"981:1138:21"},{"body":{"nodeType":"YulBlock","src":"2208:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"2254:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2263:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2266:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2256:6:21"},"nodeType":"YulFunctionCall","src":"2256:12:21"},"nodeType":"YulExpressionStatement","src":"2256:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2229:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2238:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2225:3:21"},"nodeType":"YulFunctionCall","src":"2225:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2250:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2221:3:21"},"nodeType":"YulFunctionCall","src":"2221:32:21"},"nodeType":"YulIf","src":"2218:2:21"},{"nodeType":"YulAssignment","src":"2279:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2308:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2289:18:21"},"nodeType":"YulFunctionCall","src":"2289:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2279:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"2327:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2357:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2368:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2353:3:21"},"nodeType":"YulFunctionCall","src":"2353:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2340:12:21"},"nodeType":"YulFunctionCall","src":"2340:32:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2331:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2425:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2434:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2437:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2427:6:21"},"nodeType":"YulFunctionCall","src":"2427:12:21"},"nodeType":"YulExpressionStatement","src":"2427:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2394:5:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2415:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2408:6:21"},"nodeType":"YulFunctionCall","src":"2408:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2401:6:21"},"nodeType":"YulFunctionCall","src":"2401:21:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2391:2:21"},"nodeType":"YulFunctionCall","src":"2391:32:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2384:6:21"},"nodeType":"YulFunctionCall","src":"2384:40:21"},"nodeType":"YulIf","src":"2381:2:21"},{"nodeType":"YulAssignment","src":"2450:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"2460:5:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2450:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2166:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2177:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2189:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2197:6:21","type":""}],"src":"2124:347:21"},{"body":{"nodeType":"YulBlock","src":"2563:167:21","statements":[{"body":{"nodeType":"YulBlock","src":"2609:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2618:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2621:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2611:6:21"},"nodeType":"YulFunctionCall","src":"2611:12:21"},"nodeType":"YulExpressionStatement","src":"2611:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2584:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2593:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2580:3:21"},"nodeType":"YulFunctionCall","src":"2580:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2605:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2576:3:21"},"nodeType":"YulFunctionCall","src":"2576:32:21"},"nodeType":"YulIf","src":"2573:2:21"},{"nodeType":"YulAssignment","src":"2634:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2663:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2644:18:21"},"nodeType":"YulFunctionCall","src":"2644:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2634:6:21"}]},{"nodeType":"YulAssignment","src":"2682:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2709:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2720:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2705:3:21"},"nodeType":"YulFunctionCall","src":"2705:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2692:12:21"},"nodeType":"YulFunctionCall","src":"2692:32:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2682:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2521:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2532:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2544:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2552:6:21","type":""}],"src":"2476:254:21"},{"body":{"nodeType":"YulBlock","src":"2804:176:21","statements":[{"body":{"nodeType":"YulBlock","src":"2850:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2859:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2862:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2852:6:21"},"nodeType":"YulFunctionCall","src":"2852:12:21"},"nodeType":"YulExpressionStatement","src":"2852:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2825:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2834:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2821:3:21"},"nodeType":"YulFunctionCall","src":"2821:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2846:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2817:3:21"},"nodeType":"YulFunctionCall","src":"2817:32:21"},"nodeType":"YulIf","src":"2814:2:21"},{"nodeType":"YulVariableDeclaration","src":"2875:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2901:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2888:12:21"},"nodeType":"YulFunctionCall","src":"2888:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2879:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2944:5:21"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"2920:23:21"},"nodeType":"YulFunctionCall","src":"2920:30:21"},"nodeType":"YulExpressionStatement","src":"2920:30:21"},{"nodeType":"YulAssignment","src":"2959:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"2969:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2959:6:21"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2770:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2781:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2793:6:21","type":""}],"src":"2735:245:21"},{"body":{"nodeType":"YulBlock","src":"3065:169:21","statements":[{"body":{"nodeType":"YulBlock","src":"3111:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3120:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3123:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3113:6:21"},"nodeType":"YulFunctionCall","src":"3113:12:21"},"nodeType":"YulExpressionStatement","src":"3113:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3086:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3095:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3082:3:21"},"nodeType":"YulFunctionCall","src":"3082:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3107:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3078:3:21"},"nodeType":"YulFunctionCall","src":"3078:32:21"},"nodeType":"YulIf","src":"3075:2:21"},{"nodeType":"YulVariableDeclaration","src":"3136:29:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3155:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3149:5:21"},"nodeType":"YulFunctionCall","src":"3149:16:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3140:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3198:5:21"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"3174:23:21"},"nodeType":"YulFunctionCall","src":"3174:30:21"},"nodeType":"YulExpressionStatement","src":"3174:30:21"},{"nodeType":"YulAssignment","src":"3213:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"3223:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3213:6:21"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3031:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3042:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3054:6:21","type":""}],"src":"2985:249:21"},{"body":{"nodeType":"YulBlock","src":"3309:110:21","statements":[{"body":{"nodeType":"YulBlock","src":"3355:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3364:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3367:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3357:6:21"},"nodeType":"YulFunctionCall","src":"3357:12:21"},"nodeType":"YulExpressionStatement","src":"3357:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3330:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3339:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3326:3:21"},"nodeType":"YulFunctionCall","src":"3326:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3351:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3322:3:21"},"nodeType":"YulFunctionCall","src":"3322:32:21"},"nodeType":"YulIf","src":"3319:2:21"},{"nodeType":"YulAssignment","src":"3380:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3403:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3390:12:21"},"nodeType":"YulFunctionCall","src":"3390:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3380:6:21"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3275:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3286:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3298:6:21","type":""}],"src":"3239:180:21"},{"body":{"nodeType":"YulBlock","src":"3473:208:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3483:26:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3503:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3497:5:21"},"nodeType":"YulFunctionCall","src":"3497:12:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3487:6:21","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3525:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"3530:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3518:6:21"},"nodeType":"YulFunctionCall","src":"3518:19:21"},"nodeType":"YulExpressionStatement","src":"3518:19:21"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3572:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3579:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3568:3:21"},"nodeType":"YulFunctionCall","src":"3568:16:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3590:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3595:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3586:3:21"},"nodeType":"YulFunctionCall","src":"3586:14:21"},{"name":"length","nodeType":"YulIdentifier","src":"3602:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"3546:21:21"},"nodeType":"YulFunctionCall","src":"3546:63:21"},"nodeType":"YulExpressionStatement","src":"3546:63:21"},{"nodeType":"YulAssignment","src":"3618:57:21","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3633:3:21"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3646:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3654:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3642:3:21"},"nodeType":"YulFunctionCall","src":"3642:15:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3663:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3659:3:21"},"nodeType":"YulFunctionCall","src":"3659:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3638:3:21"},"nodeType":"YulFunctionCall","src":"3638:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3629:3:21"},"nodeType":"YulFunctionCall","src":"3629:39:21"},{"kind":"number","nodeType":"YulLiteral","src":"3670:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3625:3:21"},"nodeType":"YulFunctionCall","src":"3625:50:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3618:3:21"}]}]},"name":"abi_encode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3450:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3457:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3465:3:21","type":""}],"src":"3424:257:21"},{"body":{"nodeType":"YulBlock","src":"3873:283:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3883:27:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3903:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3897:5:21"},"nodeType":"YulFunctionCall","src":"3897:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3887:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3945:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3953:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3941:3:21"},"nodeType":"YulFunctionCall","src":"3941:17:21"},{"name":"pos","nodeType":"YulIdentifier","src":"3960:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"3965:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"3919:21:21"},"nodeType":"YulFunctionCall","src":"3919:53:21"},"nodeType":"YulExpressionStatement","src":"3919:53:21"},{"nodeType":"YulVariableDeclaration","src":"3981:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3998:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"4003:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3994:3:21"},"nodeType":"YulFunctionCall","src":"3994:16:21"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"3985:5:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4019:29:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4041:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4035:5:21"},"nodeType":"YulFunctionCall","src":"4035:13:21"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"4023:8:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4083:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4091:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4079:3:21"},"nodeType":"YulFunctionCall","src":"4079:17:21"},{"name":"end_1","nodeType":"YulIdentifier","src":"4098:5:21"},{"name":"length_1","nodeType":"YulIdentifier","src":"4105:8:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4057:21:21"},"nodeType":"YulFunctionCall","src":"4057:57:21"},"nodeType":"YulExpressionStatement","src":"4057:57:21"},{"nodeType":"YulAssignment","src":"4123:27:21","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"4134:5:21"},{"name":"length_1","nodeType":"YulIdentifier","src":"4141:8:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4130:3:21"},"nodeType":"YulFunctionCall","src":"4130:20:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4123:3:21"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3841:3:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3846:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3854:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3865:3:21","type":""}],"src":"3686:470:21"},{"body":{"nodeType":"YulBlock","src":"4262:102:21","statements":[{"nodeType":"YulAssignment","src":"4272:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4284:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4295:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4280:3:21"},"nodeType":"YulFunctionCall","src":"4280:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4272:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4314:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4329:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4345:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4350:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4341:3:21"},"nodeType":"YulFunctionCall","src":"4341:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"4354:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4337:3:21"},"nodeType":"YulFunctionCall","src":"4337:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4325:3:21"},"nodeType":"YulFunctionCall","src":"4325:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4307:6:21"},"nodeType":"YulFunctionCall","src":"4307:51:21"},"nodeType":"YulExpressionStatement","src":"4307:51:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4231:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4242:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4253:4:21","type":""}],"src":"4161:203:21"},{"body":{"nodeType":"YulBlock","src":"4572:285:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4582:29:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4600:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4605:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4596:3:21"},"nodeType":"YulFunctionCall","src":"4596:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"4609:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4592:3:21"},"nodeType":"YulFunctionCall","src":"4592:19:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4586:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4627:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4642:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"4650:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4638:3:21"},"nodeType":"YulFunctionCall","src":"4638:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4620:6:21"},"nodeType":"YulFunctionCall","src":"4620:34:21"},"nodeType":"YulExpressionStatement","src":"4620:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4674:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4685:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4670:3:21"},"nodeType":"YulFunctionCall","src":"4670:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4694:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"4702:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4690:3:21"},"nodeType":"YulFunctionCall","src":"4690:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4663:6:21"},"nodeType":"YulFunctionCall","src":"4663:43:21"},"nodeType":"YulExpressionStatement","src":"4663:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4726:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4737:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4722:3:21"},"nodeType":"YulFunctionCall","src":"4722:18:21"},{"name":"value2","nodeType":"YulIdentifier","src":"4742:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4715:6:21"},"nodeType":"YulFunctionCall","src":"4715:34:21"},"nodeType":"YulExpressionStatement","src":"4715:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4769:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4780:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4765:3:21"},"nodeType":"YulFunctionCall","src":"4765:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"4785:3:21","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4758:6:21"},"nodeType":"YulFunctionCall","src":"4758:31:21"},"nodeType":"YulExpressionStatement","src":"4758:31:21"},{"nodeType":"YulAssignment","src":"4798:53:21","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"4823:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4835:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4846:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4831:3:21"},"nodeType":"YulFunctionCall","src":"4831:19:21"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"4806:16:21"},"nodeType":"YulFunctionCall","src":"4806:45:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4798:4:21"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4517:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4528:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4536:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4544:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4552:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4563:4:21","type":""}],"src":"4369:488:21"},{"body":{"nodeType":"YulBlock","src":"4957:92:21","statements":[{"nodeType":"YulAssignment","src":"4967:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4979:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4990:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4975:3:21"},"nodeType":"YulFunctionCall","src":"4975:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4967:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5009:9:21"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5034:6:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5027:6:21"},"nodeType":"YulFunctionCall","src":"5027:14:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5020:6:21"},"nodeType":"YulFunctionCall","src":"5020:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5002:6:21"},"nodeType":"YulFunctionCall","src":"5002:41:21"},"nodeType":"YulExpressionStatement","src":"5002:41:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4926:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4937:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4948:4:21","type":""}],"src":"4862:187:21"},{"body":{"nodeType":"YulBlock","src":"5175:98:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5192:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5203:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5185:6:21"},"nodeType":"YulFunctionCall","src":"5185:21:21"},"nodeType":"YulExpressionStatement","src":"5185:21:21"},{"nodeType":"YulAssignment","src":"5215:52:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5240:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5252:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5263:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5248:3:21"},"nodeType":"YulFunctionCall","src":"5248:18:21"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"5223:16:21"},"nodeType":"YulFunctionCall","src":"5223:44:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5215:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5144:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5155:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5166:4:21","type":""}],"src":"5054:219:21"},{"body":{"nodeType":"YulBlock","src":"5452:240:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5469:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5480:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5462:6:21"},"nodeType":"YulFunctionCall","src":"5462:21:21"},"nodeType":"YulExpressionStatement","src":"5462:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5503:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5514:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5499:3:21"},"nodeType":"YulFunctionCall","src":"5499:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"5519:2:21","type":"","value":"50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5492:6:21"},"nodeType":"YulFunctionCall","src":"5492:30:21"},"nodeType":"YulExpressionStatement","src":"5492:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5542:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5553:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5538:3:21"},"nodeType":"YulFunctionCall","src":"5538:18:21"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"5558:34:21","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5531:6:21"},"nodeType":"YulFunctionCall","src":"5531:62:21"},"nodeType":"YulExpressionStatement","src":"5531:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5613:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5624:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5609:3:21"},"nodeType":"YulFunctionCall","src":"5609:18:21"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"5629:20:21","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5602:6:21"},"nodeType":"YulFunctionCall","src":"5602:48:21"},"nodeType":"YulExpressionStatement","src":"5602:48:21"},{"nodeType":"YulAssignment","src":"5659:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5671:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5682:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5667:3:21"},"nodeType":"YulFunctionCall","src":"5667:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5659:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5429:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5443:4:21","type":""}],"src":"5278:414:21"},{"body":{"nodeType":"YulBlock","src":"5871:227:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5888:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5899:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5881:6:21"},"nodeType":"YulFunctionCall","src":"5881:21:21"},"nodeType":"YulExpressionStatement","src":"5881:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5922:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5933:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5918:3:21"},"nodeType":"YulFunctionCall","src":"5918:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"5938:2:21","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5911:6:21"},"nodeType":"YulFunctionCall","src":"5911:30:21"},"nodeType":"YulExpressionStatement","src":"5911:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5961:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5972:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5957:3:21"},"nodeType":"YulFunctionCall","src":"5957:18:21"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"5977:34:21","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5950:6:21"},"nodeType":"YulFunctionCall","src":"5950:62:21"},"nodeType":"YulExpressionStatement","src":"5950:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6032:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6043:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6028:3:21"},"nodeType":"YulFunctionCall","src":"6028:18:21"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"6048:7:21","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6021:6:21"},"nodeType":"YulFunctionCall","src":"6021:35:21"},"nodeType":"YulExpressionStatement","src":"6021:35:21"},{"nodeType":"YulAssignment","src":"6065:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6077:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6088:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6073:3:21"},"nodeType":"YulFunctionCall","src":"6073:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6065:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5848:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5862:4:21","type":""}],"src":"5697:401:21"},{"body":{"nodeType":"YulBlock","src":"6277:226:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6294:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6305:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6287:6:21"},"nodeType":"YulFunctionCall","src":"6287:21:21"},"nodeType":"YulExpressionStatement","src":"6287:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6328:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6339:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6324:3:21"},"nodeType":"YulFunctionCall","src":"6324:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"6344:2:21","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6317:6:21"},"nodeType":"YulFunctionCall","src":"6317:30:21"},"nodeType":"YulExpressionStatement","src":"6317:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6367:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6378:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6363:3:21"},"nodeType":"YulFunctionCall","src":"6363:18:21"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"6383:34:21","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6356:6:21"},"nodeType":"YulFunctionCall","src":"6356:62:21"},"nodeType":"YulExpressionStatement","src":"6356:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6438:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6449:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6434:3:21"},"nodeType":"YulFunctionCall","src":"6434:18:21"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"6454:6:21","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6427:6:21"},"nodeType":"YulFunctionCall","src":"6427:34:21"},"nodeType":"YulExpressionStatement","src":"6427:34:21"},{"nodeType":"YulAssignment","src":"6470:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6482:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6493:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6478:3:21"},"nodeType":"YulFunctionCall","src":"6478:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6470:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6254:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6268:4:21","type":""}],"src":"6103:400:21"},{"body":{"nodeType":"YulBlock","src":"6682:175:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6699:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6710:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6692:6:21"},"nodeType":"YulFunctionCall","src":"6692:21:21"},"nodeType":"YulExpressionStatement","src":"6692:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6733:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6744:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6729:3:21"},"nodeType":"YulFunctionCall","src":"6729:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"6749:2:21","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6722:6:21"},"nodeType":"YulFunctionCall","src":"6722:30:21"},"nodeType":"YulExpressionStatement","src":"6722:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6772:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6783:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6768:3:21"},"nodeType":"YulFunctionCall","src":"6768:18:21"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"6788:27:21","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6761:6:21"},"nodeType":"YulFunctionCall","src":"6761:55:21"},"nodeType":"YulExpressionStatement","src":"6761:55:21"},{"nodeType":"YulAssignment","src":"6825:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6837:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6848:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6833:3:21"},"nodeType":"YulFunctionCall","src":"6833:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6825:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6659:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6673:4:21","type":""}],"src":"6508:349:21"},{"body":{"nodeType":"YulBlock","src":"7036:231:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7053:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7064:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7046:6:21"},"nodeType":"YulFunctionCall","src":"7046:21:21"},"nodeType":"YulExpressionStatement","src":"7046:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7087:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7098:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7083:3:21"},"nodeType":"YulFunctionCall","src":"7083:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"7103:2:21","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7076:6:21"},"nodeType":"YulFunctionCall","src":"7076:30:21"},"nodeType":"YulExpressionStatement","src":"7076:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7126:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7137:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7122:3:21"},"nodeType":"YulFunctionCall","src":"7122:18:21"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"7142:34:21","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7115:6:21"},"nodeType":"YulFunctionCall","src":"7115:62:21"},"nodeType":"YulExpressionStatement","src":"7115:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7197:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7208:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7193:3:21"},"nodeType":"YulFunctionCall","src":"7193:18:21"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"7213:11:21","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7186:6:21"},"nodeType":"YulFunctionCall","src":"7186:39:21"},"nodeType":"YulExpressionStatement","src":"7186:39:21"},{"nodeType":"YulAssignment","src":"7234:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7246:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7257:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7242:3:21"},"nodeType":"YulFunctionCall","src":"7242:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7234:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7013:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7027:4:21","type":""}],"src":"6862:405:21"},{"body":{"nodeType":"YulBlock","src":"7446:252:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7463:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7474:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7456:6:21"},"nodeType":"YulFunctionCall","src":"7456:21:21"},"nodeType":"YulExpressionStatement","src":"7456:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7497:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7508:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7493:3:21"},"nodeType":"YulFunctionCall","src":"7493:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"7513:2:21","type":"","value":"62"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7486:6:21"},"nodeType":"YulFunctionCall","src":"7486:30:21"},"nodeType":"YulExpressionStatement","src":"7486:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7536:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7547:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7532:3:21"},"nodeType":"YulFunctionCall","src":"7532:18:21"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"7552:34:21","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7525:6:21"},"nodeType":"YulFunctionCall","src":"7525:62:21"},"nodeType":"YulExpressionStatement","src":"7525:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7607:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7618:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7603:3:21"},"nodeType":"YulFunctionCall","src":"7603:18:21"},{"hexValue":"6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"7623:32:21","type":"","value":"ken owner nor approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7596:6:21"},"nodeType":"YulFunctionCall","src":"7596:60:21"},"nodeType":"YulExpressionStatement","src":"7596:60:21"},{"nodeType":"YulAssignment","src":"7665:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7677:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7688:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7673:3:21"},"nodeType":"YulFunctionCall","src":"7673:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7665:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7423:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7437:4:21","type":""}],"src":"7272:426:21"},{"body":{"nodeType":"YulBlock","src":"7877:174:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7894:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7905:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7887:6:21"},"nodeType":"YulFunctionCall","src":"7887:21:21"},"nodeType":"YulExpressionStatement","src":"7887:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7928:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7939:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7924:3:21"},"nodeType":"YulFunctionCall","src":"7924:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"7944:2:21","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7917:6:21"},"nodeType":"YulFunctionCall","src":"7917:30:21"},"nodeType":"YulExpressionStatement","src":"7917:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7967:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7978:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7963:3:21"},"nodeType":"YulFunctionCall","src":"7963:18:21"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"7983:26:21","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7956:6:21"},"nodeType":"YulFunctionCall","src":"7956:54:21"},"nodeType":"YulExpressionStatement","src":"7956:54:21"},{"nodeType":"YulAssignment","src":"8019:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8031:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8042:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8027:3:21"},"nodeType":"YulFunctionCall","src":"8027:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8019:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7854:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7868:4:21","type":""}],"src":"7703:348:21"},{"body":{"nodeType":"YulBlock","src":"8230:223:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8247:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8258:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8240:6:21"},"nodeType":"YulFunctionCall","src":"8240:21:21"},"nodeType":"YulExpressionStatement","src":"8240:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8281:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8292:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8277:3:21"},"nodeType":"YulFunctionCall","src":"8277:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"8297:2:21","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8270:6:21"},"nodeType":"YulFunctionCall","src":"8270:30:21"},"nodeType":"YulExpressionStatement","src":"8270:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8320:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8331:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8316:3:21"},"nodeType":"YulFunctionCall","src":"8316:18:21"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"8336:34:21","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8309:6:21"},"nodeType":"YulFunctionCall","src":"8309:62:21"},"nodeType":"YulExpressionStatement","src":"8309:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8391:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8402:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8387:3:21"},"nodeType":"YulFunctionCall","src":"8387:18:21"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"8407:3:21","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8380:6:21"},"nodeType":"YulFunctionCall","src":"8380:31:21"},"nodeType":"YulExpressionStatement","src":"8380:31:21"},{"nodeType":"YulAssignment","src":"8420:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8432:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8443:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8428:3:21"},"nodeType":"YulFunctionCall","src":"8428:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8420:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8207:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8221:4:21","type":""}],"src":"8056:397:21"},{"body":{"nodeType":"YulBlock","src":"8632:236:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8649:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8660:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8642:6:21"},"nodeType":"YulFunctionCall","src":"8642:21:21"},"nodeType":"YulExpressionStatement","src":"8642:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8683:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8694:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8679:3:21"},"nodeType":"YulFunctionCall","src":"8679:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"8699:2:21","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8672:6:21"},"nodeType":"YulFunctionCall","src":"8672:30:21"},"nodeType":"YulExpressionStatement","src":"8672:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8722:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8733:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8718:3:21"},"nodeType":"YulFunctionCall","src":"8718:18:21"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"8738:34:21","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8711:6:21"},"nodeType":"YulFunctionCall","src":"8711:62:21"},"nodeType":"YulExpressionStatement","src":"8711:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8793:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8804:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8789:3:21"},"nodeType":"YulFunctionCall","src":"8789:18:21"},{"hexValue":"72206e6f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"8809:16:21","type":"","value":"r nor approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8782:6:21"},"nodeType":"YulFunctionCall","src":"8782:44:21"},"nodeType":"YulExpressionStatement","src":"8782:44:21"},{"nodeType":"YulAssignment","src":"8835:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8847:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8858:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8843:3:21"},"nodeType":"YulFunctionCall","src":"8843:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8835:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8609:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8623:4:21","type":""}],"src":"8458:410:21"},{"body":{"nodeType":"YulBlock","src":"8974:76:21","statements":[{"nodeType":"YulAssignment","src":"8984:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8996:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9007:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8992:3:21"},"nodeType":"YulFunctionCall","src":"8992:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8984:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9026:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"9037:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9019:6:21"},"nodeType":"YulFunctionCall","src":"9019:25:21"},"nodeType":"YulExpressionStatement","src":"9019:25:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8943:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8954:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8965:4:21","type":""}],"src":"8873:177:21"},{"body":{"nodeType":"YulBlock","src":"9103:80:21","statements":[{"body":{"nodeType":"YulBlock","src":"9130:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9132:16:21"},"nodeType":"YulFunctionCall","src":"9132:18:21"},"nodeType":"YulExpressionStatement","src":"9132:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9119:1:21"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9126:1:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9122:3:21"},"nodeType":"YulFunctionCall","src":"9122:6:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9116:2:21"},"nodeType":"YulFunctionCall","src":"9116:13:21"},"nodeType":"YulIf","src":"9113:2:21"},{"nodeType":"YulAssignment","src":"9161:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9172:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"9175:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9168:3:21"},"nodeType":"YulFunctionCall","src":"9168:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"9161:3:21"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9086:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"9089:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"9095:3:21","type":""}],"src":"9055:128:21"},{"body":{"nodeType":"YulBlock","src":"9234:74:21","statements":[{"body":{"nodeType":"YulBlock","src":"9257:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"9259:16:21"},"nodeType":"YulFunctionCall","src":"9259:18:21"},"nodeType":"YulExpressionStatement","src":"9259:18:21"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9254:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9247:6:21"},"nodeType":"YulFunctionCall","src":"9247:9:21"},"nodeType":"YulIf","src":"9244:2:21"},{"nodeType":"YulAssignment","src":"9288:14:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9297:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"9300:1:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9293:3:21"},"nodeType":"YulFunctionCall","src":"9293:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"9288:1:21"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9219:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"9222:1:21","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"9228:1:21","type":""}],"src":"9188:120:21"},{"body":{"nodeType":"YulBlock","src":"9362:76:21","statements":[{"body":{"nodeType":"YulBlock","src":"9384:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9386:16:21"},"nodeType":"YulFunctionCall","src":"9386:18:21"},"nodeType":"YulExpressionStatement","src":"9386:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9378:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"9381:1:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9375:2:21"},"nodeType":"YulFunctionCall","src":"9375:8:21"},"nodeType":"YulIf","src":"9372:2:21"},{"nodeType":"YulAssignment","src":"9415:17:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9427:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"9430:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9423:3:21"},"nodeType":"YulFunctionCall","src":"9423:9:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"9415:4:21"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9344:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"9347:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"9353:4:21","type":""}],"src":"9313:125:21"},{"body":{"nodeType":"YulBlock","src":"9496:205:21","statements":[{"nodeType":"YulVariableDeclaration","src":"9506:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"9515:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9510:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"9575:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9600:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"9605:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9596:3:21"},"nodeType":"YulFunctionCall","src":"9596:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9619:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"9624:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9615:3:21"},"nodeType":"YulFunctionCall","src":"9615:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9609:5:21"},"nodeType":"YulFunctionCall","src":"9609:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9589:6:21"},"nodeType":"YulFunctionCall","src":"9589:39:21"},"nodeType":"YulExpressionStatement","src":"9589:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9536:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"9539:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9533:2:21"},"nodeType":"YulFunctionCall","src":"9533:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9547:19:21","statements":[{"nodeType":"YulAssignment","src":"9549:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9558:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"9561:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9554:3:21"},"nodeType":"YulFunctionCall","src":"9554:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9549:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"9529:3:21","statements":[]},"src":"9525:113:21"},{"body":{"nodeType":"YulBlock","src":"9664:31:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9677:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"9682:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9673:3:21"},"nodeType":"YulFunctionCall","src":"9673:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"9691:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9666:6:21"},"nodeType":"YulFunctionCall","src":"9666:27:21"},"nodeType":"YulExpressionStatement","src":"9666:27:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9653:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"9656:6:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9650:2:21"},"nodeType":"YulFunctionCall","src":"9650:13:21"},"nodeType":"YulIf","src":"9647:2:21"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"9474:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"9479:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"9484:6:21","type":""}],"src":"9443:258:21"},{"body":{"nodeType":"YulBlock","src":"9761:325:21","statements":[{"nodeType":"YulAssignment","src":"9771:22:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9785:1:21","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"9788:4:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9781:3:21"},"nodeType":"YulFunctionCall","src":"9781:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9771:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"9802:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9832:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"9838:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9828:3:21"},"nodeType":"YulFunctionCall","src":"9828:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"9806:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"9879:31:21","statements":[{"nodeType":"YulAssignment","src":"9881:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9895:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9903:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9891:3:21"},"nodeType":"YulFunctionCall","src":"9891:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9881:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"9859:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9852:6:21"},"nodeType":"YulFunctionCall","src":"9852:26:21"},"nodeType":"YulIf","src":"9849:2:21"},{"body":{"nodeType":"YulBlock","src":"9969:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9990:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9997:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"10002:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9993:3:21"},"nodeType":"YulFunctionCall","src":"9993:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9983:6:21"},"nodeType":"YulFunctionCall","src":"9983:31:21"},"nodeType":"YulExpressionStatement","src":"9983:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10034:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10037:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10027:6:21"},"nodeType":"YulFunctionCall","src":"10027:15:21"},"nodeType":"YulExpressionStatement","src":"10027:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10062:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10065:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10055:6:21"},"nodeType":"YulFunctionCall","src":"10055:15:21"},"nodeType":"YulExpressionStatement","src":"10055:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"9925:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9948:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9956:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9945:2:21"},"nodeType":"YulFunctionCall","src":"9945:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9922:2:21"},"nodeType":"YulFunctionCall","src":"9922:38:21"},"nodeType":"YulIf","src":"9919:2:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"9741:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9750:6:21","type":""}],"src":"9706:380:21"},{"body":{"nodeType":"YulBlock","src":"10138:88:21","statements":[{"body":{"nodeType":"YulBlock","src":"10169:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10171:16:21"},"nodeType":"YulFunctionCall","src":"10171:18:21"},"nodeType":"YulExpressionStatement","src":"10171:18:21"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10154:5:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10165:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10161:3:21"},"nodeType":"YulFunctionCall","src":"10161:6:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10151:2:21"},"nodeType":"YulFunctionCall","src":"10151:17:21"},"nodeType":"YulIf","src":"10148:2:21"},{"nodeType":"YulAssignment","src":"10200:20:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10211:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"10218:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10207:3:21"},"nodeType":"YulFunctionCall","src":"10207:13:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10200:3:21"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10120:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"10130:3:21","type":""}],"src":"10091:135:21"},{"body":{"nodeType":"YulBlock","src":"10269:74:21","statements":[{"body":{"nodeType":"YulBlock","src":"10292:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"10294:16:21"},"nodeType":"YulFunctionCall","src":"10294:18:21"},"nodeType":"YulExpressionStatement","src":"10294:18:21"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10289:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10282:6:21"},"nodeType":"YulFunctionCall","src":"10282:9:21"},"nodeType":"YulIf","src":"10279:2:21"},{"nodeType":"YulAssignment","src":"10323:14:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10332:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"10335:1:21"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"10328:3:21"},"nodeType":"YulFunctionCall","src":"10328:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"10323:1:21"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10254:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"10257:1:21","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"10263:1:21","type":""}],"src":"10231:112:21"},{"body":{"nodeType":"YulBlock","src":"10380:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10397:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10404:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"10409:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10400:3:21"},"nodeType":"YulFunctionCall","src":"10400:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10390:6:21"},"nodeType":"YulFunctionCall","src":"10390:31:21"},"nodeType":"YulExpressionStatement","src":"10390:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10437:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10440:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10430:6:21"},"nodeType":"YulFunctionCall","src":"10430:15:21"},"nodeType":"YulExpressionStatement","src":"10430:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10461:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10464:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10454:6:21"},"nodeType":"YulFunctionCall","src":"10454:15:21"},"nodeType":"YulExpressionStatement","src":"10454:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"10348:127:21"},{"body":{"nodeType":"YulBlock","src":"10512:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10529:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10536:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"10541:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10532:3:21"},"nodeType":"YulFunctionCall","src":"10532:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10522:6:21"},"nodeType":"YulFunctionCall","src":"10522:31:21"},"nodeType":"YulExpressionStatement","src":"10522:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10569:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10572:4:21","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10562:6:21"},"nodeType":"YulFunctionCall","src":"10562:15:21"},"nodeType":"YulExpressionStatement","src":"10562:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10593:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10596:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10586:6:21"},"nodeType":"YulFunctionCall","src":"10586:15:21"},"nodeType":"YulExpressionStatement","src":"10586:15:21"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"10480:127:21"},{"body":{"nodeType":"YulBlock","src":"10644:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10661:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10668:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"10673:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10664:3:21"},"nodeType":"YulFunctionCall","src":"10664:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10654:6:21"},"nodeType":"YulFunctionCall","src":"10654:31:21"},"nodeType":"YulExpressionStatement","src":"10654:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10701:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10704:4:21","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10694:6:21"},"nodeType":"YulFunctionCall","src":"10694:15:21"},"nodeType":"YulExpressionStatement","src":"10694:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10725:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10728:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10718:6:21"},"nodeType":"YulFunctionCall","src":"10718:15:21"},"nodeType":"YulExpressionStatement","src":"10718:15:21"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"10612:127:21"},{"body":{"nodeType":"YulBlock","src":"10776:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10793:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10800:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"10805:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10796:3:21"},"nodeType":"YulFunctionCall","src":"10796:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10786:6:21"},"nodeType":"YulFunctionCall","src":"10786:31:21"},"nodeType":"YulExpressionStatement","src":"10786:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10833:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10836:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10826:6:21"},"nodeType":"YulFunctionCall","src":"10826:15:21"},"nodeType":"YulExpressionStatement","src":"10826:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10857:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10860:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10850:6:21"},"nodeType":"YulFunctionCall","src":"10850:15:21"},"nodeType":"YulExpressionStatement","src":"10850:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"10744:127:21"},{"body":{"nodeType":"YulBlock","src":"10920:87:21","statements":[{"body":{"nodeType":"YulBlock","src":"10985:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10994:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10997:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10987:6:21"},"nodeType":"YulFunctionCall","src":"10987:12:21"},"nodeType":"YulExpressionStatement","src":"10987:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10943:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10954:5:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10965:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"10970:10:21","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10961:3:21"},"nodeType":"YulFunctionCall","src":"10961:20:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10950:3:21"},"nodeType":"YulFunctionCall","src":"10950:32:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10940:2:21"},"nodeType":"YulFunctionCall","src":"10940:43:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10933:6:21"},"nodeType":"YulFunctionCall","src":"10933:51:21"},"nodeType":"YulIf","src":"10930:2:21"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10909:5:21","type":""}],"src":"10876:131:21"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_bytes(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: address zero is not a va\")\n        mstore(add(headStart, 96), \"lid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 62)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not to\")\n        mstore(add(headStart, 96), \"ken owner nor approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ERC721: invalid token ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC721: caller is not token owne\")\n        mstore(add(headStart, 96), \"r nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610e2a565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610f15565b61012461011f366004610e64565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610e00565b610333565b005b61014f61015f366004610cac565b61044e565b61014f610172366004610cac565b61047f565b610124610185366004610e64565b61049a565b61019d610198366004610c5e565b6104fa565b6040519081526020016100f3565b610104610580565b61014f6101c1366004610dc4565b61058f565b61014f6101d4366004610ce8565b61059e565b6101046101e7366004610e64565b6105d6565b6100e76101fa366004610c79565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990611037565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590611037565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b60006103178261064a565b506000908152600460205260409020546001600160a01b031690565b600061033e8261049a565b9050806001600160a01b0316836001600160a01b031614156103b15760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806103cd57506103cd81336101fa565b61043f5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c000060648201526084016103a8565b61044983836106ac565b505050565b610458338261071a565b6104745760405162461bcd60e51b81526004016103a890610f7a565b610449838383610799565b6104498383836040518060200160405280600081525061059e565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103a8565b60006001600160a01b0382166105645760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016103a8565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990611037565b61059a338383610935565b5050565b6105a8338361071a565b6105c45760405162461bcd60e51b81526004016103a890610f7a565b6105d084848484610a04565b50505050565b60606105e18261064a565b60006105f860408051602081019091526000815290565b905060008151116106185760405180602001604052806000815250610643565b8061062284610a37565b604051602001610633929190610ea9565b6040516020818303038152906040525b9392505050565b6000818152600260205260409020546001600160a01b03166106a95760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103a8565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906106e18261049a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806107268361049a565b9050806001600160a01b0316846001600160a01b0316148061076d57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806107915750836001600160a01b03166107868461030c565b6001600160a01b0316145b949350505050565b826001600160a01b03166107ac8261049a565b6001600160a01b0316146108105760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016103a8565b6001600160a01b0382166108725760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103a8565b61087d6000826106ac565b6001600160a01b03831660009081526003602052604081208054600192906108a6908490610ff4565b90915550506001600160a01b03821660009081526003602052604081208054600192906108d4908490610fc8565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031614156109975760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103a8565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610a0f848484610799565b610a1b84848484610b35565b6105d05760405162461bcd60e51b81526004016103a890610f28565b606081610a5b5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610a855780610a6f81611072565b9150610a7e9050600a83610fe0565b9150610a5f565b60008167ffffffffffffffff811115610aa057610aa06110e3565b6040519080825280601f01601f191660200182016040528015610aca576020820181803683370190505b5090505b841561079157610adf600183610ff4565b9150610aec600a8661108d565b610af7906030610fc8565b60f81b818381518110610b0c57610b0c6110cd565b60200101906001600160f81b031916908160001a905350610b2e600a86610fe0565b9450610ace565b60006001600160a01b0384163b15610c3757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610b79903390899088908890600401610ed8565b602060405180830381600087803b158015610b9357600080fd5b505af1925050508015610bc3575060408051601f3d908101601f19168201909252610bc091810190610e47565b60015b610c1d573d808015610bf1576040519150601f19603f3d011682016040523d82523d6000602084013e610bf6565b606091505b508051610c155760405162461bcd60e51b81526004016103a890610f28565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610791565b506001949350505050565b80356001600160a01b0381168114610c5957600080fd5b919050565b600060208284031215610c7057600080fd5b61064382610c42565b60008060408385031215610c8c57600080fd5b610c9583610c42565b9150610ca360208401610c42565b90509250929050565b600080600060608486031215610cc157600080fd5b610cca84610c42565b9250610cd860208501610c42565b9150604084013590509250925092565b60008060008060808587031215610cfe57600080fd5b610d0785610c42565b9350610d1560208601610c42565b925060408501359150606085013567ffffffffffffffff80821115610d3957600080fd5b818701915087601f830112610d4d57600080fd5b813581811115610d5f57610d5f6110e3565b604051601f8201601f19908116603f01168101908382118183101715610d8757610d876110e3565b816040528281528a6020848701011115610da057600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610dd757600080fd5b610de083610c42565b915060208301358015158114610df557600080fd5b809150509250929050565b60008060408385031215610e1357600080fd5b610e1c83610c42565b946020939093013593505050565b600060208284031215610e3c57600080fd5b8135610643816110f9565b600060208284031215610e5957600080fd5b8151610643816110f9565b600060208284031215610e7657600080fd5b5035919050565b60008151808452610e9581602086016020860161100b565b601f01601f19169290920160200192915050565b60008351610ebb81846020880161100b565b835190830190610ecf81836020880161100b565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610f0b90830184610e7d565b9695505050505050565b6020815260006106436020830184610e7d565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b60008219821115610fdb57610fdb6110a1565b500190565b600082610fef57610fef6110b7565b500490565b600082821015611006576110066110a1565b500390565b60005b8381101561102657818101518382015260200161100e565b838111156105d05750506000910152565b600181811c9082168061104b57607f821691505b6020821081141561106c57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611086576110866110a1565b5060010190565b60008261109c5761109c6110b7565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146106a957600080fdfea2646970667358221220f601a20a6eab6a823851fc940e5556bc0a8f6300608236b5f03f6d5829ecf25f64736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xE2A JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xF15 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xE64 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x44E JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xE64 JUMP JUMPDEST PUSH2 0x49A JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xC5E JUMP JUMPDEST PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x580 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC4 JUMP JUMPDEST PUSH2 0x58F JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE8 JUMP JUMPDEST PUSH2 0x59E JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xE64 JUMP JUMPDEST PUSH2 0x5D6 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xC79 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0x1037 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0x1037 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x317 DUP3 PUSH2 0x64A JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33E DUP3 PUSH2 0x49A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x3B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3CD JUMPI POP PUSH2 0x3CD DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x43F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x449 DUP4 DUP4 PUSH2 0x6AC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x458 CALLER DUP3 PUSH2 0x71A JUMP JUMPDEST PUSH2 0x474 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A8 SWAP1 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0x449 DUP4 DUP4 DUP4 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x449 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x59E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x564 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A8 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0x1037 JUMP JUMPDEST PUSH2 0x59A CALLER DUP4 DUP4 PUSH2 0x935 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5A8 CALLER DUP4 PUSH2 0x71A JUMP JUMPDEST PUSH2 0x5C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A8 SWAP1 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0x5D0 DUP5 DUP5 DUP5 DUP5 PUSH2 0xA04 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5E1 DUP3 PUSH2 0x64A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F8 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x643 JUMP JUMPDEST DUP1 PUSH2 0x622 DUP5 PUSH2 0xA37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x633 SWAP3 SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x6E1 DUP3 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x726 DUP4 PUSH2 0x49A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x76D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x791 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x786 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7AC DUP3 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x810 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x872 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x87D PUSH1 0x0 DUP3 PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x8A6 SWAP1 DUP5 SWAP1 PUSH2 0xFF4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x8D4 SWAP1 DUP5 SWAP1 PUSH2 0xFC8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x997 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xA0F DUP5 DUP5 DUP5 PUSH2 0x799 JUMP JUMPDEST PUSH2 0xA1B DUP5 DUP5 DUP5 DUP5 PUSH2 0xB35 JUMP JUMPDEST PUSH2 0x5D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A8 SWAP1 PUSH2 0xF28 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xA5B JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xA85 JUMPI DUP1 PUSH2 0xA6F DUP2 PUSH2 0x1072 JUMP JUMPDEST SWAP2 POP PUSH2 0xA7E SWAP1 POP PUSH1 0xA DUP4 PUSH2 0xFE0 JUMP JUMPDEST SWAP2 POP PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAA0 JUMPI PUSH2 0xAA0 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xACA JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x791 JUMPI PUSH2 0xADF PUSH1 0x1 DUP4 PUSH2 0xFF4 JUMP JUMPDEST SWAP2 POP PUSH2 0xAEC PUSH1 0xA DUP7 PUSH2 0x108D JUMP JUMPDEST PUSH2 0xAF7 SWAP1 PUSH1 0x30 PUSH2 0xFC8 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB0C JUMPI PUSH2 0xB0C PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xB2E PUSH1 0xA DUP7 PUSH2 0xFE0 JUMP JUMPDEST SWAP5 POP PUSH2 0xACE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xC37 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xB79 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xED8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xBC3 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xBC0 SWAP2 DUP2 ADD SWAP1 PUSH2 0xE47 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC1D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xBF1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBF6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xC15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A8 SWAP1 PUSH2 0xF28 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x791 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x643 DUP3 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC95 DUP4 PUSH2 0xC42 JUMP JUMPDEST SWAP2 POP PUSH2 0xCA3 PUSH1 0x20 DUP5 ADD PUSH2 0xC42 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCCA DUP5 PUSH2 0xC42 JUMP JUMPDEST SWAP3 POP PUSH2 0xCD8 PUSH1 0x20 DUP6 ADD PUSH2 0xC42 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xCFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD07 DUP6 PUSH2 0xC42 JUMP JUMPDEST SWAP4 POP PUSH2 0xD15 PUSH1 0x20 DUP7 ADD PUSH2 0xC42 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xD5F JUMPI PUSH2 0xD5F PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xD87 JUMPI PUSH2 0xD87 PUSH2 0x10E3 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xDA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDE0 DUP4 PUSH2 0xC42 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1C DUP4 PUSH2 0xC42 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x643 DUP2 PUSH2 0x10F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x643 DUP2 PUSH2 0x10F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xE95 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x100B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xEBB DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x100B JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xECF DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x100B JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xF0B SWAP1 DUP4 ADD DUP5 PUSH2 0xE7D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x643 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE7D JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x1C881B9BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xFDB JUMPI PUSH2 0xFDB PUSH2 0x10A1 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xFEF JUMPI PUSH2 0xFEF PUSH2 0x10B7 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1006 JUMPI PUSH2 0x1006 PUSH2 0x10A1 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1026 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x100E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x5D0 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x104B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x106C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1086 JUMPI PUSH2 0x1086 PUSH2 0x10A1 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x109C JUMPI PUSH2 0x109C PUSH2 0x10B7 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x6A9 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 ADD LOG2 EXP PUSH15 0xAB6A823851FC940E5556BC0A8F6300 PUSH1 0x82 CALLDATASIZE 0xB5 CREATE EXTCODEHASH PUSH14 0x5829ECF25F64736F6C6343000806 STOP CALLER ","sourceMap":"628:13718:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;:::i;:::-;;:::i;:::-;;;5027:14:21;;5020:22;5002:41;;4990:2;4975:18;1570:300:7;;;;;;;;2470:98;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4325:32:21;;;4307:51;;4295:2;4280:18;3935:167:7;4262:102:21;3467:407:7;;;;;;:::i;:::-;;:::i;:::-;;4612:327;;;;;;:::i;:::-;;:::i;5005:179::-;;;;;;:::i;:::-;;:::i;2190:218::-;;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;:::i;:::-;;:::i;:::-;;;9019:25:21;;;9007:2;8992:18;1929:204:7;8974:76:21;2632:102:7;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;5250:315::-;;;;;;:::i;:::-;;:::i;2800:276::-;;;;;;:::i;:::-;;:::i;4388:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4508:25:7;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162;1570:300;1672:4;-1:-1:-1;;;;;;1707:40:7;;-1:-1:-1;;;1707:40:7;;:104;;-1:-1:-1;;;;;;;1763:48:7;;-1:-1:-1;;;1763:48:7;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:14;;;1827:36:7;1688:175;1570:300;-1:-1:-1;;1570:300:7:o;2470:98::-;2524:13;2556:5;2549:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2470:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:7;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:7;;3935:167::o;3467:407::-;3547:13;3563:23;3578:7;3563:14;:23::i;:::-;3547:39;;3610:5;-1:-1:-1;;;;;3604:11:7;:2;-1:-1:-1;;;;;3604:11:7;;;3596:57;;;;-1:-1:-1;;;3596:57:7;;8258:2:21;3596:57:7;;;8240:21:21;8297:2;8277:18;;;8270:30;8336:34;8316:18;;;8309:62;-1:-1:-1;;;8387:18:21;;;8380:31;8428:19;;3596:57:7;;;;;;;;;719:10:12;-1:-1:-1;;;;;3685:21:7;;;;:62;;-1:-1:-1;3710:37:7;3727:5;719:10:12;4388:162:7;:::i;3710:37::-;3664:171;;;;-1:-1:-1;;;3664:171:7;;7474:2:21;3664:171:7;;;7456:21:21;7513:2;7493:18;;;7486:30;7552:34;7532:18;;;7525:62;7623:32;7603:18;;;7596:60;7673:19;;3664:171:7;7446:252:21;3664:171:7;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3537:337;3467:407;;:::o;4612:327::-;4801:41;719:10:12;4834:7:7;4801:18;:41::i;:::-;4793:100;;;;-1:-1:-1;;;4793:100:7;;;;;;;:::i;:::-;4904:28;4914:4;4920:2;4924:7;4904:9;:28::i;5005:179::-;5138:39;5155:4;5161:2;5165:7;5138:39;;;;;;;;;;;;:16;:39::i;2190:218::-;2262:7;2297:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2297:16:7;2331:19;2323:56;;;;-1:-1:-1;;;2323:56:7;;7905:2:21;2323:56:7;;;7887:21:21;7944:2;7924:18;;;7917:30;-1:-1:-1;;;7963:18:21;;;7956:54;8027:18;;2323:56:7;7877:174:21;1929:204:7;2001:7;-1:-1:-1;;;;;2028:19:7;;2020:73;;;;-1:-1:-1;;;2020:73:7;;7064:2:21;2020:73:7;;;7046:21:21;7103:2;7083:18;;;7076:30;7142:34;7122:18;;;7115:62;-1:-1:-1;;;7193:18:21;;;7186:39;7242:19;;2020:73:7;7036:231:21;2020:73:7;-1:-1:-1;;;;;;2110:16:7;;;;;:9;:16;;;;;;;1929:204::o;2632:102::-;2688:13;2720:7;2713:14;;;;;:::i;4169:153::-;4263:52;719:10:12;4296:8:7;4306;4263:18;:52::i;:::-;4169:153;;:::o;5250:315::-;5418:41;719:10:12;5451:7:7;5418:18;:41::i;:::-;5410:100;;;;-1:-1:-1;;;5410:100:7;;;;;;;:::i;:::-;5520:38;5534:4;5540:2;5544:7;5553:4;5520:13;:38::i;:::-;5250:315;;;;:::o;2800:276::-;2873:13;2898:23;2913:7;2898:14;:23::i;:::-;2932:21;2956:10;3394:9;;;;;;;;;-1:-1:-1;3394:9:7;;;3318:92;2956:10;2932:34;;3007:1;2989:7;2983:21;:25;:86;;;;;;;;;;;;;;;;;3035:7;3044:18;:7;:16;:18::i;:::-;3018:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2983:86;2976:93;2800:276;-1:-1:-1;;;2800:276:7:o;11657:133::-;7099:4;7122:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7122:16:7;11730:53;;;;-1:-1:-1;;;11730:53:7;;7905:2:21;11730:53:7;;;7887:21:21;7944:2;7924:18;;;7917:30;-1:-1:-1;;;7963:18:21;;;7956:54;8027:18;;11730:53:7;7877:174:21;11730:53:7;11657:133;:::o;10959:171::-;11033:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11033:29:7;-1:-1:-1;;;;;11033:29:7;;;;;;;;:24;;11086:23;11033:24;11086:14;:23::i;:::-;-1:-1:-1;;;;;11077:46:7;;;;;;;;;;;10959:171;;:::o;7317:261::-;7410:4;7426:13;7442:23;7457:7;7442:14;:23::i;:::-;7426:39;;7494:5;-1:-1:-1;;;;;7483:16:7;:7;-1:-1:-1;;;;;7483:16:7;;:52;;;-1:-1:-1;;;;;;4508:25:7;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7503:32;7483:87;;;;7563:7;-1:-1:-1;;;;;7539:31:7;:20;7551:7;7539:11;:20::i;:::-;-1:-1:-1;;;;;7539:31:7;;7483:87;7475:96;7317:261;-1:-1:-1;;;;7317:261:7:o;10242:605::-;10396:4;-1:-1:-1;;;;;10369:31:7;:23;10384:7;10369:14;:23::i;:::-;-1:-1:-1;;;;;10369:31:7;;10361:81;;;;-1:-1:-1;;;10361:81:7;;5899:2:21;10361:81:7;;;5881:21:21;5938:2;5918:18;;;5911:30;5977:34;5957:18;;;5950:62;-1:-1:-1;;;6028:18:21;;;6021:35;6073:19;;10361:81:7;5871:227:21;10361:81:7;-1:-1:-1;;;;;10460:16:7;;10452:65;;;;-1:-1:-1;;;10452:65:7;;6305:2:21;10452:65:7;;;6287:21:21;6344:2;6324:18;;;6317:30;6383:34;6363:18;;;6356:62;-1:-1:-1;;;6434:18:21;;;6427:34;6478:19;;10452:65:7;6277:226:21;10452:65:7;10629:29;10646:1;10650:7;10629:8;:29::i;:::-;-1:-1:-1;;;;;10669:15:7;;;;;;:9;:15;;;;;:20;;10688:1;;10669:15;:20;;10688:1;;10669:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10699:13:7;;;;;;:9;:13;;;;;:18;;10716:1;;10699:13;:18;;10716:1;;10699:18;:::i;:::-;;;;-1:-1:-1;;10727:16:7;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10727:21:7;-1:-1:-1;;;;;10727:21:7;;;;;;;;;10764:27;;10727:16;;10764:27;;;;;;;3537:337;3467:407;;:::o;11266:307::-;11416:8;-1:-1:-1;;;;;11407:17:7;:5;-1:-1:-1;;;;;11407:17:7;;;11399:55;;;;-1:-1:-1;;;11399:55:7;;6710:2:21;11399:55:7;;;6692:21:21;6749:2;6729:18;;;6722:30;6788:27;6768:18;;;6761:55;6833:18;;11399:55:7;6682:175:21;11399:55:7;-1:-1:-1;;;;;11464:25:7;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11464:46:7;;;;;;;;;;11525:41;;5002::21;;;11525::7;;4975:18:21;11525:41:7;;;;;;;11266:307;;;:::o;6426:305::-;6576:28;6586:4;6592:2;6596:7;6576:9;:28::i;:::-;6622:47;6645:4;6651:2;6655:7;6664:4;6622:22;:47::i;:::-;6614:110;;;;-1:-1:-1;;;6614:110:7;;;;;;;:::i;392:703:13:-;448:13;665:10;661:51;;-1:-1:-1;;691:10:13;;;;;;;;;;;;-1:-1:-1;;;691:10:13;;;;;392:703::o;661:51::-;736:5;721:12;775:75;782:9;;775:75;;807:8;;;;:::i;:::-;;-1:-1:-1;829:10:13;;-1:-1:-1;837:2:13;829:10;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;881:17:13;;859:39;;908:150;915:10;;908:150;;941:11;951:1;941:11;;:::i;:::-;;-1:-1:-1;1009:10:13;1017:2;1009:5;:10;:::i;:::-;996:24;;:2;:24;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;966:56:13;;;;;;;;-1:-1:-1;1036:11:13;1045:2;1036:11;;:::i;:::-;;;908:150;;12342:831:7;12491:4;-1:-1:-1;;;;;12511:13:7;;1465:19:11;:23;12507:660:7;;12546:71;;-1:-1:-1;;;12546:71:7;;-1:-1:-1;;;;;12546:36:7;;;;;:71;;719:10:12;;12597:4:7;;12603:7;;12612:4;;12546:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12546:71:7;;;;;;;;-1:-1:-1;;12546:71:7;;;;;;;;;;;;:::i;:::-;;;12542:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12784:13:7;;12780:321;;12826:60;;-1:-1:-1;;;12826:60:7;;;;;;;:::i;12780:321::-;13053:6;13047:13;13038:6;13034:2;13030:15;13023:38;12542:573;-1:-1:-1;;;;;;12667:51:7;-1:-1:-1;;;12667:51:7;;-1:-1:-1;12660:58:7;;12507:660;-1:-1:-1;13152:4:7;12342:831;;;;;;:::o;14:173:21:-;82:20;;-1:-1:-1;;;;;131:31:21;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;320:1;317;310:12;272:2;343:29;362:9;343:29;:::i;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:2;;;528:1;525;518:12;480:2;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;470:173;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:2;;;810:1;807;800:12;762:2;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;752:224;;;;;:::o;981:1138::-;1076:6;1084;1092;1100;1153:3;1141:9;1132:7;1128:23;1124:33;1121:2;;;1170:1;1167;1160:12;1121:2;1193:29;1212:9;1193:29;:::i;:::-;1183:39;;1241:38;1275:2;1264:9;1260:18;1241:38;:::i;:::-;1231:48;;1326:2;1315:9;1311:18;1298:32;1288:42;;1381:2;1370:9;1366:18;1353:32;1404:18;1445:2;1437:6;1434:14;1431:2;;;1461:1;1458;1451:12;1431:2;1499:6;1488:9;1484:22;1474:32;;1544:7;1537:4;1533:2;1529:13;1525:27;1515:2;;1566:1;1563;1556:12;1515:2;1602;1589:16;1624:2;1620;1617:10;1614:2;;;1630:18;;:::i;:::-;1705:2;1699:9;1673:2;1759:13;;-1:-1:-1;;1755:22:21;;;1779:2;1751:31;1747:40;1735:53;;;1803:18;;;1823:22;;;1800:46;1797:2;;;1849:18;;:::i;:::-;1889:10;1885:2;1878:22;1924:2;1916:6;1909:18;1964:7;1959:2;1954;1950;1946:11;1942:20;1939:33;1936:2;;;1985:1;1982;1975:12;1936:2;2041;2036;2032;2028:11;2023:2;2015:6;2011:15;1998:46;2086:1;2081:2;2076;2068:6;2064:15;2060:24;2053:35;2107:6;2097:16;;;;;;;1111:1008;;;;;;;:::o;2124:347::-;2189:6;2197;2250:2;2238:9;2229:7;2225:23;2221:32;2218:2;;;2266:1;2263;2256:12;2218:2;2289:29;2308:9;2289:29;:::i;:::-;2279:39;;2368:2;2357:9;2353:18;2340:32;2415:5;2408:13;2401:21;2394:5;2391:32;2381:2;;2437:1;2434;2427:12;2381:2;2460:5;2450:15;;;2208:263;;;;;:::o;2476:254::-;2544:6;2552;2605:2;2593:9;2584:7;2580:23;2576:32;2573:2;;;2621:1;2618;2611:12;2573:2;2644:29;2663:9;2644:29;:::i;:::-;2634:39;2720:2;2705:18;;;;2692:32;;-1:-1:-1;;;2563:167:21:o;2735:245::-;2793:6;2846:2;2834:9;2825:7;2821:23;2817:32;2814:2;;;2862:1;2859;2852:12;2814:2;2901:9;2888:23;2920:30;2944:5;2920:30;:::i;2985:249::-;3054:6;3107:2;3095:9;3086:7;3082:23;3078:32;3075:2;;;3123:1;3120;3113:12;3075:2;3155:9;3149:16;3174:30;3198:5;3174:30;:::i;3239:180::-;3298:6;3351:2;3339:9;3330:7;3326:23;3322:32;3319:2;;;3367:1;3364;3357:12;3319:2;-1:-1:-1;3390:23:21;;3309:110;-1:-1:-1;3309:110:21:o;3424:257::-;3465:3;3503:5;3497:12;3530:6;3525:3;3518:19;3546:63;3602:6;3595:4;3590:3;3586:14;3579:4;3572:5;3568:16;3546:63;:::i;:::-;3663:2;3642:15;-1:-1:-1;;3638:29:21;3629:39;;;;3670:4;3625:50;;3473:208;-1:-1:-1;;3473:208:21:o;3686:470::-;3865:3;3903:6;3897:13;3919:53;3965:6;3960:3;3953:4;3945:6;3941:17;3919:53;:::i;:::-;4035:13;;3994:16;;;;4057:57;4035:13;3994:16;4091:4;4079:17;;4057:57;:::i;:::-;4130:20;;3873:283;-1:-1:-1;;;;3873:283:21:o;4369:488::-;-1:-1:-1;;;;;4638:15:21;;;4620:34;;4690:15;;4685:2;4670:18;;4663:43;4737:2;4722:18;;4715:34;;;4785:3;4780:2;4765:18;;4758:31;;;4563:4;;4806:45;;4831:19;;4823:6;4806:45;:::i;:::-;4798:53;4572:285;-1:-1:-1;;;;;;4572:285:21:o;5054:219::-;5203:2;5192:9;5185:21;5166:4;5223:44;5263:2;5252:9;5248:18;5240:6;5223:44;:::i;5278:414::-;5480:2;5462:21;;;5519:2;5499:18;;;5492:30;5558:34;5553:2;5538:18;;5531:62;-1:-1:-1;;;5624:2:21;5609:18;;5602:48;5682:3;5667:19;;5452:240::o;8458:410::-;8660:2;8642:21;;;8699:2;8679:18;;;8672:30;8738:34;8733:2;8718:18;;8711:62;-1:-1:-1;;;8804:2:21;8789:18;;8782:44;8858:3;8843:19;;8632:236::o;9055:128::-;9095:3;9126:1;9122:6;9119:1;9116:13;9113:2;;;9132:18;;:::i;:::-;-1:-1:-1;9168:9:21;;9103:80::o;9188:120::-;9228:1;9254;9244:2;;9259:18;;:::i;:::-;-1:-1:-1;9293:9:21;;9234:74::o;9313:125::-;9353:4;9381:1;9378;9375:8;9372:2;;;9386:18;;:::i;:::-;-1:-1:-1;9423:9:21;;9362:76::o;9443:258::-;9515:1;9525:113;9539:6;9536:1;9533:13;9525:113;;;9615:11;;;9609:18;9596:11;;;9589:39;9561:2;9554:10;9525:113;;;9656:6;9653:1;9650:13;9647:2;;;-1:-1:-1;;9691:1:21;9673:16;;9666:27;9496:205::o;9706:380::-;9785:1;9781:12;;;;9828;;;9849:2;;9903:4;9895:6;9891:17;9881:27;;9849:2;9956;9948:6;9945:14;9925:18;9922:38;9919:2;;;10002:10;9997:3;9993:20;9990:1;9983:31;10037:4;10034:1;10027:15;10065:4;10062:1;10055:15;9919:2;;9761:325;;;:::o;10091:135::-;10130:3;-1:-1:-1;;10151:17:21;;10148:2;;;10171:18;;:::i;:::-;-1:-1:-1;10218:1:21;10207:13;;10138:88::o;10231:112::-;10263:1;10289;10279:2;;10294:18;;:::i;:::-;-1:-1:-1;10328:9:21;;10269:74::o;10348:127::-;10409:10;10404:3;10400:20;10397:1;10390:31;10440:4;10437:1;10430:15;10464:4;10461:1;10454:15;10480:127;10541:10;10536:3;10532:20;10529:1;10522:31;10572:4;10569:1;10562:15;10596:4;10593:1;10586:15;10612:127;10673:10;10668:3;10664:20;10661:1;10654:31;10704:4;10701:1;10694:15;10728:4;10725:1;10718:15;10744:127;10805:10;10800:3;10796:20;10793:1;10786:31;10836:4;10833:1;10826:15;10860:4;10857:1;10850:15;10876:131;-1:-1:-1;;;;;;10950:32:21;;10940:43;;10930:2;;10997:1;10994;10987:12"},"gasEstimates":{"creation":{"codeDepositCost":"884200","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2634","getApproved(uint256)":"4769","isApprovedForAll(address,address)":"infinite","name()":"infinite","ownerOf(uint256)":"2561","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"26708","supportsInterface(bytes4)":"511","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"infinite","_approve(address,uint256)":"infinite","_baseURI()":"infinite","_beforeTokenTransfer(address,address,uint256)":"infinite","_burn(uint256)":"infinite","_checkOnERC721Received(address,address,uint256,bytes memory)":"infinite","_exists(uint256)":"infinite","_isApprovedOrOwner(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_requireMinted(uint256)":"infinite","_safeMint(address,uint256)":"infinite","_safeMint(address,uint256,bytes memory)":"infinite","_safeTransfer(address,address,uint256,bytes memory)":"infinite","_setApprovalForAll(address,address,bool)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1190,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1192,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1196,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":1200,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":1204,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":1210,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a503daeb732dddaf0cbf846dca29bcc9ccf0f0dfdffb7110eb7c8d3c0fc3190964736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 SUB 0xDA 0xEB PUSH20 0x2DDDAF0CBF846DCA29BCC9CCF0F0DFDFFB7110EB PUSH29 0x8D3C0FC3190964736F6C63430008060033000000000000000000000000 ","sourceMap":"194:8111:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8111:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a503daeb732dddaf0cbf846dca29bcc9ccf0f0dfdffb7110eb7c8d3c0fc3190964736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 SUB 0xDA 0xEB PUSH20 0x2DDDAF0CBF846DCA29BCC9CCF0F0DFDFFB7110EB PUSH29 0x8D3C0FC3190964736F6C63430008060033000000000000000000000000 ","sourceMap":"194:8111:11:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aa6316fb41a55192f2e4f8152c5164cf367284cceae35070cde6d15ec77e9c3664736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA PUSH4 0x16FB41A5 MLOAD SWAP3 CALLCODE 0xE4 0xF8 ISZERO 0x2C MLOAD PUSH5 0xCF367284CC 0xEA 0xE3 POP PUSH17 0xCDE6D15EC77E9C3664736F6C6343000806 STOP CALLER ","sourceMap":"161:2235:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;161:2235:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aa6316fb41a55192f2e4f8152c5164cf367284cceae35070cde6d15ec77e9c3664736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA PUSH4 0x16FB41A5 MLOAD SWAP3 CALLCODE 0xE4 0xF8 ISZERO 0x2C MLOAD PUSH5 0xCF367284CC 0xEA 0xE3 POP PUSH17 0xCDE6D15EC77E9C3664736F6C6343000806 STOP CALLER ","sourceMap":"161:2235:13:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/DDL.sol":{"DDL":{"abi":[{"inputs":[{"internalType":"address[4]","name":"_arrLongHegicStrategy","type":"address[4]"},{"internalType":"address[4]","name":"_arrShortHegicStrategy","type":"address[4]"},{"internalType":"contract IERC721","name":"_collateralToken","type":"address"},{"internalType":"contract IHegicOperationalTreasury","name":"_operationalPool","type":"address"},{"internalType":"contract IERC20","name":"_USDC","type":"address"},{"internalType":"uint256","name":"_minBorrowLimit","type":"uint256"},{"internalType":"uint256","name":"_ltv","type":"uint256"},{"internalType":"uint256","name":"_COLLATERAL_DECIMALS","type":"uint256"},{"internalType":"uint256","name":"_PriorLiqPriceCoef","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"optionID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"address","name":"strategy","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"Borrow","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"optionID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"userReturn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"poolReturn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liqFee","type":"uint256"}],"name":"ExerciseByPriorLiqPrice","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"optionID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"poolProfit","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liqFee","type":"uint256"}],"name":"ForcedExercise","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"optionID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"poolProfit","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liqFee","type":"uint256"}],"name":"Liquidate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"optionID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Repay","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"Unlock","type":"event"},{"inputs":[],"name":"COLLATERAL_DECIMALS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"INTEREST_RATE_DECIMALS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LTV","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LTV_DECIMALS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PriorLiqPriceCoef","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"USDC","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"borrow","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"borrowedByOption","outputs":[{"internalType":"uint256","name":"borrowed","type":"uint256"},{"internalType":"uint256","name":"newBorrowTimestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"calculateUpcomingFee","outputs":[{"internalType":"uint256","name":"upcomingFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"collateralInfo","outputs":[{"internalType":"address","name":"owner","type":"address"},{"components":[{"internalType":"address","name":"strategyAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"strike","type":"uint256"},{"internalType":"uint256","name":"expiration","type":"uint256"},{"internalType":"bool","name":"isLong","type":"bool"}],"internalType":"struct DDL.optionInfo","name":"strategy","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"collateralToken","outputs":[{"internalType":"contract IERC721","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"currentLiqPrice","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"currentPrice","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"exerciseByPriorLiqPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"forcedExercise","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"interestRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"liqPrice","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"liquidate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"loanState","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"loanStateByPriorLiqPrice","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"lockOption","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"maxBorrowLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minBorrowLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"operationalPool","outputs":[{"internalType":"contract IHegicOperationalTreasury","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pool","outputs":[{"internalType":"contract IPoolDDL","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"priorLiqPrice","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"profitByOption","outputs":[{"internalType":"uint256","name":"profit","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"repay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"setInterestRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"setInterestRateDecimals","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"setLTV","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"setMinBorrowLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"value","type":"address"}],"name":"setPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"strategyType","outputs":[{"internalType":"enum DDL.HegicStrategyType","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"unlock","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_3024":{"entryPoint":null,"id":3024,"parameterSlots":9,"returnSlots":0},"@_69":{"entryPoint":null,"id":69,"parameterSlots":0,"returnSlots":0},"@_msgSender_2499":{"entryPoint":null,"id":2499,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_157":{"entryPoint":464,"id":157,"parameterSlots":1,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":544,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_address_fromMemory":{"entryPoint":562,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_address_$4_memory_ptrt_array$_t_address_$4_memory_ptrt_contract$_IERC721_$2147t_contract$_IHegicOperationalTreasury_$4305t_contract$_IERC20_$822t_uint256t_uint256t_uint256t_uint256_fromMemory":{"entryPoint":708,"id":null,"parameterSlots":2,"returnSlots":9},"checked_exp_helper":{"entryPoint":877,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":950,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":971,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":1153,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":1183,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":1205,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":1227,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":1249,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4101:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:78:21","statements":[{"nodeType":"YulAssignment","src":"84:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:21"},"nodeType":"YulFunctionCall","src":"93:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"140:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"115:24:21"},"nodeType":"YulFunctionCall","src":"115:31:21"},"nodeType":"YulExpressionStatement","src":"115:31:21"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:21","type":""}],"src":"14:138:21"},{"body":{"nodeType":"YulBlock","src":"228:738:21","statements":[{"body":{"nodeType":"YulBlock","src":"277:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"286:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"289:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"279:6:21"},"nodeType":"YulFunctionCall","src":"279:12:21"},"nodeType":"YulExpressionStatement","src":"279:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"256:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"264:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"252:3:21"},"nodeType":"YulFunctionCall","src":"252:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"271:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"248:3:21"},"nodeType":"YulFunctionCall","src":"248:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"241:6:21"},"nodeType":"YulFunctionCall","src":"241:35:21"},"nodeType":"YulIf","src":"238:2:21"},{"nodeType":"YulVariableDeclaration","src":"302:23:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"322:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"316:5:21"},"nodeType":"YulFunctionCall","src":"316:9:21"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"306:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"334:34:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"356:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"364:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"352:3:21"},"nodeType":"YulFunctionCall","src":"352:16:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"338:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"451:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"472:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"479:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"484:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"475:3:21"},"nodeType":"YulFunctionCall","src":"475:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"465:6:21"},"nodeType":"YulFunctionCall","src":"465:31:21"},"nodeType":"YulExpressionStatement","src":"465:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"516:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"519:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"509:6:21"},"nodeType":"YulFunctionCall","src":"509:15:21"},"nodeType":"YulExpressionStatement","src":"509:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"544:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"547:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"537:6:21"},"nodeType":"YulFunctionCall","src":"537:15:21"},"nodeType":"YulExpressionStatement","src":"537:15:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"386:10:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"406:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"410:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"402:3:21"},"nodeType":"YulFunctionCall","src":"402:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"414:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"398:3:21"},"nodeType":"YulFunctionCall","src":"398:18:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"383:2:21"},"nodeType":"YulFunctionCall","src":"383:34:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"422:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"434:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"419:2:21"},"nodeType":"YulFunctionCall","src":"419:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"380:2:21"},"nodeType":"YulFunctionCall","src":"380:62:21"},"nodeType":"YulIf","src":"377:2:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"578:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"582:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"571:6:21"},"nodeType":"YulFunctionCall","src":"571:22:21"},"nodeType":"YulExpressionStatement","src":"571:22:21"},{"nodeType":"YulVariableDeclaration","src":"602:17:21","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"613:6:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"606:3:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"628:17:21","value":{"name":"offset","nodeType":"YulIdentifier","src":"639:6:21"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"632:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"683:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"692:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"695:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"685:6:21"},"nodeType":"YulFunctionCall","src":"685:12:21"},"nodeType":"YulExpressionStatement","src":"685:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"664:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"672:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"660:3:21"},"nodeType":"YulFunctionCall","src":"660:16:21"},{"name":"end","nodeType":"YulIdentifier","src":"678:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"657:2:21"},"nodeType":"YulFunctionCall","src":"657:25:21"},"nodeType":"YulIf","src":"654:2:21"},{"nodeType":"YulVariableDeclaration","src":"708:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"717:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"712:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"774:162:21","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"795:3:21"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"830:3:21"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"800:29:21"},"nodeType":"YulFunctionCall","src":"800:34:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"788:6:21"},"nodeType":"YulFunctionCall","src":"788:47:21"},"nodeType":"YulExpressionStatement","src":"788:47:21"},{"nodeType":"YulVariableDeclaration","src":"848:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"858:4:21","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"852:2:21","type":""}]},{"nodeType":"YulAssignment","src":"875:19:21","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"886:3:21"},{"name":"_1","nodeType":"YulIdentifier","src":"891:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"882:3:21"},"nodeType":"YulFunctionCall","src":"882:12:21"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"875:3:21"}]},{"nodeType":"YulAssignment","src":"907:19:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"918:3:21"},{"name":"_1","nodeType":"YulIdentifier","src":"923:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"914:3:21"},"nodeType":"YulFunctionCall","src":"914:12:21"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"907:3:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"738:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"741:4:21","type":"","value":"0x04"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"735:2:21"},"nodeType":"YulFunctionCall","src":"735:11:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"747:18:21","statements":[{"nodeType":"YulAssignment","src":"749:14:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"758:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"761:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"754:3:21"},"nodeType":"YulFunctionCall","src":"754:9:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"749:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"731:3:21","statements":[]},"src":"727:209:21"},{"nodeType":"YulAssignment","src":"945:15:21","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"954:6:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"945:5:21"}]}]},"name":"abi_decode_array_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"202:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"210:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"218:5:21","type":""}],"src":"157:809:21"},{"body":{"nodeType":"YulBlock","src":"1298:755:21","statements":[{"body":{"nodeType":"YulBlock","src":"1345:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1354:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1357:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1347:6:21"},"nodeType":"YulFunctionCall","src":"1347:12:21"},"nodeType":"YulExpressionStatement","src":"1347:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1319:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1328:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1315:3:21"},"nodeType":"YulFunctionCall","src":"1315:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1340:3:21","type":"","value":"480"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1311:3:21"},"nodeType":"YulFunctionCall","src":"1311:33:21"},"nodeType":"YulIf","src":"1308:2:21"},{"nodeType":"YulAssignment","src":"1370:65:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1427:7:21"}],"functionName":{"name":"abi_decode_array_address_fromMemory","nodeType":"YulIdentifier","src":"1380:35:21"},"nodeType":"YulFunctionCall","src":"1380:55:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1370:6:21"}]},{"nodeType":"YulAssignment","src":"1444:75:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1494:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1505:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1490:3:21"},"nodeType":"YulFunctionCall","src":"1490:19:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1511:7:21"}],"functionName":{"name":"abi_decode_array_address_fromMemory","nodeType":"YulIdentifier","src":"1454:35:21"},"nodeType":"YulFunctionCall","src":"1454:65:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1444:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"1528:39:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1551:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1562:3:21","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1547:3:21"},"nodeType":"YulFunctionCall","src":"1547:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1541:5:21"},"nodeType":"YulFunctionCall","src":"1541:26:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1532:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1601:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1576:24:21"},"nodeType":"YulFunctionCall","src":"1576:31:21"},"nodeType":"YulExpressionStatement","src":"1576:31:21"},{"nodeType":"YulAssignment","src":"1616:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"1626:5:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1616:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"1640:41:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1665:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1676:3:21","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1661:3:21"},"nodeType":"YulFunctionCall","src":"1661:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1655:5:21"},"nodeType":"YulFunctionCall","src":"1655:26:21"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"1644:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1715:7:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1690:24:21"},"nodeType":"YulFunctionCall","src":"1690:33:21"},"nodeType":"YulExpressionStatement","src":"1690:33:21"},{"nodeType":"YulAssignment","src":"1732:17:21","value":{"name":"value_1","nodeType":"YulIdentifier","src":"1742:7:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1732:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"1758:41:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1783:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1794:3:21","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1779:3:21"},"nodeType":"YulFunctionCall","src":"1779:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1773:5:21"},"nodeType":"YulFunctionCall","src":"1773:26:21"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"1762:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"1833:7:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1808:24:21"},"nodeType":"YulFunctionCall","src":"1808:33:21"},"nodeType":"YulExpressionStatement","src":"1808:33:21"},{"nodeType":"YulAssignment","src":"1850:17:21","value":{"name":"value_2","nodeType":"YulIdentifier","src":"1860:7:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1850:6:21"}]},{"nodeType":"YulAssignment","src":"1876:36:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1896:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1907:3:21","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1892:3:21"},"nodeType":"YulFunctionCall","src":"1892:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1886:5:21"},"nodeType":"YulFunctionCall","src":"1886:26:21"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"1876:6:21"}]},{"nodeType":"YulAssignment","src":"1921:36:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1941:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1952:3:21","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1937:3:21"},"nodeType":"YulFunctionCall","src":"1937:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1931:5:21"},"nodeType":"YulFunctionCall","src":"1931:26:21"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"1921:6:21"}]},{"nodeType":"YulAssignment","src":"1966:36:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1986:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1997:3:21","type":"","value":"416"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1982:3:21"},"nodeType":"YulFunctionCall","src":"1982:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1976:5:21"},"nodeType":"YulFunctionCall","src":"1976:26:21"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"1966:6:21"}]},{"nodeType":"YulAssignment","src":"2011:36:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2031:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2042:3:21","type":"","value":"448"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2027:3:21"},"nodeType":"YulFunctionCall","src":"2027:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2021:5:21"},"nodeType":"YulFunctionCall","src":"2021:26:21"},"variableNames":[{"name":"value8","nodeType":"YulIdentifier","src":"2011:6:21"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$4_memory_ptrt_array$_t_address_$4_memory_ptrt_contract$_IERC721_$2147t_contract$_IHegicOperationalTreasury_$4305t_contract$_IERC20_$822t_uint256t_uint256t_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1200:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1211:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1223:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1231:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1239:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1247:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1255:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1263:6:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"1271:6:21","type":""},{"name":"value7","nodeType":"YulTypedName","src":"1279:6:21","type":""},{"name":"value8","nodeType":"YulTypedName","src":"1287:6:21","type":""}],"src":"971:1082:21"},{"body":{"nodeType":"YulBlock","src":"2122:358:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2132:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2147:1:21","type":"","value":"1"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"2136:7:21","type":""}]},{"nodeType":"YulAssignment","src":"2157:16:21","value":{"name":"power_1","nodeType":"YulIdentifier","src":"2166:7:21"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"2157:5:21"}]},{"nodeType":"YulAssignment","src":"2182:13:21","value":{"name":"_base","nodeType":"YulIdentifier","src":"2190:5:21"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"2182:4:21"}]},{"body":{"nodeType":"YulBlock","src":"2246:228:21","statements":[{"body":{"nodeType":"YulBlock","src":"2291:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"2293:16:21"},"nodeType":"YulFunctionCall","src":"2293:18:21"},"nodeType":"YulExpressionStatement","src":"2293:18:21"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"2266:4:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2280:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2276:3:21"},"nodeType":"YulFunctionCall","src":"2276:6:21"},{"name":"base","nodeType":"YulIdentifier","src":"2284:4:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2272:3:21"},"nodeType":"YulFunctionCall","src":"2272:17:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2263:2:21"},"nodeType":"YulFunctionCall","src":"2263:27:21"},"nodeType":"YulIf","src":"2260:2:21"},{"body":{"nodeType":"YulBlock","src":"2352:29:21","statements":[{"nodeType":"YulAssignment","src":"2354:25:21","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"2367:5:21"},{"name":"base","nodeType":"YulIdentifier","src":"2374:4:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2363:3:21"},"nodeType":"YulFunctionCall","src":"2363:16:21"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"2354:5:21"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"2333:8:21"},{"name":"power_1","nodeType":"YulIdentifier","src":"2343:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2329:3:21"},"nodeType":"YulFunctionCall","src":"2329:22:21"},"nodeType":"YulIf","src":"2326:2:21"},{"nodeType":"YulAssignment","src":"2394:23:21","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"2406:4:21"},{"name":"base","nodeType":"YulIdentifier","src":"2412:4:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2402:3:21"},"nodeType":"YulFunctionCall","src":"2402:15:21"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"2394:4:21"}]},{"nodeType":"YulAssignment","src":"2430:34:21","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"2446:7:21"},{"name":"exponent","nodeType":"YulIdentifier","src":"2455:8:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2442:3:21"},"nodeType":"YulFunctionCall","src":"2442:22:21"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"2430:8:21"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"2215:8:21"},{"name":"power_1","nodeType":"YulIdentifier","src":"2225:7:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2212:2:21"},"nodeType":"YulFunctionCall","src":"2212:21:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2234:3:21","statements":[]},"pre":{"nodeType":"YulBlock","src":"2208:3:21","statements":[]},"src":"2204:270:21"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nodeType":"YulTypedName","src":"2086:5:21","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"2093:8:21","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"2106:5:21","type":""},{"name":"base","nodeType":"YulTypedName","src":"2113:4:21","type":""}],"src":"2058:422:21"},{"body":{"nodeType":"YulBlock","src":"2555:61:21","statements":[{"nodeType":"YulAssignment","src":"2565:45:21","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"2595:4:21"},{"name":"exponent","nodeType":"YulIdentifier","src":"2601:8:21"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"2574:20:21"},"nodeType":"YulFunctionCall","src":"2574:36:21"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"2565:5:21"}]}]},"name":"checked_exp_t_uint256_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"2526:4:21","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"2532:8:21","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"2545:5:21","type":""}],"src":"2485:131:21"},{"body":{"nodeType":"YulBlock","src":"2680:747:21","statements":[{"body":{"nodeType":"YulBlock","src":"2718:52:21","statements":[{"nodeType":"YulAssignment","src":"2732:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2741:1:21","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"2732:5:21"}]},{"nodeType":"YulLeave","src":"2755:5:21"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"2700:8:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2693:6:21"},"nodeType":"YulFunctionCall","src":"2693:16:21"},"nodeType":"YulIf","src":"2690:2:21"},{"body":{"nodeType":"YulBlock","src":"2803:52:21","statements":[{"nodeType":"YulAssignment","src":"2817:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2826:1:21","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"2817:5:21"}]},{"nodeType":"YulLeave","src":"2840:5:21"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"2789:4:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2782:6:21"},"nodeType":"YulFunctionCall","src":"2782:12:21"},"nodeType":"YulIf","src":"2779:2:21"},{"cases":[{"body":{"nodeType":"YulBlock","src":"2891:52:21","statements":[{"nodeType":"YulAssignment","src":"2905:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2914:1:21","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"2905:5:21"}]},{"nodeType":"YulLeave","src":"2928:5:21"}]},"nodeType":"YulCase","src":"2884:59:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2889:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2959:123:21","statements":[{"body":{"nodeType":"YulBlock","src":"2994:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"2996:16:21"},"nodeType":"YulFunctionCall","src":"2996:18:21"},"nodeType":"YulExpressionStatement","src":"2996:18:21"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"2979:8:21"},{"kind":"number","nodeType":"YulLiteral","src":"2989:3:21","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2976:2:21"},"nodeType":"YulFunctionCall","src":"2976:17:21"},"nodeType":"YulIf","src":"2973:2:21"},{"nodeType":"YulAssignment","src":"3029:25:21","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"3042:8:21"},{"kind":"number","nodeType":"YulLiteral","src":"3052:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3038:3:21"},"nodeType":"YulFunctionCall","src":"3038:16:21"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"3029:5:21"}]},{"nodeType":"YulLeave","src":"3067:5:21"}]},"nodeType":"YulCase","src":"2952:130:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2957:1:21","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"2871:4:21"},"nodeType":"YulSwitch","src":"2864:218:21"},{"body":{"nodeType":"YulBlock","src":"3180:70:21","statements":[{"nodeType":"YulAssignment","src":"3194:28:21","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3207:4:21"},{"name":"exponent","nodeType":"YulIdentifier","src":"3213:8:21"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"3203:3:21"},"nodeType":"YulFunctionCall","src":"3203:19:21"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"3194:5:21"}]},{"nodeType":"YulLeave","src":"3235:5:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3104:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"3110:2:21","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3101:2:21"},"nodeType":"YulFunctionCall","src":"3101:12:21"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"3118:8:21"},{"kind":"number","nodeType":"YulLiteral","src":"3128:2:21","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3115:2:21"},"nodeType":"YulFunctionCall","src":"3115:16:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3097:3:21"},"nodeType":"YulFunctionCall","src":"3097:35:21"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3141:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"3147:3:21","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3138:2:21"},"nodeType":"YulFunctionCall","src":"3138:13:21"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"3156:8:21"},{"kind":"number","nodeType":"YulLiteral","src":"3166:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3153:2:21"},"nodeType":"YulFunctionCall","src":"3153:16:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3134:3:21"},"nodeType":"YulFunctionCall","src":"3134:36:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3094:2:21"},"nodeType":"YulFunctionCall","src":"3094:77:21"},"nodeType":"YulIf","src":"3091:2:21"},{"nodeType":"YulVariableDeclaration","src":"3259:57:21","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3301:4:21"},{"name":"exponent","nodeType":"YulIdentifier","src":"3307:8:21"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"3282:18:21"},"nodeType":"YulFunctionCall","src":"3282:34:21"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"3263:7:21","type":""},{"name":"base_1","nodeType":"YulTypedName","src":"3272:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3361:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3363:16:21"},"nodeType":"YulFunctionCall","src":"3363:18:21"},"nodeType":"YulExpressionStatement","src":"3363:18:21"}]},"condition":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"3331:7:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3348:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3344:3:21"},"nodeType":"YulFunctionCall","src":"3344:6:21"},{"name":"base_1","nodeType":"YulIdentifier","src":"3352:6:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3340:3:21"},"nodeType":"YulFunctionCall","src":"3340:19:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3328:2:21"},"nodeType":"YulFunctionCall","src":"3328:32:21"},"nodeType":"YulIf","src":"3325:2:21"},{"nodeType":"YulAssignment","src":"3392:29:21","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"3405:7:21"},{"name":"base_1","nodeType":"YulIdentifier","src":"3414:6:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3401:3:21"},"nodeType":"YulFunctionCall","src":"3401:20:21"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"3392:5:21"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"2651:4:21","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"2657:8:21","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"2670:5:21","type":""}],"src":"2621:806:21"},{"body":{"nodeType":"YulBlock","src":"3479:88:21","statements":[{"body":{"nodeType":"YulBlock","src":"3510:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3512:16:21"},"nodeType":"YulFunctionCall","src":"3512:18:21"},"nodeType":"YulExpressionStatement","src":"3512:18:21"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3495:5:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3506:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3502:3:21"},"nodeType":"YulFunctionCall","src":"3502:6:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3492:2:21"},"nodeType":"YulFunctionCall","src":"3492:17:21"},"nodeType":"YulIf","src":"3489:2:21"},{"nodeType":"YulAssignment","src":"3541:20:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3552:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3559:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3548:3:21"},"nodeType":"YulFunctionCall","src":"3548:13:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3541:3:21"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3461:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3471:3:21","type":""}],"src":"3432:135:21"},{"body":{"nodeType":"YulBlock","src":"3604:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3621:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3628:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3633:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3624:3:21"},"nodeType":"YulFunctionCall","src":"3624:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3614:6:21"},"nodeType":"YulFunctionCall","src":"3614:31:21"},"nodeType":"YulExpressionStatement","src":"3614:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3661:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3664:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3654:6:21"},"nodeType":"YulFunctionCall","src":"3654:15:21"},"nodeType":"YulExpressionStatement","src":"3654:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3685:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3688:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3678:6:21"},"nodeType":"YulFunctionCall","src":"3678:15:21"},"nodeType":"YulExpressionStatement","src":"3678:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"3572:127:21"},{"body":{"nodeType":"YulBlock","src":"3736:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3753:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3760:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3765:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3756:3:21"},"nodeType":"YulFunctionCall","src":"3756:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3746:6:21"},"nodeType":"YulFunctionCall","src":"3746:31:21"},"nodeType":"YulExpressionStatement","src":"3746:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3793:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3796:4:21","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3786:6:21"},"nodeType":"YulFunctionCall","src":"3786:15:21"},"nodeType":"YulExpressionStatement","src":"3786:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3817:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3820:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3810:6:21"},"nodeType":"YulFunctionCall","src":"3810:15:21"},"nodeType":"YulExpressionStatement","src":"3810:15:21"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"3704:127:21"},{"body":{"nodeType":"YulBlock","src":"3868:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3885:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3892:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3897:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3888:3:21"},"nodeType":"YulFunctionCall","src":"3888:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3878:6:21"},"nodeType":"YulFunctionCall","src":"3878:31:21"},"nodeType":"YulExpressionStatement","src":"3878:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3925:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3928:4:21","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3918:6:21"},"nodeType":"YulFunctionCall","src":"3918:15:21"},"nodeType":"YulExpressionStatement","src":"3918:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3949:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3952:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3942:6:21"},"nodeType":"YulFunctionCall","src":"3942:15:21"},"nodeType":"YulExpressionStatement","src":"3942:15:21"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"3836:127:21"},{"body":{"nodeType":"YulBlock","src":"4013:86:21","statements":[{"body":{"nodeType":"YulBlock","src":"4077:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4086:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4089:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4079:6:21"},"nodeType":"YulFunctionCall","src":"4079:12:21"},"nodeType":"YulExpressionStatement","src":"4079:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4036:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4047:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4062:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4067:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4058:3:21"},"nodeType":"YulFunctionCall","src":"4058:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"4071:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4054:3:21"},"nodeType":"YulFunctionCall","src":"4054:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4043:3:21"},"nodeType":"YulFunctionCall","src":"4043:31:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4033:2:21"},"nodeType":"YulFunctionCall","src":"4033:42:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4026:6:21"},"nodeType":"YulFunctionCall","src":"4026:50:21"},"nodeType":"YulIf","src":"4023:2:21"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4002:5:21","type":""}],"src":"3968:131:21"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_array_address_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 128)\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        let src := offset\n        if gt(add(offset, 128), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, 0x04) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_address_fromMemory(src))\n            let _1 := 0x20\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_array$_t_address_$4_memory_ptrt_array$_t_address_$4_memory_ptrt_contract$_IERC721_$2147t_contract$_IHegicOperationalTreasury_$4305t_contract$_IERC20_$822t_uint256t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8\n    {\n        if slt(sub(dataEnd, headStart), 480) { revert(0, 0) }\n        value0 := abi_decode_array_address_fromMemory(headStart, dataEnd)\n        value1 := abi_decode_array_address_fromMemory(add(headStart, 128), dataEnd)\n        let value := mload(add(headStart, 256))\n        validator_revert_address(value)\n        value2 := value\n        let value_1 := mload(add(headStart, 288))\n        validator_revert_address(value_1)\n        value3 := value_1\n        let value_2 := mload(add(headStart, 320))\n        validator_revert_address(value_2)\n        value4 := value_2\n        value5 := mload(add(headStart, 352))\n        value6 := mload(add(headStart, 384))\n        value7 := mload(add(headStart, 416))\n        value8 := mload(add(headStart, 448))\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040526127106002556a0fbce2c2bf9557000000006006556c0c9f2c9cd04674edea400000006007553480156200003757600080fd5b5060405162002ee538038062002ee58339810160408190526200005a91620002c4565b6200006533620001d0565b60005b6004811015620000e5576001600e60008c84600481106200008d576200008d620004cb565b602090810291909101516001600160a01b03168252810191909152604001600020805460ff19166001836002811115620000cb57620000cb620004b5565b021790555080620000dc8162000481565b91505062000068565b5060005b600481101562000166576002600e60008b84600481106200010e576200010e620004cb565b602090810291909101516001600160a01b03168252810191909152604001600020805460ff191660018360028111156200014c576200014c620004b5565b0217905550806200015d8162000481565b915050620000e9565b50600380546001600160a01b03808a166001600160a01b03199283161790925560048054898416908316179055600580549288169290911691909117905560088490556001839055620001bb82600a620003b6565b600955600a5550620004fa9650505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516200022d81620004e1565b919050565b600082601f8301126200024457600080fd5b604051608081016001600160401b03811182821017156200027557634e487b7160e01b600052604160045260246000fd5b6040528083608081018610156200028b57600080fd5b60005b6004811015620002b957620002a38262000220565b835260209283019291909101906001016200028e565b509195945050505050565b60008060008060008060008060006101e08a8c031215620002e457600080fd5b620002f08b8b62000232565b9850620003018b60808c0162000232565b97506101008a01516200031481620004e1565b6101208b01519097506200032881620004e1565b6101408b01519096506200033c81620004e1565b809550506101608a015193506101808a015192506101a08a015191506101c08a015190509295985092959850929598565b600181815b80851115620003ae5781600019048211156200039257620003926200049f565b80851615620003a057918102915b93841c939080029062000372565b509250929050565b6000620003c48383620003cb565b9392505050565b600082620003dc575060016200047b565b81620003eb575060006200047b565b81600181146200040457600281146200040f576200042f565b60019150506200047b565b60ff8411156200042357620004236200049f565b50506001821b6200047b565b5060208310610133831016604e8410600b841016171562000454575081810a6200047b565b6200046083836200036d565b80600019048211156200047757620004776200049f565b0290505b92915050565b60006000198214156200049857620004986200049f565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0381168114620004f757600080fd5b50565b6129db806200050a6000396000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c806366234ffa116101305780639d38d064116100b8578063d88c69101161007c578063d88c691014610593578063d8aed145146105a6578063e260d747146105b9578063f05735db146105c2578063f2fde38b146105d557600080fd5b80639d38d0641461053e5780639e3aa5b114610547578063b13de2661461055a578063b2016bd41461056d578063c37077091461058057600080fd5b80637c3a00fd116100ff5780637c3a00fd146104eb57806389a30271146104f45780638ac2edc1146105075780638da5cb5b1461051a578063913198721461052b57600080fd5b806366234ffa1461048b5780636c016c0014610494578063715018a6146104d05780637a3c4c17146104d857600080fd5b8063415f1240116101be5780634ddde78d116101825780634ddde78d14610440578063587a03c2146104495780635f84f3021461045c5780636198e3391461046f57806362965d8e1461048257600080fd5b8063415f1240146103eb578063425378b4146103fe5780634437152a14610407578063484f13711461041a57806349b274ed1461042d57600080fd5b806324a6665e1161020557806324a6665e146102b05780632cb2f33414610372578063333daaa014610385578063357bcef014610398578063365c7504146103c857600080fd5b806301d73641146102375780630833a6c61461024c5780630ecbcdab1461027257806316f0115b14610285575b600080fd5b61024a61024536600461280f565b6105e8565b005b61025f61025a36600461280f565b6108b6565b6040519081526020015b60405180910390f35b61024a610280366004612841565b6109bb565b600b54610298906001600160a01b031681565b6040516001600160a01b039091168152602001610269565b6103236102be36600461280f565b600c602090815260009182526040918290208054835160a08101855260018301546001600160a01b0390811682526002840154948201949094526003830154948101949094526004820154606085015260059091015460ff1615156080840152169082565b604080516001600160a01b0393841681528251909316602080850191909152820151838201528101516060808401919091528101516080808401919091520151151560a082015260c001610269565b61025f61038036600461280f565b611039565b61024a61039336600461280f565b61109f565b6103bb6103a6366004612705565b600e6020526000908152604090205460ff1681565b60405161026991906128cc565b6103db6103d636600461280f565b6113a0565b6040519015158152602001610269565b61024a6103f936600461280f565b6113f1565b61025f600a5481565b61024a610415366004612705565b611694565b61025f61042836600461280f565b6116be565b6103db61043b36600461280f565b611727565b61025f60095481565b61024a61045736600461280f565b611754565b61024a61046a36600461280f565b611761565b61024a61047d36600461280f565b61176e565b61025f60015481565b61025f60075481565b6104bb6104a236600461280f565b600d602052600090815260409020805460019091015482565b60408051928352602083019190915201610269565b61024a611869565b61025f6104e636600461280f565b61187d565b61025f60065481565b600554610298906001600160a01b031681565b61024a61051536600461280f565b611988565b6000546001600160a01b0316610298565b600454610298906001600160a01b031681565b61025f60025481565b61025f61055536600461280f565b611eb3565b61024a61056836600461280f565b611ede565b600354610298906001600160a01b031681565b61024a61058e36600461280f565b611f2d565b61025f6105a136600461280f565b611f3a565b61024a6105b4366004612841565b6120f7565b61025f60085481565b61025f6105d036600461280f565b6123e5565b61024a6105e3366004612705565b612539565b6000818152600c6020526040902060040154610607906107089061294d565b421161061257600080fd5b6000818152600d602052604081209061062a836108b6565b9050610635836125b2565b815460009082111561079a57825461064d908361294d565b600554600b549192506001600160a01b039081169163a9059cbb9116606461067685605a61292e565b610680919061290c565b865461068c91906128f4565b6040518363ffffffff1660e01b81526004016106a99291906128b3565b602060405180830381600087803b1580156106c357600080fd5b505af11580156106d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fb919061273f565b506005546001600160a01b031663a9059cbb33606461071b85600a61292e565b610725919061290c565b6040518363ffffffff1660e01b81526004016107429291906128b3565b602060405180830381600087803b15801561075c57600080fd5b505af1158015610770573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610794919061273f565b50610824565b600554600b5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926107d09291169086906004016128b3565b602060405180830381600087803b1580156107ea57600080fd5b505af11580156107fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610822919061273f565b505b6000848152600c6020526040902054835485916001600160a01b0316907f7510f2e218f218a66429c54a712775c000c398117e38b240be7ef52310a51e8290606461087086605a61292e565b61087a919061290c565b606461088787600a61292e565b610891919061290c565b604080519384526020840192909252908201526060015b60405180910390a350505050565b60048054604051633755269b60e01b815291820183905260009182916001600160a01b031690633755269b9060240160a06040518083038186803b1580156108fd57600080fd5b505afa158015610911573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109359190612761565b5050604051637632bffb60e01b815260048101879052919350506001600160a01b0383169150637632bffb9060240160206040518083038186803b15801561097c57600080fd5b505afa158015610990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b49190612828565b9392505050565b600b60009054906101000a90046001600160a01b03166001600160a01b031663ae3050e16040518163ffffffff1660e01b815260040160206040518083038186803b158015610a0957600080fd5b505afa158015610a1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a41919061273f565b610a825760405162461bcd60e51b815260206004820152600d60248201526c1c185d5cd95119511953195b99609a1b60448201526064015b60405180910390fd5b6000828152600d6020526040812090610a9a84611eb3565b60048054604051633755269b60e01b81529182018790529192506000916001600160a01b031690633755269b9060240160a06040518083038186803b158015610ae257600080fd5b505afa158015610af6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1a9190612761565b5050505090506000600b60009054906101000a90046001600160a01b03166001600160a01b03166312b583496040518163ffffffff1660e01b815260040160206040518083038186803b158015610b7057600080fd5b505afa158015610b84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba89190612828565b9050600854851015610bfc5760405162461bcd60e51b815260206004820152601a60248201527f616d6f756e74206c657373206d696e426f72726f774c696d69740000000000006044820152606401610a79565b83548390610c0a90876128f4565b1115610c645760405162461bcd60e51b8152602060048201526024808201527f616d6f756e74202b20646174612e626f72726f776564206c657373206d61784c6044820152631a5b5a5d60e21b6064820152608401610a79565b6001826001811115610c7857610c7861297a565b14610cb55760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420737461746560981b6044820152606401610a79565b6000868152600c60205260409020546001600160a01b03163314610d135760405162461bcd60e51b81526020600482015260156024820152743cb7ba9030b932903737ba103a34329037bbb732b960591b6044820152606401610a79565b80851115610d715760405162461bcd60e51b815260206004820152602560248201527f7468657265206973206e6f7420656e6f756768206d6f6e657920696e20746865604482015264081c1bdbdb60da1b6064820152608401610a79565b6000868152600c6020526040902060040154610d9090610e109061294d565b421115610dca5760405162461bcd60e51b8152602060048201526008602482015267746f6f206c61746560c01b6044820152606401610a79565b6000868152600c602052604090206005015460ff1615610e3f57610ded866123e5565b610df68761187d565b11610e3a5760405162461bcd60e51b815260206004820152601460248201527374686520707269636520697320746f6f206c6f7760601b6044820152606401610a79565b610e96565b610e48866123e5565b610e518761187d565b10610e965760405162461bcd60e51b81526020600482015260156024820152740e8d0ca40e0e4d2c6ca40d2e640e8dede40d0d2ced605b1b6044820152606401610a79565b6000610ea1876116be565b9050604051806040016040528082876000015489610ebf91906128f4565b610ec991906128f4565b8152426020918201526000898152600d82526040902082518155910151600190910155600b546001600160a01b0316632bc355ca610f0783896128f4565b6040518263ffffffff1660e01b8152600401610f2591815260200190565b600060405180830381600087803b158015610f3f57600080fd5b505af1158015610f53573d6000803e3d6000fd5b5050600b5460008a8152600c602052604090819020549051633419e74d60e21b81526001600160a01b03928316945063d0679d349350610f9b92909116908a906004016128b3565b600060405180830381600087803b158015610fb557600080fd5b505af1158015610fc9573d6000803e3d6000fd5b5050506000888152600c60209081526040918290206001015482518a81526001600160a01b03909116918101919091524281830152905189925033917f1fdbee5d1bd2901710e8945918b1a052ce67662661a2ccbf68420e4e430f8dab919081900360600190a350505050505050565b6000818152600c60205260408120600581015460ff161561107e5761105d83611f3a565b611066846123e5565b1115611075576109b4836123e5565b6109b483611f3a565b61108783611f3a565b611090846123e5565b1015611075576109b4836123e5565b6110a8816113a0565b6110e45760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420707269636560981b6044820152606401610a79565b6000818152600d60205260408120906110fc836108b6565b9050611107836125b2565b600554600b54835460405163a9059cbb60e01b81526001600160a01b039384169363a9059cbb9361113d939116916004016128b3565b602060405180830381600087803b15801561115757600080fd5b505af115801561116b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118f919061273f565b506005546000848152600c602052604090205483546001600160a01b039283169263a9059cbb9216906064906111c690600a61292e565b6111d0919061290c565b85546111dc91906128f4565b6111e6908561294d565b6040518363ffffffff1660e01b81526004016112039291906128b3565b602060405180830381600087803b15801561121d57600080fd5b505af1158015611231573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611255919061273f565b5060055482546001600160a01b039091169063a9059cbb90339060649061127d90600a61292e565b611287919061290c565b6040518363ffffffff1660e01b81526004016112a49291906128b3565b602060405180830381600087803b1580156112be57600080fd5b505af11580156112d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f6919061273f565b506000838152600c6020526040902054825484916001600160a01b0316907ff28455920a5bcb3aeff7a6bbdd4fed497e6f159330fe161026128b5c381bdd909060649061134490600a61292e565b61134e919061290c565b855461135a91906128f4565b611364908561294d565b8554606461137382600a61292e565b61137d919061290c565b6040805193845260208401929092529082015260600160405180910390a3505050565b6000818152600c60205260408120600581015460ff16156113d6576113c4836123e5565b6113cd8461187d565b11159392505050565b6113df836123e5565b6113e88461187d565b10159392505050565b6113fa81611727565b6114365760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420707269636560981b6044820152606401610a79565b6000818152600d602052604081209061144e836108b6565b9050611459836125b2565b81546000908211156115be578254611471908361294d565b600554600b549192506001600160a01b039081169163a9059cbb9116606461149a85605a61292e565b6114a4919061290c565b86546114b091906128f4565b6040518363ffffffff1660e01b81526004016114cd9291906128b3565b602060405180830381600087803b1580156114e757600080fd5b505af11580156114fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151f919061273f565b506005546001600160a01b031663a9059cbb33606461153f85600a61292e565b611549919061290c565b6040518363ffffffff1660e01b81526004016115669291906128b3565b602060405180830381600087803b15801561158057600080fd5b505af1158015611594573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b8919061273f565b50611648565b600554600b5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926115f49291169086906004016128b3565b602060405180830381600087803b15801561160e57600080fd5b505af1158015611622573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611646919061273f565b505b6000848152600c6020526040902054835485916001600160a01b0316907f4e91025e01b2329df1ec1067d27aafec4d1c41f682ccd794dee04321e0b1e8dc90606461087086605a61292e565b61169c612625565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6000818152600d6020526040812060018101548290603c906116e0904261294d565b6116ea919061290c565b9050600754600654826116fd919061292e565b835461170b9060649061290c565b611715919061292e565b61171f919061290c565b949350505050565b6000818152600c60205260408120600581015460ff161561174b576113c483611f3a565b6113df83611f3a565b61175c612625565b600755565b611769612625565b600655565b6000818152600d6020526040902054156117be5760405162461bcd60e51b81526020600482015260116024820152701bdc1d1a5bdb881a5cc8189b1bd8dad959607a1b6044820152606401610a79565b6003546000828152600c6020526040908190205490516323b872dd60e01b81523060048201526001600160a01b039182166024820152604481018490529116906323b872dd90606401600060405180830381600087803b15801561182157600080fd5b505af1158015611835573d6000803e3d6000fd5b50506040518392503391507f6381d9813cabeb57471b5a7e05078e64845ccdb563146a6911d536f24ce960f190600090a350565b611871612625565b61187b600061267f565b565b6000818152600c6020908152604080832060018101548251635c4443cf60e11b81529251919385936001600160a01b039092169263b888879e926004808201939291829003018186803b1580156118d357600080fd5b505afa1580156118e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061190b9190612722565b6001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561194357600080fd5b505afa158015611957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061197b9190612863565b5091979650505050505050565b600b60009054906101000a90046001600160a01b03166001600160a01b031663ae3050e16040518163ffffffff1660e01b815260040160206040518083038186803b1580156119d657600080fd5b505afa1580156119ea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a0e919061273f565b611a4a5760405162461bcd60e51b815260206004820152600d60248201526c1c185d5cd95119511953195b99609a1b6044820152606401610a79565b60048054604051633755269b60e01b8152918201839052600091829182916001600160a01b0390911690633755269b9060240160a06040518083038186803b158015611a9557600080fd5b505afa158015611aa9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611acd9190612761565b9450505092509250610e108163ffffffff16611ae9919061294d565b421115611b235760405162461bcd60e51b8152602060048201526008602482015267746f6f206c61746560c01b6044820152606401610a79565b6040516335b2346d60e21b81526004810185905260009081906001600160a01b0385169063d6c8d1b490602401604080518083038186803b158015611b6757600080fd5b505afa158015611b7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9f91906127dc565b90925090506001856001811115611bb857611bb861297a565b14611bf85760405162461bcd60e51b815260206004820152601060248201526f6f7074696f6e2069732061637469766560801b6044820152606401610a79565b6003546040516331a9108f60e11b81526004810188905233916001600160a01b031690636352211e9060240160206040518083038186803b158015611c3c57600080fd5b505afa158015611c50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c749190612722565b6001600160a01b031614611cba5760405162461bcd60e51b815260206004820152600d60248201526c3cb7ba903737ba1037bbb732b960991b6044820152606401610a79565b6001600160a01b0384166000908152600e602052604081205460ff166002811115611ce757611ce761297a565b1415611d2e5760405162461bcd60e51b81526020600482015260166024820152751cdd1c985d1959de481b9bdd081cdd5c1c1bdc9d195960521b6044820152606401610a79565b6003546040516323b872dd60e01b8152336004820152306024820152604481018890526001600160a01b03909116906323b872dd90606401600060405180830381600087803b158015611d8057600080fd5b505af1158015611d94573d6000803e3d6000fd5b506000925060019150611da49050565b6001600160a01b0386166000908152600e602052604090205460ff166002811115611dd157611dd161297a565b14611ddd576000611de0565b60015b604080518082018252338152815160a0810183526001600160a01b0398891681526001600160801b03968716602082810191909152959096168683015263ffffffff9096166060808701919091529115156080808701919091528487019586526000998a52600c855298819020955186549088166001600160a01b03199182161787559451805160018801805491909916961695909517909655918301516002850155509281015160038301559182015160048201559201516005909201805492151560ff199093169290921790915550565b6000600154600254611ec4846108b6565b611ece919061290c565b611ed8919061292e565b92915050565b611ee6612625565b611f40811115611f285760405162461bcd60e51b815260206004820152600d60248201526c696e76616c69642076616c756560981b6044820152606401610a79565b600155565b611f35612625565b600855565b6000818152600d60209081526040808320600c909252808320600480549251633755269b60e01b8152908101869052909184916001600160a01b0390911690633755269b9060240160a06040518083038186803b158015611f9a57600080fd5b505afa158015611fae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fd29190612761565b505050915050600080826001600160a01b031663d6c8d1b4886040518263ffffffff1660e01b815260040161200991815260200190565b604080518083038186803b15801561202057600080fd5b505afa158015612034573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061205891906127dc565b6005860154919350915060ff16156120b65760095485546001600160801b038416916120839161292e565b61208d919061290c565b61209890607861292e565b6120ab906001600160801b0383166128f4565b979650505050505050565b60095485546001600160801b038416916120cf9161292e565b6120d9919061290c565b6120e490607861292e565b6120ab906001600160801b03831661294d565b6000828152600d60205260409020546121445760405162461bcd60e51b815260206004820152600f60248201526e1bdc1d1a5bdb881c995919595b5959608a1b6044820152606401610a79565b600061214f836116be565b6000848152600d602052604090205490915061216c9082906128f4565b8211156121ad5760405162461bcd60e51b815260206004820152600f60248201526e1d1bdbc81b5d58da08185b5bdd5b9d608a1b6044820152606401610a79565b6000838152600c60205260409020546001600160a01b031633146121d057600080fd5b6000838152600d602052604081205483906121ec9084906128f4565b6121f6919061294d565b600b549091506001600160a01b0316631b45a68d612214848661294d565b6040518263ffffffff1660e01b815260040161223291815260200190565b600060405180830381600087803b15801561224c57600080fd5b505af1158015612260573d6000803e3d6000fd5b505060408051808201825284815242602080830191825260008a8152600d8252848120935184559151600190930192909255600554600c9092528290205491516323b872dd60e01b81526001600160a01b03928316600482015230602482015260448101889052911692506323b872dd9150606401602060405180830381600087803b1580156122ef57600080fd5b505af1158015612303573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612327919061273f565b50600554600b5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb9261235e9291169087906004016128b3565b602060405180830381600087803b15801561237857600080fd5b505af115801561238c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123b0919061273f565b50604051838152849033907f77c6871227e5d2dec8dadd5354f78453203e22e669cd0ec4c19d9a8c5edb31d0906020016108a8565b60048054604051633755269b60e01b815291820183905260009182916001600160a01b031690633755269b9060240160a06040518083038186803b15801561242c57600080fd5b505afa158015612440573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124649190612761565b50506040516335b2346d60e21b81526004810187905291935060009250506001600160a01b0383169063d6c8d1b490602401604080518083038186803b1580156124ad57600080fd5b505afa1580156124c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124e591906127dc565b6000868152600c602052604090206005015490925060ff16159050612528576064600a54606461251591906128f4565b611715906001600160801b03841661292e565b6064600a546064612515919061294d565b612541612625565b6001600160a01b0381166125a65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610a79565b6125af8161267f565b50565b6000818152600c6020526040908190206001810154915163b07f0a4160e01b81526004810184905290916001600160a01b03169063b07f0a4190602401600060405180830381600087803b15801561260957600080fd5b505af115801561261d573d6000803e3d6000fd5b505050505050565b6000546001600160a01b0316331461187b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a79565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160801b03811681146126e657600080fd5b919050565b805169ffffffffffffffffffff811681146126e657600080fd5b60006020828403121561271757600080fd5b81356109b481612990565b60006020828403121561273457600080fd5b81516109b481612990565b60006020828403121561275157600080fd5b815180151581146109b457600080fd5b600080600080600060a0868803121561277957600080fd5b85516002811061278857600080fd5b602087015190955061279981612990565b93506127a7604087016126cf565b92506127b5606087016126cf565b9150608086015163ffffffff811681146127ce57600080fd5b809150509295509295909350565b600080604083850312156127ef57600080fd5b6127f8836126cf565b9150612806602084016126cf565b90509250929050565b60006020828403121561282157600080fd5b5035919050565b60006020828403121561283a57600080fd5b5051919050565b6000806040838503121561285457600080fd5b50508035926020909101359150565b600080600080600060a0868803121561287b57600080fd5b612884866126eb565b94506020860151935060408601519250606086015191506128a7608087016126eb565b90509295509295909350565b6001600160a01b03929092168252602082015260400190565b60208101600383106128ee57634e487b7160e01b600052602160045260246000fd5b91905290565b6000821982111561290757612907612964565b500190565b60008261292957634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561294857612948612964565b500290565b60008282101561295f5761295f612964565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b6001600160a01b03811681146125af57600080fdfea264697066735822122002cd4ba8347dc5f014920eeec25a24c97faf00e60a855779278672fd57480c8c64736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x2710 PUSH1 0x2 SSTORE PUSH11 0xFBCE2C2BF955700000000 PUSH1 0x6 SSTORE PUSH13 0xC9F2C9CD04674EDEA40000000 PUSH1 0x7 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2EE5 CODESIZE SUB DUP1 PUSH3 0x2EE5 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x5A SWAP2 PUSH3 0x2C4 JUMP JUMPDEST PUSH3 0x65 CALLER PUSH3 0x1D0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH3 0xE5 JUMPI PUSH1 0x1 PUSH1 0xE PUSH1 0x0 DUP13 DUP5 PUSH1 0x4 DUP2 LT PUSH3 0x8D JUMPI PUSH3 0x8D PUSH3 0x4CB JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0xCB JUMPI PUSH3 0xCB PUSH3 0x4B5 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP DUP1 PUSH3 0xDC DUP2 PUSH3 0x481 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x68 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH3 0x166 JUMPI PUSH1 0x2 PUSH1 0xE PUSH1 0x0 DUP12 DUP5 PUSH1 0x4 DUP2 LT PUSH3 0x10E JUMPI PUSH3 0x10E PUSH3 0x4CB JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x14C JUMPI PUSH3 0x14C PUSH3 0x4B5 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP DUP1 PUSH3 0x15D DUP2 PUSH3 0x481 JUMP JUMPDEST SWAP2 POP POP PUSH3 0xE9 JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x4 DUP1 SLOAD DUP10 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP3 DUP9 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x8 DUP5 SWAP1 SSTORE PUSH1 0x1 DUP4 SWAP1 SSTORE PUSH3 0x1BB DUP3 PUSH1 0xA PUSH3 0x3B6 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0xA SSTORE POP PUSH3 0x4FA SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH3 0x22D DUP2 PUSH3 0x4E1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH3 0x275 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0x80 DUP2 ADD DUP7 LT ISZERO PUSH3 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH3 0x2B9 JUMPI PUSH3 0x2A3 DUP3 PUSH3 0x220 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH3 0x28E JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1E0 DUP11 DUP13 SUB SLT ISZERO PUSH3 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2F0 DUP12 DUP12 PUSH3 0x232 JUMP JUMPDEST SWAP9 POP PUSH3 0x301 DUP12 PUSH1 0x80 DUP13 ADD PUSH3 0x232 JUMP JUMPDEST SWAP8 POP PUSH2 0x100 DUP11 ADD MLOAD PUSH3 0x314 DUP2 PUSH3 0x4E1 JUMP JUMPDEST PUSH2 0x120 DUP12 ADD MLOAD SWAP1 SWAP8 POP PUSH3 0x328 DUP2 PUSH3 0x4E1 JUMP JUMPDEST PUSH2 0x140 DUP12 ADD MLOAD SWAP1 SWAP7 POP PUSH3 0x33C DUP2 PUSH3 0x4E1 JUMP JUMPDEST DUP1 SWAP6 POP POP PUSH2 0x160 DUP11 ADD MLOAD SWAP4 POP PUSH2 0x180 DUP11 ADD MLOAD SWAP3 POP PUSH2 0x1A0 DUP11 ADD MLOAD SWAP2 POP PUSH2 0x1C0 DUP11 ADD MLOAD SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x3AE JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x392 JUMPI PUSH3 0x392 PUSH3 0x49F JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x3A0 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x372 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3C4 DUP4 DUP4 PUSH3 0x3CB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x3DC JUMPI POP PUSH1 0x1 PUSH3 0x47B JUMP JUMPDEST DUP2 PUSH3 0x3EB JUMPI POP PUSH1 0x0 PUSH3 0x47B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x404 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x40F JUMPI PUSH3 0x42F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x47B JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x423 JUMPI PUSH3 0x423 PUSH3 0x49F JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x47B JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x454 JUMPI POP DUP2 DUP2 EXP PUSH3 0x47B JUMP JUMPDEST PUSH3 0x460 DUP4 DUP4 PUSH3 0x36D JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x477 JUMPI PUSH3 0x477 PUSH3 0x49F JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH3 0x498 JUMPI PUSH3 0x498 PUSH3 0x49F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x4F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x29DB DUP1 PUSH3 0x50A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x232 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x66234FFA GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x9D38D064 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD88C6910 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD88C6910 EQ PUSH2 0x593 JUMPI DUP1 PUSH4 0xD8AED145 EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0xE260D747 EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0xF05735DB EQ PUSH2 0x5C2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9D38D064 EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0x9E3AA5B1 EQ PUSH2 0x547 JUMPI DUP1 PUSH4 0xB13DE266 EQ PUSH2 0x55A JUMPI DUP1 PUSH4 0xB2016BD4 EQ PUSH2 0x56D JUMPI DUP1 PUSH4 0xC3707709 EQ PUSH2 0x580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7C3A00FD GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x7C3A00FD EQ PUSH2 0x4EB JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x4F4 JUMPI DUP1 PUSH4 0x8AC2EDC1 EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0x91319872 EQ PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x66234FFA EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0x6C016C00 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0x7A3C4C17 EQ PUSH2 0x4D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x415F1240 GT PUSH2 0x1BE JUMPI DUP1 PUSH4 0x4DDDE78D GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x4DDDE78D EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x587A03C2 EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0x5F84F302 EQ PUSH2 0x45C JUMPI DUP1 PUSH4 0x6198E339 EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0x62965D8E EQ PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x415F1240 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0x425378B4 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x4437152A EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0x484F1371 EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0x49B274ED EQ PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x24A6665E GT PUSH2 0x205 JUMPI DUP1 PUSH4 0x24A6665E EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x2CB2F334 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x333DAAA0 EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0x357BCEF0 EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0x365C7504 EQ PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1D73641 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x833A6C6 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xECBCDAB EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x16F0115B EQ PUSH2 0x285 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24A PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x5E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25F PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0x2841 JUMP JUMPDEST PUSH2 0x9BB JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x298 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x269 JUMP JUMPDEST PUSH2 0x323 PUSH2 0x2BE CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD PUSH1 0xA0 DUP2 ADD DUP6 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x2 DUP5 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP4 ADD SLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE DUP3 MLOAD SWAP1 SWAP4 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 ADD MLOAD DUP4 DUP3 ADD MSTORE DUP2 ADD MLOAD PUSH1 0x60 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 ADD MLOAD PUSH1 0x80 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD MLOAD ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x269 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x380 CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x1039 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x393 CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x109F JUMP JUMPDEST PUSH2 0x3BB PUSH2 0x3A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2705 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x28CC JUMP JUMPDEST PUSH2 0x3DB PUSH2 0x3D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x269 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x3F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x13F1 JUMP JUMPDEST PUSH2 0x25F PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x415 CALLDATASIZE PUSH1 0x4 PUSH2 0x2705 JUMP JUMPDEST PUSH2 0x1694 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x428 CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x3DB PUSH2 0x43B CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x1727 JUMP JUMPDEST PUSH2 0x25F PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x457 CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x1754 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x46A CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x1761 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x47D CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x176E JUMP JUMPDEST PUSH2 0x25F PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x25F PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4BB PUSH2 0x4A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x269 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x1869 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x4E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x187D JUMP JUMPDEST PUSH2 0x25F PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x298 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x515 CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x1988 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x298 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x298 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x25F PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x555 CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x1EB3 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x568 CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x1EDE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x298 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x58E CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x25F PUSH2 0x5A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0x24A PUSH2 0x5B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2841 JUMP JUMPDEST PUSH2 0x20F7 JUMP JUMPDEST PUSH2 0x25F PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x5D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x23E5 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x5E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2705 JUMP JUMPDEST PUSH2 0x2539 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x607 SWAP1 PUSH2 0x708 SWAP1 PUSH2 0x294D JUMP JUMPDEST TIMESTAMP GT PUSH2 0x612 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x62A DUP4 PUSH2 0x8B6 JUMP JUMPDEST SWAP1 POP PUSH2 0x635 DUP4 PUSH2 0x25B2 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 GT ISZERO PUSH2 0x79A JUMPI DUP3 SLOAD PUSH2 0x64D SWAP1 DUP4 PUSH2 0x294D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xB SLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 PUSH4 0xA9059CBB SWAP2 AND PUSH1 0x64 PUSH2 0x676 DUP6 PUSH1 0x5A PUSH2 0x292E JUMP JUMPDEST PUSH2 0x680 SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST DUP7 SLOAD PUSH2 0x68C SWAP2 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A9 SWAP3 SWAP2 SWAP1 PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6FB SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH1 0x64 PUSH2 0x71B DUP6 PUSH1 0xA PUSH2 0x292E JUMP JUMPDEST PUSH2 0x725 SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x742 SWAP3 SWAP2 SWAP1 PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x75C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x770 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x794 SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST POP PUSH2 0x824 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH2 0x7D0 SWAP3 SWAP2 AND SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x822 SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 SLOAD DUP6 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x7510F2E218F218A66429C54A712775C000C398117E38B240BE7EF52310A51E82 SWAP1 PUSH1 0x64 PUSH2 0x870 DUP7 PUSH1 0x5A PUSH2 0x292E JUMP JUMPDEST PUSH2 0x87A SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST PUSH1 0x64 PUSH2 0x887 DUP8 PUSH1 0xA PUSH2 0x292E JUMP JUMPDEST PUSH2 0x891 SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3755269B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x3755269B SWAP1 PUSH1 0x24 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x911 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x935 SWAP2 SWAP1 PUSH2 0x2761 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x7632BFFB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE SWAP2 SWAP4 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 POP PUSH4 0x7632BFFB SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x97C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x990 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B4 SWAP2 SWAP1 PUSH2 0x2828 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAE3050E1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA1D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA41 SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST PUSH2 0xA82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1C185D5CD95119511953195B99 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0xA9A DUP5 PUSH2 0x1EB3 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3755269B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x3755269B SWAP1 PUSH1 0x24 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAF6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB1A SWAP2 SWAP1 PUSH2 0x2761 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x12B58349 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB84 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA8 SWAP2 SWAP1 PUSH2 0x2828 JUMP JUMPDEST SWAP1 POP PUSH1 0x8 SLOAD DUP6 LT ISZERO PUSH2 0xBFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616D6F756E74206C657373206D696E426F72726F774C696D6974000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST DUP4 SLOAD DUP4 SWAP1 PUSH2 0xC0A SWAP1 DUP8 PUSH2 0x28F4 JUMP JUMPDEST GT ISZERO PUSH2 0xC64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x616D6F756E74202B20646174612E626F72726F776564206C657373206D61784C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1A5B5A5D PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xC78 JUMPI PUSH2 0xC78 PUSH2 0x297A JUMP JUMPDEST EQ PUSH2 0xCB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x696E76616C6964207374617465 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x3CB7BA9030B932903737BA103A34329037BBB732B9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xD71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7468657265206973206E6F7420656E6F756768206D6F6E657920696E20746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x81C1BDBDB PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0xD90 SWAP1 PUSH2 0xE10 SWAP1 PUSH2 0x294D JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0xDCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x746F6F206C617465 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE3F JUMPI PUSH2 0xDED DUP7 PUSH2 0x23E5 JUMP JUMPDEST PUSH2 0xDF6 DUP8 PUSH2 0x187D JUMP JUMPDEST GT PUSH2 0xE3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x74686520707269636520697320746F6F206C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH2 0xE96 JUMP JUMPDEST PUSH2 0xE48 DUP7 PUSH2 0x23E5 JUMP JUMPDEST PUSH2 0xE51 DUP8 PUSH2 0x187D JUMP JUMPDEST LT PUSH2 0xE96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0xE8D0CA40E0E4D2C6CA40D2E640E8DEDE40D0D2CED PUSH1 0x5B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA1 DUP8 PUSH2 0x16BE JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP8 PUSH1 0x0 ADD SLOAD DUP10 PUSH2 0xEBF SWAP2 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST PUSH2 0xEC9 SWAP2 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST DUP2 MSTORE TIMESTAMP PUSH1 0x20 SWAP2 DUP3 ADD MSTORE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0xD DUP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 MLOAD DUP2 SSTORE SWAP2 ADD MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2BC355CA PUSH2 0xF07 DUP4 DUP10 PUSH2 0x28F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF25 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0xB SLOAD PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x3419E74D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP5 POP PUSH4 0xD0679D34 SWAP4 POP PUSH2 0xF9B SWAP3 SWAP1 SWAP2 AND SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 MLOAD DUP11 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE TIMESTAMP DUP2 DUP4 ADD MSTORE SWAP1 MLOAD DUP10 SWAP3 POP CALLER SWAP2 PUSH32 0x1FDBEE5D1BD2901710E8945918B1A052CE67662661A2CCBF68420E4E430F8DAB SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x107E JUMPI PUSH2 0x105D DUP4 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0x1066 DUP5 PUSH2 0x23E5 JUMP JUMPDEST GT ISZERO PUSH2 0x1075 JUMPI PUSH2 0x9B4 DUP4 PUSH2 0x23E5 JUMP JUMPDEST PUSH2 0x9B4 DUP4 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0x1087 DUP4 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0x1090 DUP5 PUSH2 0x23E5 JUMP JUMPDEST LT ISZERO PUSH2 0x1075 JUMPI PUSH2 0x9B4 DUP4 PUSH2 0x23E5 JUMP JUMPDEST PUSH2 0x10A8 DUP2 PUSH2 0x13A0 JUMP JUMPDEST PUSH2 0x10E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x696E76616C6964207072696365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x10FC DUP4 PUSH2 0x8B6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1107 DUP4 PUSH2 0x25B2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xB SLOAD DUP4 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH2 0x113D SWAP4 SWAP2 AND SWAP2 PUSH1 0x4 ADD PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x116B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x118F SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0xA9059CBB SWAP3 AND SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x11C6 SWAP1 PUSH1 0xA PUSH2 0x292E JUMP JUMPDEST PUSH2 0x11D0 SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST DUP6 SLOAD PUSH2 0x11DC SWAP2 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST PUSH2 0x11E6 SWAP1 DUP6 PUSH2 0x294D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1203 SWAP3 SWAP2 SWAP1 PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x121D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1231 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1255 SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST POP PUSH1 0x5 SLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 CALLER SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x127D SWAP1 PUSH1 0xA PUSH2 0x292E JUMP JUMPDEST PUSH2 0x1287 SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A4 SWAP3 SWAP2 SWAP1 PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12F6 SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SLOAD DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xF28455920A5BCB3AEFF7A6BBDD4FED497E6F159330FE161026128B5C381BDD90 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x1344 SWAP1 PUSH1 0xA PUSH2 0x292E JUMP JUMPDEST PUSH2 0x134E SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST DUP6 SLOAD PUSH2 0x135A SWAP2 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST PUSH2 0x1364 SWAP1 DUP6 PUSH2 0x294D JUMP JUMPDEST DUP6 SLOAD PUSH1 0x64 PUSH2 0x1373 DUP3 PUSH1 0xA PUSH2 0x292E JUMP JUMPDEST PUSH2 0x137D SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x13D6 JUMPI PUSH2 0x13C4 DUP4 PUSH2 0x23E5 JUMP JUMPDEST PUSH2 0x13CD DUP5 PUSH2 0x187D JUMP JUMPDEST GT ISZERO SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x13DF DUP4 PUSH2 0x23E5 JUMP JUMPDEST PUSH2 0x13E8 DUP5 PUSH2 0x187D JUMP JUMPDEST LT ISZERO SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x13FA DUP2 PUSH2 0x1727 JUMP JUMPDEST PUSH2 0x1436 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x696E76616C6964207072696365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x144E DUP4 PUSH2 0x8B6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1459 DUP4 PUSH2 0x25B2 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 GT ISZERO PUSH2 0x15BE JUMPI DUP3 SLOAD PUSH2 0x1471 SWAP1 DUP4 PUSH2 0x294D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xB SLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 PUSH4 0xA9059CBB SWAP2 AND PUSH1 0x64 PUSH2 0x149A DUP6 PUSH1 0x5A PUSH2 0x292E JUMP JUMPDEST PUSH2 0x14A4 SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST DUP7 SLOAD PUSH2 0x14B0 SWAP2 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14CD SWAP3 SWAP2 SWAP1 PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x151F SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH1 0x64 PUSH2 0x153F DUP6 PUSH1 0xA PUSH2 0x292E JUMP JUMPDEST PUSH2 0x1549 SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1566 SWAP3 SWAP2 SWAP1 PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1594 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15B8 SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST POP PUSH2 0x1648 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH2 0x15F4 SWAP3 SWAP2 AND SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x160E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1622 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1646 SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 SLOAD DUP6 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x4E91025E01B2329DF1EC1067D27AAFEC4D1C41F682CCD794DEE04321E0B1E8DC SWAP1 PUSH1 0x64 PUSH2 0x870 DUP7 PUSH1 0x5A PUSH2 0x292E JUMP JUMPDEST PUSH2 0x169C PUSH2 0x2625 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD DUP3 SWAP1 PUSH1 0x3C SWAP1 PUSH2 0x16E0 SWAP1 TIMESTAMP PUSH2 0x294D JUMP JUMPDEST PUSH2 0x16EA SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP3 PUSH2 0x16FD SWAP2 SWAP1 PUSH2 0x292E JUMP JUMPDEST DUP4 SLOAD PUSH2 0x170B SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x290C JUMP JUMPDEST PUSH2 0x1715 SWAP2 SWAP1 PUSH2 0x292E JUMP JUMPDEST PUSH2 0x171F SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x174B JUMPI PUSH2 0x13C4 DUP4 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0x13DF DUP4 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0x175C PUSH2 0x2625 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH2 0x1769 PUSH2 0x2625 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x17BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1BDC1D1A5BDB881A5CC8189B1BD8DAD959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1821 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1835 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP4 SWAP3 POP CALLER SWAP2 POP PUSH32 0x6381D9813CABEB57471B5A7E05078E64845CCDB563146A6911D536F24CE960F1 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x1871 PUSH2 0x2625 JUMP JUMPDEST PUSH2 0x187B PUSH1 0x0 PUSH2 0x267F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD DUP3 MLOAD PUSH4 0x5C4443CF PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 MLOAD SWAP2 SWAP4 DUP6 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0xB888879E SWAP3 PUSH1 0x4 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x190B SWAP2 SWAP1 PUSH2 0x2722 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1943 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1957 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x197B SWAP2 SWAP1 PUSH2 0x2863 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAE3050E1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A0E SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST PUSH2 0x1A4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1C185D5CD95119511953195B99 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3755269B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x3755269B SWAP1 PUSH1 0x24 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AA9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1ACD SWAP2 SWAP1 PUSH2 0x2761 JUMP JUMPDEST SWAP5 POP POP POP SWAP3 POP SWAP3 POP PUSH2 0xE10 DUP2 PUSH4 0xFFFFFFFF AND PUSH2 0x1AE9 SWAP2 SWAP1 PUSH2 0x294D JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x1B23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x746F6F206C617465 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x35B2346D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xD6C8D1B4 SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B9F SWAP2 SWAP1 PUSH2 0x27DC JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 DUP6 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1BB8 JUMPI PUSH2 0x1BB8 PUSH2 0x297A JUMP JUMPDEST EQ PUSH2 0x1BF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x6F7074696F6E20697320616374697665 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C50 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C74 SWAP2 SWAP1 PUSH2 0x2722 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1CBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x3CB7BA903737BA1037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1CE7 JUMPI PUSH2 0x1CE7 PUSH2 0x297A JUMP JUMPDEST EQ ISZERO PUSH2 0x1D2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x1CDD1C985D1959DE481B9BDD081CDD5C1C1BDC9D1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D94 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP PUSH2 0x1DA4 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1DD1 JUMPI PUSH2 0x1DD1 PUSH2 0x297A JUMP JUMPDEST EQ PUSH2 0x1DDD JUMPI PUSH1 0x0 PUSH2 0x1DE0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE CALLER DUP2 MSTORE DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP7 DUP8 AND PUSH1 0x20 DUP3 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP6 SWAP1 SWAP7 AND DUP7 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP7 AND PUSH1 0x60 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x80 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 DUP8 ADD SWAP6 DUP7 MSTORE PUSH1 0x0 SWAP10 DUP11 MSTORE PUSH1 0xC DUP6 MSTORE SWAP9 DUP2 SWAP1 KECCAK256 SWAP6 MLOAD DUP7 SLOAD SWAP1 DUP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP8 SSTORE SWAP5 MLOAD DUP1 MLOAD PUSH1 0x1 DUP9 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP10 AND SWAP7 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP7 SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE POP SWAP3 DUP2 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE SWAP2 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE SWAP3 ADD MLOAD PUSH1 0x5 SWAP1 SWAP3 ADD DUP1 SLOAD SWAP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH2 0x1EC4 DUP5 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x1ECE SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST PUSH2 0x1ED8 SWAP2 SWAP1 PUSH2 0x292E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EE6 PUSH2 0x2625 JUMP JUMPDEST PUSH2 0x1F40 DUP2 GT ISZERO PUSH2 0x1F28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x696E76616C69642076616C7565 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH2 0x1F35 PUSH2 0x2625 JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xC SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x4 DUP1 SLOAD SWAP3 MLOAD PUSH4 0x3755269B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x3755269B SWAP1 PUSH1 0x24 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FAE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FD2 SWAP2 SWAP1 PUSH2 0x2761 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD6C8D1B4 DUP9 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2009 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2020 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2034 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2058 SWAP2 SWAP1 PUSH2 0x27DC JUMP JUMPDEST PUSH1 0x5 DUP7 ADD SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x20B6 JUMPI PUSH1 0x9 SLOAD DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND SWAP2 PUSH2 0x2083 SWAP2 PUSH2 0x292E JUMP JUMPDEST PUSH2 0x208D SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST PUSH2 0x2098 SWAP1 PUSH1 0x78 PUSH2 0x292E JUMP JUMPDEST PUSH2 0x20AB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH2 0x28F4 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND SWAP2 PUSH2 0x20CF SWAP2 PUSH2 0x292E JUMP JUMPDEST PUSH2 0x20D9 SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST PUSH2 0x20E4 SWAP1 PUSH1 0x78 PUSH2 0x292E JUMP JUMPDEST PUSH2 0x20AB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH2 0x294D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2144 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1BDC1D1A5BDB881C995919595B5959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x214F DUP4 PUSH2 0x16BE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x216C SWAP1 DUP3 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x21AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1D1BDBC81B5D58DA08185B5BDD5B9D PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x21D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP4 SWAP1 PUSH2 0x21EC SWAP1 DUP5 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST PUSH2 0x21F6 SWAP2 SWAP1 PUSH2 0x294D JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1B45A68D PUSH2 0x2214 DUP5 DUP7 PUSH2 0x294D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2232 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x224C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2260 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP5 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0xD DUP3 MSTORE DUP5 DUP2 KECCAK256 SWAP4 MLOAD DUP5 SSTORE SWAP2 MLOAD PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x5 SLOAD PUSH1 0xC SWAP1 SWAP3 MSTORE DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP9 SWAP1 MSTORE SWAP2 AND SWAP3 POP PUSH4 0x23B872DD SWAP2 POP PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2303 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2327 SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH2 0x235E SWAP3 SWAP2 AND SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x238C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23B0 SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE DUP5 SWAP1 CALLER SWAP1 PUSH32 0x77C6871227E5D2DEC8DADD5354F78453203E22E669CD0EC4C19D9A8C5EDB31D0 SWAP1 PUSH1 0x20 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3755269B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x3755269B SWAP1 PUSH1 0x24 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x242C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2440 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2464 SWAP2 SWAP1 PUSH2 0x2761 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x35B2346D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE SWAP2 SWAP4 POP PUSH1 0x0 SWAP3 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xD6C8D1B4 SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24E5 SWAP2 SWAP1 PUSH2 0x27DC JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 SWAP3 POP PUSH1 0xFF AND ISZERO SWAP1 POP PUSH2 0x2528 JUMPI PUSH1 0x64 PUSH1 0xA SLOAD PUSH1 0x64 PUSH2 0x2515 SWAP2 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST PUSH2 0x1715 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND PUSH2 0x292E JUMP JUMPDEST PUSH1 0x64 PUSH1 0xA SLOAD PUSH1 0x64 PUSH2 0x2515 SWAP2 SWAP1 PUSH2 0x294D JUMP JUMPDEST PUSH2 0x2541 PUSH2 0x2625 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x25A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH2 0x25AF DUP2 PUSH2 0x267F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP2 MLOAD PUSH4 0xB07F0A41 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB07F0A41 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x261D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x187B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x26E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2717 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9B4 DUP2 PUSH2 0x2990 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x9B4 DUP2 PUSH2 0x2990 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2751 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x9B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2779 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH1 0x2 DUP2 LT PUSH2 0x2788 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD SWAP1 SWAP6 POP PUSH2 0x2799 DUP2 PUSH2 0x2990 JUMP JUMPDEST SWAP4 POP PUSH2 0x27A7 PUSH1 0x40 DUP8 ADD PUSH2 0x26CF JUMP JUMPDEST SWAP3 POP PUSH2 0x27B5 PUSH1 0x60 DUP8 ADD PUSH2 0x26CF JUMP JUMPDEST SWAP2 POP PUSH1 0x80 DUP7 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x27CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27F8 DUP4 PUSH2 0x26CF JUMP JUMPDEST SWAP2 POP PUSH2 0x2806 PUSH1 0x20 DUP5 ADD PUSH2 0x26CF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2821 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x283A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2854 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x287B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2884 DUP7 PUSH2 0x26EB JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x28A7 PUSH1 0x80 DUP8 ADD PUSH2 0x26EB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0x28EE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2907 JUMPI PUSH2 0x2907 PUSH2 0x2964 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2929 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2948 JUMPI PUSH2 0x2948 PUSH2 0x2964 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x295F JUMPI PUSH2 0x295F PUSH2 0x2964 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x25AF JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xCD 0x4B 0xA8 CALLVALUE PUSH30 0xC5F014920EEEC25A24C97FAF00E60A855779278672FD57480C8C64736F6C PUSH4 0x43000806 STOP CALLER ","sourceMap":"300:13228:16:-:0;;;417:5;387:35;;574:26;544:56;;646:6;606:46;;2256:952;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:1;719:10:12;936:18:1;:32::i;:::-;2625:9:16;2620:147;2644:28;2640:1;:32;2620:147;;;2734:22;2693:12;:38;2706:21;2728:1;2706:24;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;2693:38:16;;;;;;;;;;;-1:-1:-1;2693:38:16;:63;;-1:-1:-1;;2693:63:16;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;2674:3:16;;;;:::i;:::-;;;;2620:147;;;;2781:9;2776:150;2800:29;2796:1;:33;2776:150;;;2892:23;2850:12;:39;2863:22;2886:1;2863:25;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;2850:39:16;;;;;;;;;;;-1:-1:-1;2850:39:16;:65;;-1:-1:-1;;2850:65:16;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;2831:3:16;;;;:::i;:::-;;;;2776:150;;;-1:-1:-1;2935:15:16;:34;;-1:-1:-1;;;;;2935:34:16;;;-1:-1:-1;;;;;;2935:34:16;;;;;;;2979:15;:34;;;;;;;;;;;3023:4;:12;;;;;;;;;;;;;;;3045:14;:32;;;2935:34;3087:10;;;3129:24;3133:20;3129:2;:24;:::i;:::-;3107:19;:46;3163:17;:38;-1:-1:-1;300:13228:16;;-1:-1:-1;;;;;;;300:13228:16;2433:187:1;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:1;;;-1:-1:-1;;;;;;2541:17:1;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:138:21:-;93:13;;115:31;93:13;115:31;:::i;:::-;74:78;;;:::o;157:809::-;218:5;271:3;264:4;256:6;252:17;248:27;238:2;;289:1;286;279:12;238:2;322;316:9;364:3;352:16;;-1:-1:-1;;;;;383:34:21;;419:22;;;380:62;377:2;;;484:10;479:3;475:20;472:1;465:31;519:4;516:1;509:15;547:4;544:1;537:15;377:2;578;571:22;613:6;639;672:3;660:16;;657:25;-1:-1:-1;654:2:21;;;695:1;692;685:12;654:2;717:1;727:209;741:4;738:1;735:11;727:209;;;800:34;830:3;800:34;:::i;:::-;788:47;;858:4;882:12;;;;914;;;;;761:1;754:9;727:209;;;-1:-1:-1;954:6:21;;228:738;-1:-1:-1;;;;;228:738:21:o;971:1082::-;1223:6;1231;1239;1247;1255;1263;1271;1279;1287;1340:3;1328:9;1319:7;1315:23;1311:33;1308:2;;;1357:1;1354;1347:12;1308:2;1380:55;1427:7;1416:9;1380:55;:::i;:::-;1370:65;;1454;1511:7;1505:3;1494:9;1490:19;1454:65;:::i;:::-;1444:75;;1562:3;1551:9;1547:19;1541:26;1576:31;1601:5;1576:31;:::i;:::-;1676:3;1661:19;;1655:26;1626:5;;-1:-1:-1;1690:33:21;1655:26;1690:33;:::i;:::-;1794:3;1779:19;;1773:26;1742:7;;-1:-1:-1;1808:33:21;1773:26;1808:33;:::i;:::-;1860:7;1850:17;;;1907:3;1896:9;1892:19;1886:26;1876:36;;1952:3;1941:9;1937:19;1931:26;1921:36;;1997:3;1986:9;1982:19;1976:26;1966:36;;2042:3;2031:9;2027:19;2021:26;2011:36;;1298:755;;;;;;;;;;;:::o;2058:422::-;2147:1;2190:5;2147:1;2204:270;2225:7;2215:8;2212:21;2204:270;;;2284:4;2280:1;2276:6;2272:17;2266:4;2263:27;2260:2;;;2293:18;;:::i;:::-;2343:7;2333:8;2329:22;2326:2;;;2363:16;;;;2326:2;2442:22;;;;2402:15;;;;2204:270;;;2208:3;2122:358;;;;;:::o;2485:131::-;2545:5;2574:36;2601:8;2595:4;2574:36;:::i;:::-;2565:45;2555:61;-1:-1:-1;;;2555:61:21:o;2621:806::-;2670:5;2700:8;2690:2;;-1:-1:-1;2741:1:21;2755:5;;2690:2;2789:4;2779:2;;-1:-1:-1;2826:1:21;2840:5;;2779:2;2871:4;2889:1;2884:59;;;;2957:1;2952:130;;;;2864:218;;2884:59;2914:1;2905:10;;2928:5;;;2952:130;2989:3;2979:8;2976:17;2973:2;;;2996:18;;:::i;:::-;-1:-1:-1;;3052:1:21;3038:16;;3067:5;;2864:218;;3166:2;3156:8;3153:16;3147:3;3141:4;3138:13;3134:36;3128:2;3118:8;3115:16;3110:2;3104:4;3101:12;3097:35;3094:77;3091:2;;;-1:-1:-1;3203:19:21;;;3235:5;;3091:2;3282:34;3307:8;3301:4;3282:34;:::i;:::-;3352:6;3348:1;3344:6;3340:19;3331:7;3328:32;3325:2;;;3363:18;;:::i;:::-;3401:20;;-1:-1:-1;2680:747:21;;;;;:::o;3432:135::-;3471:3;-1:-1:-1;;3492:17:21;;3489:2;;;3512:18;;:::i;:::-;-1:-1:-1;3559:1:21;3548:13;;3479:88::o;3572:127::-;3633:10;3628:3;3624:20;3621:1;3614:31;3664:4;3661:1;3654:15;3688:4;3685:1;3678:15;3704:127;3765:10;3760:3;3756:20;3753:1;3746:31;3796:4;3793:1;3786:15;3820:4;3817:1;3810:15;3836:127;3897:10;3892:3;3888:20;3885:1;3878:31;3928:4;3925:1;3918:15;3952:4;3949:1;3942:15;3968:131;-1:-1:-1;;;;;4043:31:21;;4033:42;;4023:2;;4089:1;4086;4079:12;4023:2;4013:86;:::o;:::-;300:13228:16;;;;;;"},"deployedBytecode":{"functionDebugData":{"@COLLATERAL_DECIMALS_2813":{"entryPoint":null,"id":2813,"parameterSlots":0,"returnSlots":0},"@INTEREST_RATE_DECIMALS_2809":{"entryPoint":null,"id":2809,"parameterSlots":0,"returnSlots":0},"@LTV_2787":{"entryPoint":null,"id":2787,"parameterSlots":0,"returnSlots":0},"@LTV_DECIMALS_2792":{"entryPoint":null,"id":2792,"parameterSlots":0,"returnSlots":0},"@PriorLiqPriceCoef_2815":{"entryPoint":null,"id":2815,"parameterSlots":0,"returnSlots":0},"@USDC_2801":{"entryPoint":null,"id":2801,"parameterSlots":0,"returnSlots":0},"@_checkOwner_100":{"entryPoint":9765,"id":100,"parameterSlots":0,"returnSlots":0},"@_msgSender_2499":{"entryPoint":null,"id":2499,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_157":{"entryPoint":9855,"id":157,"parameterSlots":1,"returnSlots":0},"@borrow_3429":{"entryPoint":2491,"id":3429,"parameterSlots":2,"returnSlots":0},"@borrowedByOption_2854":{"entryPoint":null,"id":2854,"parameterSlots":0,"returnSlots":0},"@calculateUpcomingFee_3796":{"entryPoint":5822,"id":3796,"parameterSlots":1,"returnSlots":1},"@collateralInfo_2849":{"entryPoint":null,"id":2849,"parameterSlots":0,"returnSlots":0},"@collateralToken_2795":{"entryPoint":null,"id":2795,"parameterSlots":0,"returnSlots":0},"@currentLiqPrice_4238":{"entryPoint":4153,"id":4238,"parameterSlots":1,"returnSlots":1},"@currentPrice_4046":{"entryPoint":6269,"id":4046,"parameterSlots":1,"returnSlots":1},"@exerciseByPriorLiqPrice_3754":{"entryPoint":4255,"id":3754,"parameterSlots":1,"returnSlots":0},"@exerciseOption_4282":{"entryPoint":9650,"id":4282,"parameterSlots":1,"returnSlots":0},"@forcedExercise_3651":{"entryPoint":1512,"id":3651,"parameterSlots":1,"returnSlots":0},"@interestRate_2804":{"entryPoint":null,"id":2804,"parameterSlots":0,"returnSlots":0},"@liqPrice_4184":{"entryPoint":7994,"id":4184,"parameterSlots":1,"returnSlots":1},"@liquidate_3536":{"entryPoint":5105,"id":3536,"parameterSlots":1,"returnSlots":0},"@loanStateByPriorLiqPrice_4012":{"entryPoint":5024,"id":4012,"parameterSlots":1,"returnSlots":1},"@loanState_3975":{"entryPoint":5927,"id":3975,"parameterSlots":1,"returnSlots":1},"@lockOption_3225":{"entryPoint":6536,"id":3225,"parameterSlots":1,"returnSlots":0},"@maxBorrowLimit_3242":{"entryPoint":7859,"id":3242,"parameterSlots":1,"returnSlots":1},"@minBorrowLimit_2811":{"entryPoint":null,"id":2811,"parameterSlots":0,"returnSlots":0},"@operationalPool_2798":{"entryPoint":null,"id":2798,"parameterSlots":0,"returnSlots":0},"@owner_86":{"entryPoint":null,"id":86,"parameterSlots":0,"returnSlots":1},"@pool_2818":{"entryPoint":null,"id":2818,"parameterSlots":0,"returnSlots":0},"@priorLiqPrice_4101":{"entryPoint":9189,"id":4101,"parameterSlots":1,"returnSlots":1},"@profitByOption_4260":{"entryPoint":2230,"id":4260,"parameterSlots":1,"returnSlots":1},"@renounceOwnership_114":{"entryPoint":6249,"id":114,"parameterSlots":0,"returnSlots":0},"@repay_3902":{"entryPoint":8439,"id":3902,"parameterSlots":2,"returnSlots":0},"@setInterestRateDecimals_3067":{"entryPoint":5972,"id":3067,"parameterSlots":1,"returnSlots":0},"@setInterestRate_3055":{"entryPoint":5985,"id":3055,"parameterSlots":1,"returnSlots":0},"@setLTV_3043":{"entryPoint":7902,"id":3043,"parameterSlots":1,"returnSlots":0},"@setMinBorrowLimit_3079":{"entryPoint":7981,"id":3079,"parameterSlots":1,"returnSlots":0},"@setPool_3093":{"entryPoint":5780,"id":3093,"parameterSlots":1,"returnSlots":0},"@strategyType_2859":{"entryPoint":null,"id":2859,"parameterSlots":0,"returnSlots":0},"@transferOwnership_137":{"entryPoint":9529,"id":137,"parameterSlots":1,"returnSlots":0},"@unlock_3938":{"entryPoint":5998,"id":3938,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":9989,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":10018,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":10047,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_AggregatorV3Interface_$45_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_enum$_LockedLiquidityState_$4288t_addresst_uint128t_uint128t_uint32_fromMemory":{"entryPoint":10081,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint128t_uint128_fromMemory":{"entryPoint":10204,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":10255,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":10280,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":10305,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory":{"entryPoint":10339,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_uint128_fromMemory":{"entryPoint":9935,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint80_fromMemory":{"entryPoint":9963,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_struct$_optionInfo_$2834_memory_ptr__to_t_address_t_struct$_optionInfo_$2834_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":10419,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$822__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC721_$2147__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IHegicOperationalTreasury_$4305__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IPoolDDL_$4366__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_HegicStrategyType_$2844__to_t_uint8__fromStack_reversed":{"entryPoint":10444,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0b9b509653f27f971bea4c13bb5b5abfce613b87e1bdc4b69df24067d2fbe846__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_298b54f5c2d6d68b7f924f52c9cf625a66043f559f95467f29c0a8c171568344__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2da5f8e96415ce1cf56ac601f863bdc4eb6ccd09c4a394ab789ec97e291c93e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4b4a7780333aa6b9ee5ac5e7ddd39defe393b59dd6021792a090a033c7ac9ff4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_50f1ea23553b2a3016ed182e7c28c65357cf6b419cbdad2dd808aa43db8da5a2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_53c8d4b505fc4a6062e9676e98edcc8d1715f5765c94eec04006fa629d8118d0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_67f3816c2c3c9d26e2c2164d44f506222f0a5a80a1dd5d735b15247affdd74e5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6edeaa141b7d3e77f4ea518839c3262911a7b9795d395c09a6a820e2445f4aaf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_743cf35bb2dc585847026e9713ec3ac2f6c32fb22e1b3dd34a98cfeb20c133a6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_83fd2a98ff41d2cec5b50c37fb0bbd45d5fc012e1ba0d2538cbf2a4cc6d59b6a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_84ff6248860ff3ae576a1007948f4d59f9ce511219f65af0fe0e24464b1f433b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_89a3d2cdd8534687d72382851c0df038982c5ac6bd4b7d04f64810684712218f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_926a54757c68bd6260dd61923e3390bf053a7ffa44eb6de969b1d147dcb979dc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cbf950b70ead57203d569b7512bd24ad0ab13af8ce0c7ee3f1e9df1f544a0ae1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d9653d91002129bb8471bce01d6c8bb486aa66e48f407a0dd073e6b452e1b6e5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_de12ab57a0daa634f488033127dcfe962870ebf8c9e1b7fcbcea396d614f7ebb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_febe8c27865ec1cd0744dae89b54d7d193e7b1234f143f6959afd09101e3067f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":10484,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":10508,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":10542,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":10573,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":10596,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":10618,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":10640,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15511:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:132:21","statements":[{"nodeType":"YulAssignment","src":"84:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:21"},"nodeType":"YulFunctionCall","src":"93:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:21"}]},{"body":{"nodeType":"YulBlock","src":"184:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"193:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"196:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"186:6:21"},"nodeType":"YulFunctionCall","src":"186:12:21"},"nodeType":"YulExpressionStatement","src":"186:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"146:34:21","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:21"},"nodeType":"YulFunctionCall","src":"135:46:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:21"},"nodeType":"YulFunctionCall","src":"125:57:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:21"},"nodeType":"YulFunctionCall","src":"118:65:21"},"nodeType":"YulIf","src":"115:2:21"}]},"name":"abi_decode_uint128_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:21","type":""}],"src":"14:192:21"},{"body":{"nodeType":"YulBlock","src":"270:120:21","statements":[{"nodeType":"YulAssignment","src":"280:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"295:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"289:5:21"},"nodeType":"YulFunctionCall","src":"289:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"280:5:21"}]},{"body":{"nodeType":"YulBlock","src":"368:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"377:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"380:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"370:6:21"},"nodeType":"YulFunctionCall","src":"370:12:21"},"nodeType":"YulExpressionStatement","src":"370:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"324:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"335:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"342:22:21","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"331:3:21"},"nodeType":"YulFunctionCall","src":"331:34:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"321:2:21"},"nodeType":"YulFunctionCall","src":"321:45:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"314:6:21"},"nodeType":"YulFunctionCall","src":"314:53:21"},"nodeType":"YulIf","src":"311:2:21"}]},"name":"abi_decode_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"249:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"260:5:21","type":""}],"src":"211:179:21"},{"body":{"nodeType":"YulBlock","src":"465:177:21","statements":[{"body":{"nodeType":"YulBlock","src":"511:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"520:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"523:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"513:6:21"},"nodeType":"YulFunctionCall","src":"513:12:21"},"nodeType":"YulExpressionStatement","src":"513:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"486:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"495:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"482:3:21"},"nodeType":"YulFunctionCall","src":"482:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"507:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"478:3:21"},"nodeType":"YulFunctionCall","src":"478:32:21"},"nodeType":"YulIf","src":"475:2:21"},{"nodeType":"YulVariableDeclaration","src":"536:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"562:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"549:12:21"},"nodeType":"YulFunctionCall","src":"549:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"540:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"606:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"581:24:21"},"nodeType":"YulFunctionCall","src":"581:31:21"},"nodeType":"YulExpressionStatement","src":"581:31:21"},{"nodeType":"YulAssignment","src":"621:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"631:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"621:6:21"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"431:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"442:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"454:6:21","type":""}],"src":"395:247:21"},{"body":{"nodeType":"YulBlock","src":"728:170:21","statements":[{"body":{"nodeType":"YulBlock","src":"774:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"783:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"786:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"776:6:21"},"nodeType":"YulFunctionCall","src":"776:12:21"},"nodeType":"YulExpressionStatement","src":"776:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"749:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"758:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"745:3:21"},"nodeType":"YulFunctionCall","src":"745:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"770:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"741:3:21"},"nodeType":"YulFunctionCall","src":"741:32:21"},"nodeType":"YulIf","src":"738:2:21"},{"nodeType":"YulVariableDeclaration","src":"799:29:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"818:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"812:5:21"},"nodeType":"YulFunctionCall","src":"812:16:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"803:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"862:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"837:24:21"},"nodeType":"YulFunctionCall","src":"837:31:21"},"nodeType":"YulExpressionStatement","src":"837:31:21"},{"nodeType":"YulAssignment","src":"877:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"887:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"877:6:21"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"694:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"705:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"717:6:21","type":""}],"src":"647:251:21"},{"body":{"nodeType":"YulBlock","src":"981:199:21","statements":[{"body":{"nodeType":"YulBlock","src":"1027:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1036:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1039:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1029:6:21"},"nodeType":"YulFunctionCall","src":"1029:12:21"},"nodeType":"YulExpressionStatement","src":"1029:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1002:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1011:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"998:3:21"},"nodeType":"YulFunctionCall","src":"998:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1023:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"994:3:21"},"nodeType":"YulFunctionCall","src":"994:32:21"},"nodeType":"YulIf","src":"991:2:21"},{"nodeType":"YulVariableDeclaration","src":"1052:29:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1071:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1065:5:21"},"nodeType":"YulFunctionCall","src":"1065:16:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1056:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1134:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1143:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1146:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1136:6:21"},"nodeType":"YulFunctionCall","src":"1136:12:21"},"nodeType":"YulExpressionStatement","src":"1136:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1103:5:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1124:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1117:6:21"},"nodeType":"YulFunctionCall","src":"1117:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1110:6:21"},"nodeType":"YulFunctionCall","src":"1110:21:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1100:2:21"},"nodeType":"YulFunctionCall","src":"1100:32:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1093:6:21"},"nodeType":"YulFunctionCall","src":"1093:40:21"},"nodeType":"YulIf","src":"1090:2:21"},{"nodeType":"YulAssignment","src":"1159:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"1169:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1159:6:21"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"947:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"958:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"970:6:21","type":""}],"src":"903:277:21"},{"body":{"nodeType":"YulBlock","src":"1294:170:21","statements":[{"body":{"nodeType":"YulBlock","src":"1340:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1349:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1352:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1342:6:21"},"nodeType":"YulFunctionCall","src":"1342:12:21"},"nodeType":"YulExpressionStatement","src":"1342:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1315:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1324:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1311:3:21"},"nodeType":"YulFunctionCall","src":"1311:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1336:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1307:3:21"},"nodeType":"YulFunctionCall","src":"1307:32:21"},"nodeType":"YulIf","src":"1304:2:21"},{"nodeType":"YulVariableDeclaration","src":"1365:29:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1384:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1378:5:21"},"nodeType":"YulFunctionCall","src":"1378:16:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1369:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1428:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1403:24:21"},"nodeType":"YulFunctionCall","src":"1403:31:21"},"nodeType":"YulExpressionStatement","src":"1403:31:21"},{"nodeType":"YulAssignment","src":"1443:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"1453:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1443:6:21"}]}]},"name":"abi_decode_tuple_t_contract$_AggregatorV3Interface_$45_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1260:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1271:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1283:6:21","type":""}],"src":"1185:279:21"},{"body":{"nodeType":"YulBlock","src":"1642:583:21","statements":[{"body":{"nodeType":"YulBlock","src":"1689:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1698:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1701:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1691:6:21"},"nodeType":"YulFunctionCall","src":"1691:12:21"},"nodeType":"YulExpressionStatement","src":"1691:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1663:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1672:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1659:3:21"},"nodeType":"YulFunctionCall","src":"1659:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1684:3:21","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1655:3:21"},"nodeType":"YulFunctionCall","src":"1655:33:21"},"nodeType":"YulIf","src":"1652:2:21"},{"nodeType":"YulVariableDeclaration","src":"1714:29:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1733:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1727:5:21"},"nodeType":"YulFunctionCall","src":"1727:16:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1718:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1776:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1785:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1788:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1778:6:21"},"nodeType":"YulFunctionCall","src":"1778:12:21"},"nodeType":"YulExpressionStatement","src":"1778:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1765:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1772:1:21","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1762:2:21"},"nodeType":"YulFunctionCall","src":"1762:12:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1755:6:21"},"nodeType":"YulFunctionCall","src":"1755:20:21"},"nodeType":"YulIf","src":"1752:2:21"},{"nodeType":"YulAssignment","src":"1801:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"1811:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1801:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"1825:40:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1850:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1861:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1846:3:21"},"nodeType":"YulFunctionCall","src":"1846:18:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1840:5:21"},"nodeType":"YulFunctionCall","src":"1840:25:21"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"1829:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1899:7:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1874:24:21"},"nodeType":"YulFunctionCall","src":"1874:33:21"},"nodeType":"YulExpressionStatement","src":"1874:33:21"},{"nodeType":"YulAssignment","src":"1916:17:21","value":{"name":"value_1","nodeType":"YulIdentifier","src":"1926:7:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1916:6:21"}]},{"nodeType":"YulAssignment","src":"1942:59:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1986:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1997:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1982:3:21"},"nodeType":"YulFunctionCall","src":"1982:18:21"}],"functionName":{"name":"abi_decode_uint128_fromMemory","nodeType":"YulIdentifier","src":"1952:29:21"},"nodeType":"YulFunctionCall","src":"1952:49:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1942:6:21"}]},{"nodeType":"YulAssignment","src":"2010:59:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2054:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2065:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2050:3:21"},"nodeType":"YulFunctionCall","src":"2050:18:21"}],"functionName":{"name":"abi_decode_uint128_fromMemory","nodeType":"YulIdentifier","src":"2020:29:21"},"nodeType":"YulFunctionCall","src":"2020:49:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2010:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"2078:41:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2103:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2114:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2099:3:21"},"nodeType":"YulFunctionCall","src":"2099:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2093:5:21"},"nodeType":"YulFunctionCall","src":"2093:26:21"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"2082:7:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2177:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2186:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2189:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2179:6:21"},"nodeType":"YulFunctionCall","src":"2179:12:21"},"nodeType":"YulExpressionStatement","src":"2179:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"2141:7:21"},{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"2154:7:21"},{"kind":"number","nodeType":"YulLiteral","src":"2163:10:21","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2150:3:21"},"nodeType":"YulFunctionCall","src":"2150:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2138:2:21"},"nodeType":"YulFunctionCall","src":"2138:37:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2131:6:21"},"nodeType":"YulFunctionCall","src":"2131:45:21"},"nodeType":"YulIf","src":"2128:2:21"},{"nodeType":"YulAssignment","src":"2202:17:21","value":{"name":"value_2","nodeType":"YulIdentifier","src":"2212:7:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2202:6:21"}]}]},"name":"abi_decode_tuple_t_enum$_LockedLiquidityState_$4288t_addresst_uint128t_uint128t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1576:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1587:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1599:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1607:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1615:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1623:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1631:6:21","type":""}],"src":"1469:756:21"},{"body":{"nodeType":"YulBlock","src":"2328:195:21","statements":[{"body":{"nodeType":"YulBlock","src":"2374:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2383:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2386:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2376:6:21"},"nodeType":"YulFunctionCall","src":"2376:12:21"},"nodeType":"YulExpressionStatement","src":"2376:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2349:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2358:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2345:3:21"},"nodeType":"YulFunctionCall","src":"2345:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2370:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2341:3:21"},"nodeType":"YulFunctionCall","src":"2341:32:21"},"nodeType":"YulIf","src":"2338:2:21"},{"nodeType":"YulAssignment","src":"2399:50:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2439:9:21"}],"functionName":{"name":"abi_decode_uint128_fromMemory","nodeType":"YulIdentifier","src":"2409:29:21"},"nodeType":"YulFunctionCall","src":"2409:40:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2399:6:21"}]},{"nodeType":"YulAssignment","src":"2458:59:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2502:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2513:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2498:3:21"},"nodeType":"YulFunctionCall","src":"2498:18:21"}],"functionName":{"name":"abi_decode_uint128_fromMemory","nodeType":"YulIdentifier","src":"2468:29:21"},"nodeType":"YulFunctionCall","src":"2468:49:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2458:6:21"}]}]},"name":"abi_decode_tuple_t_uint128t_uint128_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2286:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2297:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2309:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2317:6:21","type":""}],"src":"2230:293:21"},{"body":{"nodeType":"YulBlock","src":"2598:110:21","statements":[{"body":{"nodeType":"YulBlock","src":"2644:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2653:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2656:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2646:6:21"},"nodeType":"YulFunctionCall","src":"2646:12:21"},"nodeType":"YulExpressionStatement","src":"2646:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2619:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2628:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2615:3:21"},"nodeType":"YulFunctionCall","src":"2615:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2640:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2611:3:21"},"nodeType":"YulFunctionCall","src":"2611:32:21"},"nodeType":"YulIf","src":"2608:2:21"},{"nodeType":"YulAssignment","src":"2669:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2692:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2679:12:21"},"nodeType":"YulFunctionCall","src":"2679:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2669:6:21"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2564:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2575:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2587:6:21","type":""}],"src":"2528:180:21"},{"body":{"nodeType":"YulBlock","src":"2794:103:21","statements":[{"body":{"nodeType":"YulBlock","src":"2840:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2849:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2852:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2842:6:21"},"nodeType":"YulFunctionCall","src":"2842:12:21"},"nodeType":"YulExpressionStatement","src":"2842:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2815:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2824:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2811:3:21"},"nodeType":"YulFunctionCall","src":"2811:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2836:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2807:3:21"},"nodeType":"YulFunctionCall","src":"2807:32:21"},"nodeType":"YulIf","src":"2804:2:21"},{"nodeType":"YulAssignment","src":"2865:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2881:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2875:5:21"},"nodeType":"YulFunctionCall","src":"2875:16:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2865:6:21"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2760:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2771:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2783:6:21","type":""}],"src":"2713:184:21"},{"body":{"nodeType":"YulBlock","src":"2989:161:21","statements":[{"body":{"nodeType":"YulBlock","src":"3035:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3044:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3047:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3037:6:21"},"nodeType":"YulFunctionCall","src":"3037:12:21"},"nodeType":"YulExpressionStatement","src":"3037:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3010:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3019:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3006:3:21"},"nodeType":"YulFunctionCall","src":"3006:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3031:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3002:3:21"},"nodeType":"YulFunctionCall","src":"3002:32:21"},"nodeType":"YulIf","src":"2999:2:21"},{"nodeType":"YulAssignment","src":"3060:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3083:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3070:12:21"},"nodeType":"YulFunctionCall","src":"3070:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3060:6:21"}]},{"nodeType":"YulAssignment","src":"3102:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3129:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3140:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3125:3:21"},"nodeType":"YulFunctionCall","src":"3125:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3112:12:21"},"nodeType":"YulFunctionCall","src":"3112:32:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3102:6:21"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2947:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2958:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2970:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2978:6:21","type":""}],"src":"2902:248:21"},{"body":{"nodeType":"YulBlock","src":"3301:327:21","statements":[{"body":{"nodeType":"YulBlock","src":"3348:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3357:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3360:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3350:6:21"},"nodeType":"YulFunctionCall","src":"3350:12:21"},"nodeType":"YulExpressionStatement","src":"3350:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3322:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3331:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3318:3:21"},"nodeType":"YulFunctionCall","src":"3318:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3343:3:21","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3314:3:21"},"nodeType":"YulFunctionCall","src":"3314:33:21"},"nodeType":"YulIf","src":"3311:2:21"},{"nodeType":"YulAssignment","src":"3373:49:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3412:9:21"}],"functionName":{"name":"abi_decode_uint80_fromMemory","nodeType":"YulIdentifier","src":"3383:28:21"},"nodeType":"YulFunctionCall","src":"3383:39:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3373:6:21"}]},{"nodeType":"YulAssignment","src":"3431:35:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3451:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3462:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3447:3:21"},"nodeType":"YulFunctionCall","src":"3447:18:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3441:5:21"},"nodeType":"YulFunctionCall","src":"3441:25:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3431:6:21"}]},{"nodeType":"YulAssignment","src":"3475:35:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3495:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3506:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3491:3:21"},"nodeType":"YulFunctionCall","src":"3491:18:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3485:5:21"},"nodeType":"YulFunctionCall","src":"3485:25:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3475:6:21"}]},{"nodeType":"YulAssignment","src":"3519:35:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3539:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3550:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3535:3:21"},"nodeType":"YulFunctionCall","src":"3535:18:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3529:5:21"},"nodeType":"YulFunctionCall","src":"3529:25:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3519:6:21"}]},{"nodeType":"YulAssignment","src":"3563:59:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3606:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3617:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3602:3:21"},"nodeType":"YulFunctionCall","src":"3602:19:21"}],"functionName":{"name":"abi_decode_uint80_fromMemory","nodeType":"YulIdentifier","src":"3573:28:21"},"nodeType":"YulFunctionCall","src":"3573:49:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3563:6:21"}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3235:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3246:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3258:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3266:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3274:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3282:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3290:6:21","type":""}],"src":"3155:473:21"},{"body":{"nodeType":"YulBlock","src":"3734:102:21","statements":[{"nodeType":"YulAssignment","src":"3744:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3756:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3767:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3752:3:21"},"nodeType":"YulFunctionCall","src":"3752:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3744:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3786:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3801:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3817:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3822:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3813:3:21"},"nodeType":"YulFunctionCall","src":"3813:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"3826:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3809:3:21"},"nodeType":"YulFunctionCall","src":"3809:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3797:3:21"},"nodeType":"YulFunctionCall","src":"3797:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3779:6:21"},"nodeType":"YulFunctionCall","src":"3779:51:21"},"nodeType":"YulExpressionStatement","src":"3779:51:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3703:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3714:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3725:4:21","type":""}],"src":"3633:203:21"},{"body":{"nodeType":"YulBlock","src":"3998:218:21","statements":[{"nodeType":"YulAssignment","src":"4008:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4020:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4031:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4016:3:21"},"nodeType":"YulFunctionCall","src":"4016:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4008:4:21"}]},{"nodeType":"YulVariableDeclaration","src":"4043:29:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4061:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4066:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4057:3:21"},"nodeType":"YulFunctionCall","src":"4057:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"4070:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4053:3:21"},"nodeType":"YulFunctionCall","src":"4053:19:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4047:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4088:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4103:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"4111:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4099:3:21"},"nodeType":"YulFunctionCall","src":"4099:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4081:6:21"},"nodeType":"YulFunctionCall","src":"4081:34:21"},"nodeType":"YulExpressionStatement","src":"4081:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4135:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4146:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4131:3:21"},"nodeType":"YulFunctionCall","src":"4131:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4155:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"4163:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4151:3:21"},"nodeType":"YulFunctionCall","src":"4151:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4124:6:21"},"nodeType":"YulFunctionCall","src":"4124:43:21"},"nodeType":"YulExpressionStatement","src":"4124:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4187:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4198:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4183:3:21"},"nodeType":"YulFunctionCall","src":"4183:18:21"},{"name":"value2","nodeType":"YulIdentifier","src":"4203:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4176:6:21"},"nodeType":"YulFunctionCall","src":"4176:34:21"},"nodeType":"YulExpressionStatement","src":"4176:34:21"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3951:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3962:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3970:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3978:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3989:4:21","type":""}],"src":"3841:375:21"},{"body":{"nodeType":"YulBlock","src":"4406:438:21","statements":[{"nodeType":"YulAssignment","src":"4416:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4428:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4439:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4424:3:21"},"nodeType":"YulFunctionCall","src":"4424:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4416:4:21"}]},{"nodeType":"YulVariableDeclaration","src":"4452:29:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4470:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4475:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4466:3:21"},"nodeType":"YulFunctionCall","src":"4466:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"4479:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4462:3:21"},"nodeType":"YulFunctionCall","src":"4462:19:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4456:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4497:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4512:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"4520:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4508:3:21"},"nodeType":"YulFunctionCall","src":"4508:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4490:6:21"},"nodeType":"YulFunctionCall","src":"4490:34:21"},"nodeType":"YulExpressionStatement","src":"4490:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4544:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4555:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4540:3:21"},"nodeType":"YulFunctionCall","src":"4540:18:21"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4570:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4564:5:21"},"nodeType":"YulFunctionCall","src":"4564:13:21"},{"name":"_1","nodeType":"YulIdentifier","src":"4579:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4560:3:21"},"nodeType":"YulFunctionCall","src":"4560:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4533:6:21"},"nodeType":"YulFunctionCall","src":"4533:50:21"},"nodeType":"YulExpressionStatement","src":"4533:50:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4603:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4614:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4599:3:21"},"nodeType":"YulFunctionCall","src":"4599:18:21"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4629:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4637:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4625:3:21"},"nodeType":"YulFunctionCall","src":"4625:15:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4619:5:21"},"nodeType":"YulFunctionCall","src":"4619:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4592:6:21"},"nodeType":"YulFunctionCall","src":"4592:50:21"},"nodeType":"YulExpressionStatement","src":"4592:50:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4662:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4673:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4658:3:21"},"nodeType":"YulFunctionCall","src":"4658:18:21"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4688:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4696:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4684:3:21"},"nodeType":"YulFunctionCall","src":"4684:15:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4678:5:21"},"nodeType":"YulFunctionCall","src":"4678:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4651:6:21"},"nodeType":"YulFunctionCall","src":"4651:50:21"},"nodeType":"YulExpressionStatement","src":"4651:50:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4721:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4732:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4717:3:21"},"nodeType":"YulFunctionCall","src":"4717:19:21"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4748:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4756:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4744:3:21"},"nodeType":"YulFunctionCall","src":"4744:15:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4738:5:21"},"nodeType":"YulFunctionCall","src":"4738:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4710:6:21"},"nodeType":"YulFunctionCall","src":"4710:51:21"},"nodeType":"YulExpressionStatement","src":"4710:51:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4781:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4792:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4777:3:21"},"nodeType":"YulFunctionCall","src":"4777:19:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4822:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4830:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4818:3:21"},"nodeType":"YulFunctionCall","src":"4818:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4812:5:21"},"nodeType":"YulFunctionCall","src":"4812:23:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4805:6:21"},"nodeType":"YulFunctionCall","src":"4805:31:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4798:6:21"},"nodeType":"YulFunctionCall","src":"4798:39:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4770:6:21"},"nodeType":"YulFunctionCall","src":"4770:68:21"},"nodeType":"YulExpressionStatement","src":"4770:68:21"}]},"name":"abi_encode_tuple_t_address_t_struct$_optionInfo_$2834_memory_ptr__to_t_address_t_struct$_optionInfo_$2834_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4367:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4378:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4386:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4397:4:21","type":""}],"src":"4221:623:21"},{"body":{"nodeType":"YulBlock","src":"4978:145:21","statements":[{"nodeType":"YulAssignment","src":"4988:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5000:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5011:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4996:3:21"},"nodeType":"YulFunctionCall","src":"4996:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4988:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5030:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5045:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5061:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5066:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5057:3:21"},"nodeType":"YulFunctionCall","src":"5057:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"5070:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5053:3:21"},"nodeType":"YulFunctionCall","src":"5053:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5041:3:21"},"nodeType":"YulFunctionCall","src":"5041:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5023:6:21"},"nodeType":"YulFunctionCall","src":"5023:51:21"},"nodeType":"YulExpressionStatement","src":"5023:51:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5094:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5105:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5090:3:21"},"nodeType":"YulFunctionCall","src":"5090:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"5110:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5083:6:21"},"nodeType":"YulFunctionCall","src":"5083:34:21"},"nodeType":"YulExpressionStatement","src":"5083:34:21"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4939:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4950:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4958:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4969:4:21","type":""}],"src":"4849:274:21"},{"body":{"nodeType":"YulBlock","src":"5223:92:21","statements":[{"nodeType":"YulAssignment","src":"5233:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5245:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5256:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5241:3:21"},"nodeType":"YulFunctionCall","src":"5241:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5233:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5275:9:21"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5300:6:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5293:6:21"},"nodeType":"YulFunctionCall","src":"5293:14:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5286:6:21"},"nodeType":"YulFunctionCall","src":"5286:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5268:6:21"},"nodeType":"YulFunctionCall","src":"5268:41:21"},"nodeType":"YulExpressionStatement","src":"5268:41:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5192:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5203:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5214:4:21","type":""}],"src":"5128:187:21"},{"body":{"nodeType":"YulBlock","src":"5435:102:21","statements":[{"nodeType":"YulAssignment","src":"5445:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5457:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5468:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5453:3:21"},"nodeType":"YulFunctionCall","src":"5453:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5445:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5487:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5502:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5518:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5523:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5514:3:21"},"nodeType":"YulFunctionCall","src":"5514:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"5527:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5510:3:21"},"nodeType":"YulFunctionCall","src":"5510:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5498:3:21"},"nodeType":"YulFunctionCall","src":"5498:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5480:6:21"},"nodeType":"YulFunctionCall","src":"5480:51:21"},"nodeType":"YulExpressionStatement","src":"5480:51:21"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$822__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5404:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5415:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5426:4:21","type":""}],"src":"5320:217:21"},{"body":{"nodeType":"YulBlock","src":"5659:102:21","statements":[{"nodeType":"YulAssignment","src":"5669:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5681:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5692:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5677:3:21"},"nodeType":"YulFunctionCall","src":"5677:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5669:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5711:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5726:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5742:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5747:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5738:3:21"},"nodeType":"YulFunctionCall","src":"5738:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"5751:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5734:3:21"},"nodeType":"YulFunctionCall","src":"5734:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5722:3:21"},"nodeType":"YulFunctionCall","src":"5722:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5704:6:21"},"nodeType":"YulFunctionCall","src":"5704:51:21"},"nodeType":"YulExpressionStatement","src":"5704:51:21"}]},"name":"abi_encode_tuple_t_contract$_IERC721_$2147__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5628:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5639:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5650:4:21","type":""}],"src":"5542:219:21"},{"body":{"nodeType":"YulBlock","src":"5901:102:21","statements":[{"nodeType":"YulAssignment","src":"5911:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5923:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5934:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5919:3:21"},"nodeType":"YulFunctionCall","src":"5919:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5911:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5953:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5968:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5984:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5989:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5980:3:21"},"nodeType":"YulFunctionCall","src":"5980:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"5993:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5976:3:21"},"nodeType":"YulFunctionCall","src":"5976:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5964:3:21"},"nodeType":"YulFunctionCall","src":"5964:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5946:6:21"},"nodeType":"YulFunctionCall","src":"5946:51:21"},"nodeType":"YulExpressionStatement","src":"5946:51:21"}]},"name":"abi_encode_tuple_t_contract$_IHegicOperationalTreasury_$4305__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5870:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5881:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5892:4:21","type":""}],"src":"5766:237:21"},{"body":{"nodeType":"YulBlock","src":"6126:102:21","statements":[{"nodeType":"YulAssignment","src":"6136:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6148:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6159:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6144:3:21"},"nodeType":"YulFunctionCall","src":"6144:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6136:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6178:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6193:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6209:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6214:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6205:3:21"},"nodeType":"YulFunctionCall","src":"6205:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"6218:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6201:3:21"},"nodeType":"YulFunctionCall","src":"6201:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6189:3:21"},"nodeType":"YulFunctionCall","src":"6189:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6171:6:21"},"nodeType":"YulFunctionCall","src":"6171:51:21"},"nodeType":"YulExpressionStatement","src":"6171:51:21"}]},"name":"abi_encode_tuple_t_contract$_IPoolDDL_$4366__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6095:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6106:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6117:4:21","type":""}],"src":"6008:220:21"},{"body":{"nodeType":"YulBlock","src":"6354:229:21","statements":[{"nodeType":"YulAssignment","src":"6364:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6376:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6387:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6372:3:21"},"nodeType":"YulFunctionCall","src":"6372:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6364:4:21"}]},{"body":{"nodeType":"YulBlock","src":"6432:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6453:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6460:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6465:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6456:3:21"},"nodeType":"YulFunctionCall","src":"6456:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6446:6:21"},"nodeType":"YulFunctionCall","src":"6446:31:21"},"nodeType":"YulExpressionStatement","src":"6446:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6497:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6500:4:21","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6490:6:21"},"nodeType":"YulFunctionCall","src":"6490:15:21"},"nodeType":"YulExpressionStatement","src":"6490:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6525:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6528:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6518:6:21"},"nodeType":"YulFunctionCall","src":"6518:15:21"},"nodeType":"YulExpressionStatement","src":"6518:15:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6412:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6420:1:21","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6409:2:21"},"nodeType":"YulFunctionCall","src":"6409:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6402:6:21"},"nodeType":"YulFunctionCall","src":"6402:21:21"},"nodeType":"YulIf","src":"6399:2:21"},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6559:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"6570:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6552:6:21"},"nodeType":"YulFunctionCall","src":"6552:25:21"},"nodeType":"YulExpressionStatement","src":"6552:25:21"}]},"name":"abi_encode_tuple_t_enum$_HegicStrategyType_$2844__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6323:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6334:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6345:4:21","type":""}],"src":"6233:350:21"},{"body":{"nodeType":"YulBlock","src":"6762:226:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6779:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6790:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6772:6:21"},"nodeType":"YulFunctionCall","src":"6772:21:21"},"nodeType":"YulExpressionStatement","src":"6772:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6813:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6824:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6809:3:21"},"nodeType":"YulFunctionCall","src":"6809:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"6829:2:21","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6802:6:21"},"nodeType":"YulFunctionCall","src":"6802:30:21"},"nodeType":"YulExpressionStatement","src":"6802:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6852:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6863:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6848:3:21"},"nodeType":"YulFunctionCall","src":"6848:18:21"},{"hexValue":"616d6f756e74202b20646174612e626f72726f776564206c657373206d61784c","kind":"string","nodeType":"YulLiteral","src":"6868:34:21","type":"","value":"amount + data.borrowed less maxL"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6841:6:21"},"nodeType":"YulFunctionCall","src":"6841:62:21"},"nodeType":"YulExpressionStatement","src":"6841:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6923:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6934:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6919:3:21"},"nodeType":"YulFunctionCall","src":"6919:18:21"},{"hexValue":"696d6974","kind":"string","nodeType":"YulLiteral","src":"6939:6:21","type":"","value":"imit"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6912:6:21"},"nodeType":"YulFunctionCall","src":"6912:34:21"},"nodeType":"YulExpressionStatement","src":"6912:34:21"},{"nodeType":"YulAssignment","src":"6955:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6967:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6978:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6963:3:21"},"nodeType":"YulFunctionCall","src":"6963:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6955:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_0b9b509653f27f971bea4c13bb5b5abfce613b87e1bdc4b69df24067d2fbe846__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6739:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6753:4:21","type":""}],"src":"6588:400:21"},{"body":{"nodeType":"YulBlock","src":"7167:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7184:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7195:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7177:6:21"},"nodeType":"YulFunctionCall","src":"7177:21:21"},"nodeType":"YulExpressionStatement","src":"7177:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7218:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7229:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7214:3:21"},"nodeType":"YulFunctionCall","src":"7214:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"7234:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7207:6:21"},"nodeType":"YulFunctionCall","src":"7207:30:21"},"nodeType":"YulExpressionStatement","src":"7207:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7257:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7268:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7253:3:21"},"nodeType":"YulFunctionCall","src":"7253:18:21"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"7273:34:21","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7246:6:21"},"nodeType":"YulFunctionCall","src":"7246:62:21"},"nodeType":"YulExpressionStatement","src":"7246:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7328:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7339:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7324:3:21"},"nodeType":"YulFunctionCall","src":"7324:18:21"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"7344:8:21","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7317:6:21"},"nodeType":"YulFunctionCall","src":"7317:36:21"},"nodeType":"YulExpressionStatement","src":"7317:36:21"},{"nodeType":"YulAssignment","src":"7362:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7374:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7385:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7370:3:21"},"nodeType":"YulFunctionCall","src":"7370:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7362:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7144:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7158:4:21","type":""}],"src":"6993:402:21"},{"body":{"nodeType":"YulBlock","src":"7574:165:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7591:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7602:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7584:6:21"},"nodeType":"YulFunctionCall","src":"7584:21:21"},"nodeType":"YulExpressionStatement","src":"7584:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7625:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7636:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7621:3:21"},"nodeType":"YulFunctionCall","src":"7621:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"7641:2:21","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7614:6:21"},"nodeType":"YulFunctionCall","src":"7614:30:21"},"nodeType":"YulExpressionStatement","src":"7614:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7664:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7675:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7660:3:21"},"nodeType":"YulFunctionCall","src":"7660:18:21"},{"hexValue":"746f6f206d75636820616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"7680:17:21","type":"","value":"too much amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7653:6:21"},"nodeType":"YulFunctionCall","src":"7653:45:21"},"nodeType":"YulExpressionStatement","src":"7653:45:21"},{"nodeType":"YulAssignment","src":"7707:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7719:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7730:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7715:3:21"},"nodeType":"YulFunctionCall","src":"7715:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7707:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_298b54f5c2d6d68b7f924f52c9cf625a66043f559f95467f29c0a8c171568344__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7551:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7565:4:21","type":""}],"src":"7400:339:21"},{"body":{"nodeType":"YulBlock","src":"7918:163:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7935:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7946:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7928:6:21"},"nodeType":"YulFunctionCall","src":"7928:21:21"},"nodeType":"YulExpressionStatement","src":"7928:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7969:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7980:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7965:3:21"},"nodeType":"YulFunctionCall","src":"7965:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"7985:2:21","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7958:6:21"},"nodeType":"YulFunctionCall","src":"7958:30:21"},"nodeType":"YulExpressionStatement","src":"7958:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8008:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8019:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8004:3:21"},"nodeType":"YulFunctionCall","src":"8004:18:21"},{"hexValue":"696e76616c69642076616c7565","kind":"string","nodeType":"YulLiteral","src":"8024:15:21","type":"","value":"invalid value"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7997:6:21"},"nodeType":"YulFunctionCall","src":"7997:43:21"},"nodeType":"YulExpressionStatement","src":"7997:43:21"},{"nodeType":"YulAssignment","src":"8049:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8061:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8072:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8057:3:21"},"nodeType":"YulFunctionCall","src":"8057:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8049:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_2da5f8e96415ce1cf56ac601f863bdc4eb6ccd09c4a394ab789ec97e291c93e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7895:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7909:4:21","type":""}],"src":"7744:337:21"},{"body":{"nodeType":"YulBlock","src":"8260:166:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8277:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8288:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8270:6:21"},"nodeType":"YulFunctionCall","src":"8270:21:21"},"nodeType":"YulExpressionStatement","src":"8270:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8311:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8322:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8307:3:21"},"nodeType":"YulFunctionCall","src":"8307:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"8327:2:21","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8300:6:21"},"nodeType":"YulFunctionCall","src":"8300:30:21"},"nodeType":"YulExpressionStatement","src":"8300:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8350:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8361:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8346:3:21"},"nodeType":"YulFunctionCall","src":"8346:18:21"},{"hexValue":"6f7074696f6e20697320616374697665","kind":"string","nodeType":"YulLiteral","src":"8366:18:21","type":"","value":"option is active"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8339:6:21"},"nodeType":"YulFunctionCall","src":"8339:46:21"},"nodeType":"YulExpressionStatement","src":"8339:46:21"},{"nodeType":"YulAssignment","src":"8394:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8406:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8417:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8402:3:21"},"nodeType":"YulFunctionCall","src":"8402:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8394:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_4b4a7780333aa6b9ee5ac5e7ddd39defe393b59dd6021792a090a033c7ac9ff4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8237:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8251:4:21","type":""}],"src":"8086:340:21"},{"body":{"nodeType":"YulBlock","src":"8605:167:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8622:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8633:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8615:6:21"},"nodeType":"YulFunctionCall","src":"8615:21:21"},"nodeType":"YulExpressionStatement","src":"8615:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8656:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8667:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8652:3:21"},"nodeType":"YulFunctionCall","src":"8652:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"8672:2:21","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8645:6:21"},"nodeType":"YulFunctionCall","src":"8645:30:21"},"nodeType":"YulExpressionStatement","src":"8645:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8695:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8706:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8691:3:21"},"nodeType":"YulFunctionCall","src":"8691:18:21"},{"hexValue":"6f7074696f6e20697320626c6f636b6564","kind":"string","nodeType":"YulLiteral","src":"8711:19:21","type":"","value":"option is blocked"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8684:6:21"},"nodeType":"YulFunctionCall","src":"8684:47:21"},"nodeType":"YulExpressionStatement","src":"8684:47:21"},{"nodeType":"YulAssignment","src":"8740:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8752:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8763:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8748:3:21"},"nodeType":"YulFunctionCall","src":"8748:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8740:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_50f1ea23553b2a3016ed182e7c28c65357cf6b419cbdad2dd808aa43db8da5a2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8582:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8596:4:21","type":""}],"src":"8431:341:21"},{"body":{"nodeType":"YulBlock","src":"8951:163:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8968:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8979:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8961:6:21"},"nodeType":"YulFunctionCall","src":"8961:21:21"},"nodeType":"YulExpressionStatement","src":"8961:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9002:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9013:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8998:3:21"},"nodeType":"YulFunctionCall","src":"8998:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"9018:2:21","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8991:6:21"},"nodeType":"YulFunctionCall","src":"8991:30:21"},"nodeType":"YulExpressionStatement","src":"8991:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9041:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9052:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9037:3:21"},"nodeType":"YulFunctionCall","src":"9037:18:21"},{"hexValue":"7061757365446544654c656e64","kind":"string","nodeType":"YulLiteral","src":"9057:15:21","type":"","value":"pauseDeDeLend"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9030:6:21"},"nodeType":"YulFunctionCall","src":"9030:43:21"},"nodeType":"YulExpressionStatement","src":"9030:43:21"},{"nodeType":"YulAssignment","src":"9082:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9094:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9105:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9090:3:21"},"nodeType":"YulFunctionCall","src":"9090:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9082:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_53c8d4b505fc4a6062e9676e98edcc8d1715f5765c94eec04006fa629d8118d0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8928:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8942:4:21","type":""}],"src":"8777:337:21"},{"body":{"nodeType":"YulBlock","src":"9293:163:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9310:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9321:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9303:6:21"},"nodeType":"YulFunctionCall","src":"9303:21:21"},"nodeType":"YulExpressionStatement","src":"9303:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9344:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9355:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9340:3:21"},"nodeType":"YulFunctionCall","src":"9340:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"9360:2:21","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9333:6:21"},"nodeType":"YulFunctionCall","src":"9333:30:21"},"nodeType":"YulExpressionStatement","src":"9333:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9383:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9394:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9379:3:21"},"nodeType":"YulFunctionCall","src":"9379:18:21"},{"hexValue":"696e76616c6964207072696365","kind":"string","nodeType":"YulLiteral","src":"9399:15:21","type":"","value":"invalid price"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9372:6:21"},"nodeType":"YulFunctionCall","src":"9372:43:21"},"nodeType":"YulExpressionStatement","src":"9372:43:21"},{"nodeType":"YulAssignment","src":"9424:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9436:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9447:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9432:3:21"},"nodeType":"YulFunctionCall","src":"9432:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9424:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_67f3816c2c3c9d26e2c2164d44f506222f0a5a80a1dd5d735b15247affdd74e5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9270:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9284:4:21","type":""}],"src":"9119:337:21"},{"body":{"nodeType":"YulBlock","src":"9635:170:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9652:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9663:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9645:6:21"},"nodeType":"YulFunctionCall","src":"9645:21:21"},"nodeType":"YulExpressionStatement","src":"9645:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9686:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9697:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9682:3:21"},"nodeType":"YulFunctionCall","src":"9682:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"9702:2:21","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9675:6:21"},"nodeType":"YulFunctionCall","src":"9675:30:21"},"nodeType":"YulExpressionStatement","src":"9675:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9725:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9736:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9721:3:21"},"nodeType":"YulFunctionCall","src":"9721:18:21"},{"hexValue":"74686520707269636520697320746f6f206c6f77","kind":"string","nodeType":"YulLiteral","src":"9741:22:21","type":"","value":"the price is too low"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9714:6:21"},"nodeType":"YulFunctionCall","src":"9714:50:21"},"nodeType":"YulExpressionStatement","src":"9714:50:21"},{"nodeType":"YulAssignment","src":"9773:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9785:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9796:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9781:3:21"},"nodeType":"YulFunctionCall","src":"9781:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9773:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_6edeaa141b7d3e77f4ea518839c3262911a7b9795d395c09a6a820e2445f4aaf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9612:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9626:4:21","type":""}],"src":"9461:344:21"},{"body":{"nodeType":"YulBlock","src":"9984:165:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10001:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10012:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9994:6:21"},"nodeType":"YulFunctionCall","src":"9994:21:21"},"nodeType":"YulExpressionStatement","src":"9994:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10035:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10046:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10031:3:21"},"nodeType":"YulFunctionCall","src":"10031:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"10051:2:21","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10024:6:21"},"nodeType":"YulFunctionCall","src":"10024:30:21"},"nodeType":"YulExpressionStatement","src":"10024:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10074:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10085:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10070:3:21"},"nodeType":"YulFunctionCall","src":"10070:18:21"},{"hexValue":"6f7074696f6e2072656465656d6564","kind":"string","nodeType":"YulLiteral","src":"10090:17:21","type":"","value":"option redeemed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10063:6:21"},"nodeType":"YulFunctionCall","src":"10063:45:21"},"nodeType":"YulExpressionStatement","src":"10063:45:21"},{"nodeType":"YulAssignment","src":"10117:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10129:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10140:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10125:3:21"},"nodeType":"YulFunctionCall","src":"10125:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10117:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_743cf35bb2dc585847026e9713ec3ac2f6c32fb22e1b3dd34a98cfeb20c133a6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9961:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9975:4:21","type":""}],"src":"9810:339:21"},{"body":{"nodeType":"YulBlock","src":"10328:176:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10345:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10356:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10338:6:21"},"nodeType":"YulFunctionCall","src":"10338:21:21"},"nodeType":"YulExpressionStatement","src":"10338:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10379:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10390:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10375:3:21"},"nodeType":"YulFunctionCall","src":"10375:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"10395:2:21","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10368:6:21"},"nodeType":"YulFunctionCall","src":"10368:30:21"},"nodeType":"YulExpressionStatement","src":"10368:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10418:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10429:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10414:3:21"},"nodeType":"YulFunctionCall","src":"10414:18:21"},{"hexValue":"616d6f756e74206c657373206d696e426f72726f774c696d6974","kind":"string","nodeType":"YulLiteral","src":"10434:28:21","type":"","value":"amount less minBorrowLimit"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10407:6:21"},"nodeType":"YulFunctionCall","src":"10407:56:21"},"nodeType":"YulExpressionStatement","src":"10407:56:21"},{"nodeType":"YulAssignment","src":"10472:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10484:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10495:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10480:3:21"},"nodeType":"YulFunctionCall","src":"10480:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10472:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_83fd2a98ff41d2cec5b50c37fb0bbd45d5fc012e1ba0d2538cbf2a4cc6d59b6a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10305:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10319:4:21","type":""}],"src":"10154:350:21"},{"body":{"nodeType":"YulBlock","src":"10683:171:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10700:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10711:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10693:6:21"},"nodeType":"YulFunctionCall","src":"10693:21:21"},"nodeType":"YulExpressionStatement","src":"10693:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10734:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10745:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10730:3:21"},"nodeType":"YulFunctionCall","src":"10730:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"10750:2:21","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10723:6:21"},"nodeType":"YulFunctionCall","src":"10723:30:21"},"nodeType":"YulExpressionStatement","src":"10723:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10773:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10784:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10769:3:21"},"nodeType":"YulFunctionCall","src":"10769:18:21"},{"hexValue":"74686520707269636520697320746f6f2068696768","kind":"string","nodeType":"YulLiteral","src":"10789:23:21","type":"","value":"the price is too high"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10762:6:21"},"nodeType":"YulFunctionCall","src":"10762:51:21"},"nodeType":"YulExpressionStatement","src":"10762:51:21"},{"nodeType":"YulAssignment","src":"10822:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10834:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10845:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10830:3:21"},"nodeType":"YulFunctionCall","src":"10830:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10822:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_84ff6248860ff3ae576a1007948f4d59f9ce511219f65af0fe0e24464b1f433b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10660:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10674:4:21","type":""}],"src":"10509:345:21"},{"body":{"nodeType":"YulBlock","src":"11033:171:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11050:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11061:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11043:6:21"},"nodeType":"YulFunctionCall","src":"11043:21:21"},"nodeType":"YulExpressionStatement","src":"11043:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11084:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11095:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11080:3:21"},"nodeType":"YulFunctionCall","src":"11080:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"11100:2:21","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11073:6:21"},"nodeType":"YulFunctionCall","src":"11073:30:21"},"nodeType":"YulExpressionStatement","src":"11073:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11123:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11134:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11119:3:21"},"nodeType":"YulFunctionCall","src":"11119:18:21"},{"hexValue":"796f7520617265206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"11139:23:21","type":"","value":"you are not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11112:6:21"},"nodeType":"YulFunctionCall","src":"11112:51:21"},"nodeType":"YulExpressionStatement","src":"11112:51:21"},{"nodeType":"YulAssignment","src":"11172:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11184:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11195:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11180:3:21"},"nodeType":"YulFunctionCall","src":"11180:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11172:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_89a3d2cdd8534687d72382851c0df038982c5ac6bd4b7d04f64810684712218f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11010:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11024:4:21","type":""}],"src":"10859:345:21"},{"body":{"nodeType":"YulBlock","src":"11383:172:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11400:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11411:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11393:6:21"},"nodeType":"YulFunctionCall","src":"11393:21:21"},"nodeType":"YulExpressionStatement","src":"11393:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11434:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11445:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11430:3:21"},"nodeType":"YulFunctionCall","src":"11430:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"11450:2:21","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11423:6:21"},"nodeType":"YulFunctionCall","src":"11423:30:21"},"nodeType":"YulExpressionStatement","src":"11423:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11473:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11484:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11469:3:21"},"nodeType":"YulFunctionCall","src":"11469:18:21"},{"hexValue":"7374726174656779206e6f7420737570706f72746564","kind":"string","nodeType":"YulLiteral","src":"11489:24:21","type":"","value":"strategy not supported"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11462:6:21"},"nodeType":"YulFunctionCall","src":"11462:52:21"},"nodeType":"YulExpressionStatement","src":"11462:52:21"},{"nodeType":"YulAssignment","src":"11523:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11535:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11546:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11531:3:21"},"nodeType":"YulFunctionCall","src":"11531:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11523:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_926a54757c68bd6260dd61923e3390bf053a7ffa44eb6de969b1d147dcb979dc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11360:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11374:4:21","type":""}],"src":"11209:346:21"},{"body":{"nodeType":"YulBlock","src":"11734:182:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11751:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11762:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11744:6:21"},"nodeType":"YulFunctionCall","src":"11744:21:21"},"nodeType":"YulExpressionStatement","src":"11744:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11785:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11796:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11781:3:21"},"nodeType":"YulFunctionCall","src":"11781:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"11801:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11774:6:21"},"nodeType":"YulFunctionCall","src":"11774:30:21"},"nodeType":"YulExpressionStatement","src":"11774:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11824:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11835:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11820:3:21"},"nodeType":"YulFunctionCall","src":"11820:18:21"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"11840:34:21","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11813:6:21"},"nodeType":"YulFunctionCall","src":"11813:62:21"},"nodeType":"YulExpressionStatement","src":"11813:62:21"},{"nodeType":"YulAssignment","src":"11884:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11896:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11907:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11892:3:21"},"nodeType":"YulFunctionCall","src":"11892:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11884:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11711:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11725:4:21","type":""}],"src":"11560:356:21"},{"body":{"nodeType":"YulBlock","src":"12095:163:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12112:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12123:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12105:6:21"},"nodeType":"YulFunctionCall","src":"12105:21:21"},"nodeType":"YulExpressionStatement","src":"12105:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12146:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12157:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12142:3:21"},"nodeType":"YulFunctionCall","src":"12142:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"12162:2:21","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12135:6:21"},"nodeType":"YulFunctionCall","src":"12135:30:21"},"nodeType":"YulExpressionStatement","src":"12135:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12185:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12196:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12181:3:21"},"nodeType":"YulFunctionCall","src":"12181:18:21"},{"hexValue":"796f75206e6f74206f776e6572","kind":"string","nodeType":"YulLiteral","src":"12201:15:21","type":"","value":"you not owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12174:6:21"},"nodeType":"YulFunctionCall","src":"12174:43:21"},"nodeType":"YulExpressionStatement","src":"12174:43:21"},{"nodeType":"YulAssignment","src":"12226:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12238:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12249:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12234:3:21"},"nodeType":"YulFunctionCall","src":"12234:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12226:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_cbf950b70ead57203d569b7512bd24ad0ab13af8ce0c7ee3f1e9df1f544a0ae1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12072:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12086:4:21","type":""}],"src":"11921:337:21"},{"body":{"nodeType":"YulBlock","src":"12437:157:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12454:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12465:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12447:6:21"},"nodeType":"YulFunctionCall","src":"12447:21:21"},"nodeType":"YulExpressionStatement","src":"12447:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12488:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12499:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12484:3:21"},"nodeType":"YulFunctionCall","src":"12484:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"12504:1:21","type":"","value":"8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12477:6:21"},"nodeType":"YulFunctionCall","src":"12477:29:21"},"nodeType":"YulExpressionStatement","src":"12477:29:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12526:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12537:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12522:3:21"},"nodeType":"YulFunctionCall","src":"12522:18:21"},{"hexValue":"746f6f206c617465","kind":"string","nodeType":"YulLiteral","src":"12542:10:21","type":"","value":"too late"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12515:6:21"},"nodeType":"YulFunctionCall","src":"12515:38:21"},"nodeType":"YulExpressionStatement","src":"12515:38:21"},{"nodeType":"YulAssignment","src":"12562:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12574:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12585:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12570:3:21"},"nodeType":"YulFunctionCall","src":"12570:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12562:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_d9653d91002129bb8471bce01d6c8bb486aa66e48f407a0dd073e6b452e1b6e5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12414:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12428:4:21","type":""}],"src":"12263:331:21"},{"body":{"nodeType":"YulBlock","src":"12773:163:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12790:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12801:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12783:6:21"},"nodeType":"YulFunctionCall","src":"12783:21:21"},"nodeType":"YulExpressionStatement","src":"12783:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12824:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12835:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12820:3:21"},"nodeType":"YulFunctionCall","src":"12820:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"12840:2:21","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12813:6:21"},"nodeType":"YulFunctionCall","src":"12813:30:21"},"nodeType":"YulExpressionStatement","src":"12813:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12863:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12874:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12859:3:21"},"nodeType":"YulFunctionCall","src":"12859:18:21"},{"hexValue":"696e76616c6964207374617465","kind":"string","nodeType":"YulLiteral","src":"12879:15:21","type":"","value":"invalid state"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12852:6:21"},"nodeType":"YulFunctionCall","src":"12852:43:21"},"nodeType":"YulExpressionStatement","src":"12852:43:21"},{"nodeType":"YulAssignment","src":"12904:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12916:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12927:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12912:3:21"},"nodeType":"YulFunctionCall","src":"12912:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12904:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_de12ab57a0daa634f488033127dcfe962870ebf8c9e1b7fcbcea396d614f7ebb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12750:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12764:4:21","type":""}],"src":"12599:337:21"},{"body":{"nodeType":"YulBlock","src":"13115:227:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13132:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13143:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13125:6:21"},"nodeType":"YulFunctionCall","src":"13125:21:21"},"nodeType":"YulExpressionStatement","src":"13125:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13166:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13177:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13162:3:21"},"nodeType":"YulFunctionCall","src":"13162:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"13182:2:21","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13155:6:21"},"nodeType":"YulFunctionCall","src":"13155:30:21"},"nodeType":"YulExpressionStatement","src":"13155:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13205:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13216:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13201:3:21"},"nodeType":"YulFunctionCall","src":"13201:18:21"},{"hexValue":"7468657265206973206e6f7420656e6f756768206d6f6e657920696e20746865","kind":"string","nodeType":"YulLiteral","src":"13221:34:21","type":"","value":"there is not enough money in the"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13194:6:21"},"nodeType":"YulFunctionCall","src":"13194:62:21"},"nodeType":"YulExpressionStatement","src":"13194:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13276:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13287:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13272:3:21"},"nodeType":"YulFunctionCall","src":"13272:18:21"},{"hexValue":"20706f6f6c","kind":"string","nodeType":"YulLiteral","src":"13292:7:21","type":"","value":" pool"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13265:6:21"},"nodeType":"YulFunctionCall","src":"13265:35:21"},"nodeType":"YulExpressionStatement","src":"13265:35:21"},{"nodeType":"YulAssignment","src":"13309:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13321:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13332:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13317:3:21"},"nodeType":"YulFunctionCall","src":"13317:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13309:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_febe8c27865ec1cd0744dae89b54d7d193e7b1234f143f6959afd09101e3067f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13092:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13106:4:21","type":""}],"src":"12941:401:21"},{"body":{"nodeType":"YulBlock","src":"13448:76:21","statements":[{"nodeType":"YulAssignment","src":"13458:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13470:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13481:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13466:3:21"},"nodeType":"YulFunctionCall","src":"13466:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13458:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13500:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"13511:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13493:6:21"},"nodeType":"YulFunctionCall","src":"13493:25:21"},"nodeType":"YulExpressionStatement","src":"13493:25:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13417:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13428:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13439:4:21","type":""}],"src":"13347:177:21"},{"body":{"nodeType":"YulBlock","src":"13686:188:21","statements":[{"nodeType":"YulAssignment","src":"13696:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13708:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13719:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13704:3:21"},"nodeType":"YulFunctionCall","src":"13704:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13696:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13738:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"13749:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13731:6:21"},"nodeType":"YulFunctionCall","src":"13731:25:21"},"nodeType":"YulExpressionStatement","src":"13731:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13776:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13787:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13772:3:21"},"nodeType":"YulFunctionCall","src":"13772:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13796:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13812:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"13817:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13808:3:21"},"nodeType":"YulFunctionCall","src":"13808:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"13821:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13804:3:21"},"nodeType":"YulFunctionCall","src":"13804:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13792:3:21"},"nodeType":"YulFunctionCall","src":"13792:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13765:6:21"},"nodeType":"YulFunctionCall","src":"13765:60:21"},"nodeType":"YulExpressionStatement","src":"13765:60:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13845:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13856:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13841:3:21"},"nodeType":"YulFunctionCall","src":"13841:18:21"},{"name":"value2","nodeType":"YulIdentifier","src":"13861:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13834:6:21"},"nodeType":"YulFunctionCall","src":"13834:34:21"},"nodeType":"YulExpressionStatement","src":"13834:34:21"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13639:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13650:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13658:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13666:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13677:4:21","type":""}],"src":"13529:345:21"},{"body":{"nodeType":"YulBlock","src":"14008:119:21","statements":[{"nodeType":"YulAssignment","src":"14018:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14030:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14041:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14026:3:21"},"nodeType":"YulFunctionCall","src":"14026:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14018:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14060:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"14071:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14053:6:21"},"nodeType":"YulFunctionCall","src":"14053:25:21"},"nodeType":"YulExpressionStatement","src":"14053:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14098:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14109:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14094:3:21"},"nodeType":"YulFunctionCall","src":"14094:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"14114:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14087:6:21"},"nodeType":"YulFunctionCall","src":"14087:34:21"},"nodeType":"YulExpressionStatement","src":"14087:34:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13969:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13980:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13988:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13999:4:21","type":""}],"src":"13879:248:21"},{"body":{"nodeType":"YulBlock","src":"14289:162:21","statements":[{"nodeType":"YulAssignment","src":"14299:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14311:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14322:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14307:3:21"},"nodeType":"YulFunctionCall","src":"14307:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14299:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14341:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"14352:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14334:6:21"},"nodeType":"YulFunctionCall","src":"14334:25:21"},"nodeType":"YulExpressionStatement","src":"14334:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14379:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14390:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14375:3:21"},"nodeType":"YulFunctionCall","src":"14375:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"14395:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14368:6:21"},"nodeType":"YulFunctionCall","src":"14368:34:21"},"nodeType":"YulExpressionStatement","src":"14368:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14422:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14433:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14418:3:21"},"nodeType":"YulFunctionCall","src":"14418:18:21"},{"name":"value2","nodeType":"YulIdentifier","src":"14438:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14411:6:21"},"nodeType":"YulFunctionCall","src":"14411:34:21"},"nodeType":"YulExpressionStatement","src":"14411:34:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14242:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14253:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14261:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14269:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14280:4:21","type":""}],"src":"14132:319:21"},{"body":{"nodeType":"YulBlock","src":"14504:80:21","statements":[{"body":{"nodeType":"YulBlock","src":"14531:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14533:16:21"},"nodeType":"YulFunctionCall","src":"14533:18:21"},"nodeType":"YulExpressionStatement","src":"14533:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14520:1:21"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14527:1:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14523:3:21"},"nodeType":"YulFunctionCall","src":"14523:6:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14517:2:21"},"nodeType":"YulFunctionCall","src":"14517:13:21"},"nodeType":"YulIf","src":"14514:2:21"},{"nodeType":"YulAssignment","src":"14562:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14573:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"14576:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14569:3:21"},"nodeType":"YulFunctionCall","src":"14569:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"14562:3:21"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14487:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"14490:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"14496:3:21","type":""}],"src":"14456:128:21"},{"body":{"nodeType":"YulBlock","src":"14635:171:21","statements":[{"body":{"nodeType":"YulBlock","src":"14666:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14687:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14694:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"14699:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14690:3:21"},"nodeType":"YulFunctionCall","src":"14690:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14680:6:21"},"nodeType":"YulFunctionCall","src":"14680:31:21"},"nodeType":"YulExpressionStatement","src":"14680:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14731:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14734:4:21","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14724:6:21"},"nodeType":"YulFunctionCall","src":"14724:15:21"},"nodeType":"YulExpressionStatement","src":"14724:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14759:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14762:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14752:6:21"},"nodeType":"YulFunctionCall","src":"14752:15:21"},"nodeType":"YulExpressionStatement","src":"14752:15:21"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14655:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14648:6:21"},"nodeType":"YulFunctionCall","src":"14648:9:21"},"nodeType":"YulIf","src":"14645:2:21"},{"nodeType":"YulAssignment","src":"14786:14:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14795:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"14798:1:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"14791:3:21"},"nodeType":"YulFunctionCall","src":"14791:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"14786:1:21"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14620:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"14623:1:21","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"14629:1:21","type":""}],"src":"14589:217:21"},{"body":{"nodeType":"YulBlock","src":"14863:116:21","statements":[{"body":{"nodeType":"YulBlock","src":"14922:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14924:16:21"},"nodeType":"YulFunctionCall","src":"14924:18:21"},"nodeType":"YulExpressionStatement","src":"14924:18:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14894:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14887:6:21"},"nodeType":"YulFunctionCall","src":"14887:9:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14880:6:21"},"nodeType":"YulFunctionCall","src":"14880:17:21"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14902:1:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14913:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14909:3:21"},"nodeType":"YulFunctionCall","src":"14909:6:21"},{"name":"x","nodeType":"YulIdentifier","src":"14917:1:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"14905:3:21"},"nodeType":"YulFunctionCall","src":"14905:14:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14899:2:21"},"nodeType":"YulFunctionCall","src":"14899:21:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14876:3:21"},"nodeType":"YulFunctionCall","src":"14876:45:21"},"nodeType":"YulIf","src":"14873:2:21"},{"nodeType":"YulAssignment","src":"14953:20:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14968:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"14971:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14964:3:21"},"nodeType":"YulFunctionCall","src":"14964:9:21"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"14953:7:21"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14842:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"14845:1:21","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"14851:7:21","type":""}],"src":"14811:168:21"},{"body":{"nodeType":"YulBlock","src":"15033:76:21","statements":[{"body":{"nodeType":"YulBlock","src":"15055:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15057:16:21"},"nodeType":"YulFunctionCall","src":"15057:18:21"},"nodeType":"YulExpressionStatement","src":"15057:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15049:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"15052:1:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15046:2:21"},"nodeType":"YulFunctionCall","src":"15046:8:21"},"nodeType":"YulIf","src":"15043:2:21"},{"nodeType":"YulAssignment","src":"15086:17:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15098:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"15101:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15094:3:21"},"nodeType":"YulFunctionCall","src":"15094:9:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"15086:4:21"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15015:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"15018:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"15024:4:21","type":""}],"src":"14984:125:21"},{"body":{"nodeType":"YulBlock","src":"15146:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15163:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15170:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"15175:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15166:3:21"},"nodeType":"YulFunctionCall","src":"15166:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15156:6:21"},"nodeType":"YulFunctionCall","src":"15156:31:21"},"nodeType":"YulExpressionStatement","src":"15156:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15203:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15206:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15196:6:21"},"nodeType":"YulFunctionCall","src":"15196:15:21"},"nodeType":"YulExpressionStatement","src":"15196:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15227:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15230:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15220:6:21"},"nodeType":"YulFunctionCall","src":"15220:15:21"},"nodeType":"YulExpressionStatement","src":"15220:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"15114:127:21"},{"body":{"nodeType":"YulBlock","src":"15278:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15295:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15302:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"15307:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15298:3:21"},"nodeType":"YulFunctionCall","src":"15298:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15288:6:21"},"nodeType":"YulFunctionCall","src":"15288:31:21"},"nodeType":"YulExpressionStatement","src":"15288:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15335:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15338:4:21","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15328:6:21"},"nodeType":"YulFunctionCall","src":"15328:15:21"},"nodeType":"YulExpressionStatement","src":"15328:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15359:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15362:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15352:6:21"},"nodeType":"YulFunctionCall","src":"15352:15:21"},"nodeType":"YulExpressionStatement","src":"15352:15:21"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"15246:127:21"},{"body":{"nodeType":"YulBlock","src":"15423:86:21","statements":[{"body":{"nodeType":"YulBlock","src":"15487:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15496:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15499:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15489:6:21"},"nodeType":"YulFunctionCall","src":"15489:12:21"},"nodeType":"YulExpressionStatement","src":"15489:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15446:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15457:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15472:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"15477:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15468:3:21"},"nodeType":"YulFunctionCall","src":"15468:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"15481:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15464:3:21"},"nodeType":"YulFunctionCall","src":"15464:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15453:3:21"},"nodeType":"YulFunctionCall","src":"15453:31:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15443:2:21"},"nodeType":"YulFunctionCall","src":"15443:42:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15436:6:21"},"nodeType":"YulFunctionCall","src":"15436:50:21"},"nodeType":"YulIf","src":"15433:2:21"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15412:5:21","type":""}],"src":"15378:131:21"}]},"contents":"{\n    { }\n    function abi_decode_uint128_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_AggregatorV3Interface_$45_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_enum$_LockedLiquidityState_$4288t_addresst_uint128t_uint128t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(lt(value, 2)) { revert(0, 0) }\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := abi_decode_uint128_fromMemory(add(headStart, 64))\n        value3 := abi_decode_uint128_fromMemory(add(headStart, 96))\n        let value_2 := mload(add(headStart, 128))\n        if iszero(eq(value_2, and(value_2, 0xffffffff))) { revert(0, 0) }\n        value4 := value_2\n    }\n    function abi_decode_tuple_t_uint128t_uint128_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint128_fromMemory(headStart)\n        value1 := abi_decode_uint128_fromMemory(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_struct$_optionInfo_$2834_memory_ptr__to_t_address_t_struct$_optionInfo_$2834_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(mload(value1), _1))\n        mstore(add(headStart, 64), mload(add(value1, 32)))\n        mstore(add(headStart, 96), mload(add(value1, 64)))\n        mstore(add(headStart, 128), mload(add(value1, 96)))\n        mstore(add(headStart, 160), iszero(iszero(mload(add(value1, 128)))))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$822__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC721_$2147__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IHegicOperationalTreasury_$4305__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IPoolDDL_$4366__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_enum$_HegicStrategyType_$2844__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 3))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_0b9b509653f27f971bea4c13bb5b5abfce613b87e1bdc4b69df24067d2fbe846__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"amount + data.borrowed less maxL\")\n        mstore(add(headStart, 96), \"imit\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_298b54f5c2d6d68b7f924f52c9cf625a66043f559f95467f29c0a8c171568344__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"too much amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2da5f8e96415ce1cf56ac601f863bdc4eb6ccd09c4a394ab789ec97e291c93e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"invalid value\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4b4a7780333aa6b9ee5ac5e7ddd39defe393b59dd6021792a090a033c7ac9ff4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"option is active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_50f1ea23553b2a3016ed182e7c28c65357cf6b419cbdad2dd808aa43db8da5a2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"option is blocked\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_53c8d4b505fc4a6062e9676e98edcc8d1715f5765c94eec04006fa629d8118d0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"pauseDeDeLend\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_67f3816c2c3c9d26e2c2164d44f506222f0a5a80a1dd5d735b15247affdd74e5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"invalid price\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6edeaa141b7d3e77f4ea518839c3262911a7b9795d395c09a6a820e2445f4aaf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"the price is too low\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_743cf35bb2dc585847026e9713ec3ac2f6c32fb22e1b3dd34a98cfeb20c133a6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"option redeemed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_83fd2a98ff41d2cec5b50c37fb0bbd45d5fc012e1ba0d2538cbf2a4cc6d59b6a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"amount less minBorrowLimit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_84ff6248860ff3ae576a1007948f4d59f9ce511219f65af0fe0e24464b1f433b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"the price is too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_89a3d2cdd8534687d72382851c0df038982c5ac6bd4b7d04f64810684712218f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"you are not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_926a54757c68bd6260dd61923e3390bf053a7ffa44eb6de969b1d147dcb979dc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"strategy not supported\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cbf950b70ead57203d569b7512bd24ad0ab13af8ce0c7ee3f1e9df1f544a0ae1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"you not owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d9653d91002129bb8471bce01d6c8bb486aa66e48f407a0dd073e6b452e1b6e5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 8)\n        mstore(add(headStart, 64), \"too late\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_de12ab57a0daa634f488033127dcfe962870ebf8c9e1b7fcbcea396d614f7ebb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"invalid state\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_febe8c27865ec1cd0744dae89b54d7d193e7b1234f143f6959afd09101e3067f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"there is not enough money in the\")\n        mstore(add(headStart, 96), \" pool\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106102325760003560e01c806366234ffa116101305780639d38d064116100b8578063d88c69101161007c578063d88c691014610593578063d8aed145146105a6578063e260d747146105b9578063f05735db146105c2578063f2fde38b146105d557600080fd5b80639d38d0641461053e5780639e3aa5b114610547578063b13de2661461055a578063b2016bd41461056d578063c37077091461058057600080fd5b80637c3a00fd116100ff5780637c3a00fd146104eb57806389a30271146104f45780638ac2edc1146105075780638da5cb5b1461051a578063913198721461052b57600080fd5b806366234ffa1461048b5780636c016c0014610494578063715018a6146104d05780637a3c4c17146104d857600080fd5b8063415f1240116101be5780634ddde78d116101825780634ddde78d14610440578063587a03c2146104495780635f84f3021461045c5780636198e3391461046f57806362965d8e1461048257600080fd5b8063415f1240146103eb578063425378b4146103fe5780634437152a14610407578063484f13711461041a57806349b274ed1461042d57600080fd5b806324a6665e1161020557806324a6665e146102b05780632cb2f33414610372578063333daaa014610385578063357bcef014610398578063365c7504146103c857600080fd5b806301d73641146102375780630833a6c61461024c5780630ecbcdab1461027257806316f0115b14610285575b600080fd5b61024a61024536600461280f565b6105e8565b005b61025f61025a36600461280f565b6108b6565b6040519081526020015b60405180910390f35b61024a610280366004612841565b6109bb565b600b54610298906001600160a01b031681565b6040516001600160a01b039091168152602001610269565b6103236102be36600461280f565b600c602090815260009182526040918290208054835160a08101855260018301546001600160a01b0390811682526002840154948201949094526003830154948101949094526004820154606085015260059091015460ff1615156080840152169082565b604080516001600160a01b0393841681528251909316602080850191909152820151838201528101516060808401919091528101516080808401919091520151151560a082015260c001610269565b61025f61038036600461280f565b611039565b61024a61039336600461280f565b61109f565b6103bb6103a6366004612705565b600e6020526000908152604090205460ff1681565b60405161026991906128cc565b6103db6103d636600461280f565b6113a0565b6040519015158152602001610269565b61024a6103f936600461280f565b6113f1565b61025f600a5481565b61024a610415366004612705565b611694565b61025f61042836600461280f565b6116be565b6103db61043b36600461280f565b611727565b61025f60095481565b61024a61045736600461280f565b611754565b61024a61046a36600461280f565b611761565b61024a61047d36600461280f565b61176e565b61025f60015481565b61025f60075481565b6104bb6104a236600461280f565b600d602052600090815260409020805460019091015482565b60408051928352602083019190915201610269565b61024a611869565b61025f6104e636600461280f565b61187d565b61025f60065481565b600554610298906001600160a01b031681565b61024a61051536600461280f565b611988565b6000546001600160a01b0316610298565b600454610298906001600160a01b031681565b61025f60025481565b61025f61055536600461280f565b611eb3565b61024a61056836600461280f565b611ede565b600354610298906001600160a01b031681565b61024a61058e36600461280f565b611f2d565b61025f6105a136600461280f565b611f3a565b61024a6105b4366004612841565b6120f7565b61025f60085481565b61025f6105d036600461280f565b6123e5565b61024a6105e3366004612705565b612539565b6000818152600c6020526040902060040154610607906107089061294d565b421161061257600080fd5b6000818152600d602052604081209061062a836108b6565b9050610635836125b2565b815460009082111561079a57825461064d908361294d565b600554600b549192506001600160a01b039081169163a9059cbb9116606461067685605a61292e565b610680919061290c565b865461068c91906128f4565b6040518363ffffffff1660e01b81526004016106a99291906128b3565b602060405180830381600087803b1580156106c357600080fd5b505af11580156106d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fb919061273f565b506005546001600160a01b031663a9059cbb33606461071b85600a61292e565b610725919061290c565b6040518363ffffffff1660e01b81526004016107429291906128b3565b602060405180830381600087803b15801561075c57600080fd5b505af1158015610770573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610794919061273f565b50610824565b600554600b5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926107d09291169086906004016128b3565b602060405180830381600087803b1580156107ea57600080fd5b505af11580156107fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610822919061273f565b505b6000848152600c6020526040902054835485916001600160a01b0316907f7510f2e218f218a66429c54a712775c000c398117e38b240be7ef52310a51e8290606461087086605a61292e565b61087a919061290c565b606461088787600a61292e565b610891919061290c565b604080519384526020840192909252908201526060015b60405180910390a350505050565b60048054604051633755269b60e01b815291820183905260009182916001600160a01b031690633755269b9060240160a06040518083038186803b1580156108fd57600080fd5b505afa158015610911573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109359190612761565b5050604051637632bffb60e01b815260048101879052919350506001600160a01b0383169150637632bffb9060240160206040518083038186803b15801561097c57600080fd5b505afa158015610990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b49190612828565b9392505050565b600b60009054906101000a90046001600160a01b03166001600160a01b031663ae3050e16040518163ffffffff1660e01b815260040160206040518083038186803b158015610a0957600080fd5b505afa158015610a1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a41919061273f565b610a825760405162461bcd60e51b815260206004820152600d60248201526c1c185d5cd95119511953195b99609a1b60448201526064015b60405180910390fd5b6000828152600d6020526040812090610a9a84611eb3565b60048054604051633755269b60e01b81529182018790529192506000916001600160a01b031690633755269b9060240160a06040518083038186803b158015610ae257600080fd5b505afa158015610af6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1a9190612761565b5050505090506000600b60009054906101000a90046001600160a01b03166001600160a01b03166312b583496040518163ffffffff1660e01b815260040160206040518083038186803b158015610b7057600080fd5b505afa158015610b84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba89190612828565b9050600854851015610bfc5760405162461bcd60e51b815260206004820152601a60248201527f616d6f756e74206c657373206d696e426f72726f774c696d69740000000000006044820152606401610a79565b83548390610c0a90876128f4565b1115610c645760405162461bcd60e51b8152602060048201526024808201527f616d6f756e74202b20646174612e626f72726f776564206c657373206d61784c6044820152631a5b5a5d60e21b6064820152608401610a79565b6001826001811115610c7857610c7861297a565b14610cb55760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420737461746560981b6044820152606401610a79565b6000868152600c60205260409020546001600160a01b03163314610d135760405162461bcd60e51b81526020600482015260156024820152743cb7ba9030b932903737ba103a34329037bbb732b960591b6044820152606401610a79565b80851115610d715760405162461bcd60e51b815260206004820152602560248201527f7468657265206973206e6f7420656e6f756768206d6f6e657920696e20746865604482015264081c1bdbdb60da1b6064820152608401610a79565b6000868152600c6020526040902060040154610d9090610e109061294d565b421115610dca5760405162461bcd60e51b8152602060048201526008602482015267746f6f206c61746560c01b6044820152606401610a79565b6000868152600c602052604090206005015460ff1615610e3f57610ded866123e5565b610df68761187d565b11610e3a5760405162461bcd60e51b815260206004820152601460248201527374686520707269636520697320746f6f206c6f7760601b6044820152606401610a79565b610e96565b610e48866123e5565b610e518761187d565b10610e965760405162461bcd60e51b81526020600482015260156024820152740e8d0ca40e0e4d2c6ca40d2e640e8dede40d0d2ced605b1b6044820152606401610a79565b6000610ea1876116be565b9050604051806040016040528082876000015489610ebf91906128f4565b610ec991906128f4565b8152426020918201526000898152600d82526040902082518155910151600190910155600b546001600160a01b0316632bc355ca610f0783896128f4565b6040518263ffffffff1660e01b8152600401610f2591815260200190565b600060405180830381600087803b158015610f3f57600080fd5b505af1158015610f53573d6000803e3d6000fd5b5050600b5460008a8152600c602052604090819020549051633419e74d60e21b81526001600160a01b03928316945063d0679d349350610f9b92909116908a906004016128b3565b600060405180830381600087803b158015610fb557600080fd5b505af1158015610fc9573d6000803e3d6000fd5b5050506000888152600c60209081526040918290206001015482518a81526001600160a01b03909116918101919091524281830152905189925033917f1fdbee5d1bd2901710e8945918b1a052ce67662661a2ccbf68420e4e430f8dab919081900360600190a350505050505050565b6000818152600c60205260408120600581015460ff161561107e5761105d83611f3a565b611066846123e5565b1115611075576109b4836123e5565b6109b483611f3a565b61108783611f3a565b611090846123e5565b1015611075576109b4836123e5565b6110a8816113a0565b6110e45760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420707269636560981b6044820152606401610a79565b6000818152600d60205260408120906110fc836108b6565b9050611107836125b2565b600554600b54835460405163a9059cbb60e01b81526001600160a01b039384169363a9059cbb9361113d939116916004016128b3565b602060405180830381600087803b15801561115757600080fd5b505af115801561116b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118f919061273f565b506005546000848152600c602052604090205483546001600160a01b039283169263a9059cbb9216906064906111c690600a61292e565b6111d0919061290c565b85546111dc91906128f4565b6111e6908561294d565b6040518363ffffffff1660e01b81526004016112039291906128b3565b602060405180830381600087803b15801561121d57600080fd5b505af1158015611231573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611255919061273f565b5060055482546001600160a01b039091169063a9059cbb90339060649061127d90600a61292e565b611287919061290c565b6040518363ffffffff1660e01b81526004016112a49291906128b3565b602060405180830381600087803b1580156112be57600080fd5b505af11580156112d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f6919061273f565b506000838152600c6020526040902054825484916001600160a01b0316907ff28455920a5bcb3aeff7a6bbdd4fed497e6f159330fe161026128b5c381bdd909060649061134490600a61292e565b61134e919061290c565b855461135a91906128f4565b611364908561294d565b8554606461137382600a61292e565b61137d919061290c565b6040805193845260208401929092529082015260600160405180910390a3505050565b6000818152600c60205260408120600581015460ff16156113d6576113c4836123e5565b6113cd8461187d565b11159392505050565b6113df836123e5565b6113e88461187d565b10159392505050565b6113fa81611727565b6114365760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420707269636560981b6044820152606401610a79565b6000818152600d602052604081209061144e836108b6565b9050611459836125b2565b81546000908211156115be578254611471908361294d565b600554600b549192506001600160a01b039081169163a9059cbb9116606461149a85605a61292e565b6114a4919061290c565b86546114b091906128f4565b6040518363ffffffff1660e01b81526004016114cd9291906128b3565b602060405180830381600087803b1580156114e757600080fd5b505af11580156114fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151f919061273f565b506005546001600160a01b031663a9059cbb33606461153f85600a61292e565b611549919061290c565b6040518363ffffffff1660e01b81526004016115669291906128b3565b602060405180830381600087803b15801561158057600080fd5b505af1158015611594573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b8919061273f565b50611648565b600554600b5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926115f49291169086906004016128b3565b602060405180830381600087803b15801561160e57600080fd5b505af1158015611622573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611646919061273f565b505b6000848152600c6020526040902054835485916001600160a01b0316907f4e91025e01b2329df1ec1067d27aafec4d1c41f682ccd794dee04321e0b1e8dc90606461087086605a61292e565b61169c612625565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6000818152600d6020526040812060018101548290603c906116e0904261294d565b6116ea919061290c565b9050600754600654826116fd919061292e565b835461170b9060649061290c565b611715919061292e565b61171f919061290c565b949350505050565b6000818152600c60205260408120600581015460ff161561174b576113c483611f3a565b6113df83611f3a565b61175c612625565b600755565b611769612625565b600655565b6000818152600d6020526040902054156117be5760405162461bcd60e51b81526020600482015260116024820152701bdc1d1a5bdb881a5cc8189b1bd8dad959607a1b6044820152606401610a79565b6003546000828152600c6020526040908190205490516323b872dd60e01b81523060048201526001600160a01b039182166024820152604481018490529116906323b872dd90606401600060405180830381600087803b15801561182157600080fd5b505af1158015611835573d6000803e3d6000fd5b50506040518392503391507f6381d9813cabeb57471b5a7e05078e64845ccdb563146a6911d536f24ce960f190600090a350565b611871612625565b61187b600061267f565b565b6000818152600c6020908152604080832060018101548251635c4443cf60e11b81529251919385936001600160a01b039092169263b888879e926004808201939291829003018186803b1580156118d357600080fd5b505afa1580156118e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061190b9190612722565b6001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561194357600080fd5b505afa158015611957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061197b9190612863565b5091979650505050505050565b600b60009054906101000a90046001600160a01b03166001600160a01b031663ae3050e16040518163ffffffff1660e01b815260040160206040518083038186803b1580156119d657600080fd5b505afa1580156119ea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a0e919061273f565b611a4a5760405162461bcd60e51b815260206004820152600d60248201526c1c185d5cd95119511953195b99609a1b6044820152606401610a79565b60048054604051633755269b60e01b8152918201839052600091829182916001600160a01b0390911690633755269b9060240160a06040518083038186803b158015611a9557600080fd5b505afa158015611aa9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611acd9190612761565b9450505092509250610e108163ffffffff16611ae9919061294d565b421115611b235760405162461bcd60e51b8152602060048201526008602482015267746f6f206c61746560c01b6044820152606401610a79565b6040516335b2346d60e21b81526004810185905260009081906001600160a01b0385169063d6c8d1b490602401604080518083038186803b158015611b6757600080fd5b505afa158015611b7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9f91906127dc565b90925090506001856001811115611bb857611bb861297a565b14611bf85760405162461bcd60e51b815260206004820152601060248201526f6f7074696f6e2069732061637469766560801b6044820152606401610a79565b6003546040516331a9108f60e11b81526004810188905233916001600160a01b031690636352211e9060240160206040518083038186803b158015611c3c57600080fd5b505afa158015611c50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c749190612722565b6001600160a01b031614611cba5760405162461bcd60e51b815260206004820152600d60248201526c3cb7ba903737ba1037bbb732b960991b6044820152606401610a79565b6001600160a01b0384166000908152600e602052604081205460ff166002811115611ce757611ce761297a565b1415611d2e5760405162461bcd60e51b81526020600482015260166024820152751cdd1c985d1959de481b9bdd081cdd5c1c1bdc9d195960521b6044820152606401610a79565b6003546040516323b872dd60e01b8152336004820152306024820152604481018890526001600160a01b03909116906323b872dd90606401600060405180830381600087803b158015611d8057600080fd5b505af1158015611d94573d6000803e3d6000fd5b506000925060019150611da49050565b6001600160a01b0386166000908152600e602052604090205460ff166002811115611dd157611dd161297a565b14611ddd576000611de0565b60015b604080518082018252338152815160a0810183526001600160a01b0398891681526001600160801b03968716602082810191909152959096168683015263ffffffff9096166060808701919091529115156080808701919091528487019586526000998a52600c855298819020955186549088166001600160a01b03199182161787559451805160018801805491909916961695909517909655918301516002850155509281015160038301559182015160048201559201516005909201805492151560ff199093169290921790915550565b6000600154600254611ec4846108b6565b611ece919061290c565b611ed8919061292e565b92915050565b611ee6612625565b611f40811115611f285760405162461bcd60e51b815260206004820152600d60248201526c696e76616c69642076616c756560981b6044820152606401610a79565b600155565b611f35612625565b600855565b6000818152600d60209081526040808320600c909252808320600480549251633755269b60e01b8152908101869052909184916001600160a01b0390911690633755269b9060240160a06040518083038186803b158015611f9a57600080fd5b505afa158015611fae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fd29190612761565b505050915050600080826001600160a01b031663d6c8d1b4886040518263ffffffff1660e01b815260040161200991815260200190565b604080518083038186803b15801561202057600080fd5b505afa158015612034573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061205891906127dc565b6005860154919350915060ff16156120b65760095485546001600160801b038416916120839161292e565b61208d919061290c565b61209890607861292e565b6120ab906001600160801b0383166128f4565b979650505050505050565b60095485546001600160801b038416916120cf9161292e565b6120d9919061290c565b6120e490607861292e565b6120ab906001600160801b03831661294d565b6000828152600d60205260409020546121445760405162461bcd60e51b815260206004820152600f60248201526e1bdc1d1a5bdb881c995919595b5959608a1b6044820152606401610a79565b600061214f836116be565b6000848152600d602052604090205490915061216c9082906128f4565b8211156121ad5760405162461bcd60e51b815260206004820152600f60248201526e1d1bdbc81b5d58da08185b5bdd5b9d608a1b6044820152606401610a79565b6000838152600c60205260409020546001600160a01b031633146121d057600080fd5b6000838152600d602052604081205483906121ec9084906128f4565b6121f6919061294d565b600b549091506001600160a01b0316631b45a68d612214848661294d565b6040518263ffffffff1660e01b815260040161223291815260200190565b600060405180830381600087803b15801561224c57600080fd5b505af1158015612260573d6000803e3d6000fd5b505060408051808201825284815242602080830191825260008a8152600d8252848120935184559151600190930192909255600554600c9092528290205491516323b872dd60e01b81526001600160a01b03928316600482015230602482015260448101889052911692506323b872dd9150606401602060405180830381600087803b1580156122ef57600080fd5b505af1158015612303573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612327919061273f565b50600554600b5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb9261235e9291169087906004016128b3565b602060405180830381600087803b15801561237857600080fd5b505af115801561238c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123b0919061273f565b50604051838152849033907f77c6871227e5d2dec8dadd5354f78453203e22e669cd0ec4c19d9a8c5edb31d0906020016108a8565b60048054604051633755269b60e01b815291820183905260009182916001600160a01b031690633755269b9060240160a06040518083038186803b15801561242c57600080fd5b505afa158015612440573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124649190612761565b50506040516335b2346d60e21b81526004810187905291935060009250506001600160a01b0383169063d6c8d1b490602401604080518083038186803b1580156124ad57600080fd5b505afa1580156124c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124e591906127dc565b6000868152600c602052604090206005015490925060ff16159050612528576064600a54606461251591906128f4565b611715906001600160801b03841661292e565b6064600a546064612515919061294d565b612541612625565b6001600160a01b0381166125a65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610a79565b6125af8161267f565b50565b6000818152600c6020526040908190206001810154915163b07f0a4160e01b81526004810184905290916001600160a01b03169063b07f0a4190602401600060405180830381600087803b15801561260957600080fd5b505af115801561261d573d6000803e3d6000fd5b505050505050565b6000546001600160a01b0316331461187b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a79565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160801b03811681146126e657600080fd5b919050565b805169ffffffffffffffffffff811681146126e657600080fd5b60006020828403121561271757600080fd5b81356109b481612990565b60006020828403121561273457600080fd5b81516109b481612990565b60006020828403121561275157600080fd5b815180151581146109b457600080fd5b600080600080600060a0868803121561277957600080fd5b85516002811061278857600080fd5b602087015190955061279981612990565b93506127a7604087016126cf565b92506127b5606087016126cf565b9150608086015163ffffffff811681146127ce57600080fd5b809150509295509295909350565b600080604083850312156127ef57600080fd5b6127f8836126cf565b9150612806602084016126cf565b90509250929050565b60006020828403121561282157600080fd5b5035919050565b60006020828403121561283a57600080fd5b5051919050565b6000806040838503121561285457600080fd5b50508035926020909101359150565b600080600080600060a0868803121561287b57600080fd5b612884866126eb565b94506020860151935060408601519250606086015191506128a7608087016126eb565b90509295509295909350565b6001600160a01b03929092168252602082015260400190565b60208101600383106128ee57634e487b7160e01b600052602160045260246000fd5b91905290565b6000821982111561290757612907612964565b500190565b60008261292957634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561294857612948612964565b500290565b60008282101561295f5761295f612964565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b6001600160a01b03811681146125af57600080fdfea264697066735822122002cd4ba8347dc5f014920eeec25a24c97faf00e60a855779278672fd57480c8c64736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x232 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x66234FFA GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x9D38D064 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD88C6910 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD88C6910 EQ PUSH2 0x593 JUMPI DUP1 PUSH4 0xD8AED145 EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0xE260D747 EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0xF05735DB EQ PUSH2 0x5C2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9D38D064 EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0x9E3AA5B1 EQ PUSH2 0x547 JUMPI DUP1 PUSH4 0xB13DE266 EQ PUSH2 0x55A JUMPI DUP1 PUSH4 0xB2016BD4 EQ PUSH2 0x56D JUMPI DUP1 PUSH4 0xC3707709 EQ PUSH2 0x580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7C3A00FD GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x7C3A00FD EQ PUSH2 0x4EB JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x4F4 JUMPI DUP1 PUSH4 0x8AC2EDC1 EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0x91319872 EQ PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x66234FFA EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0x6C016C00 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0x7A3C4C17 EQ PUSH2 0x4D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x415F1240 GT PUSH2 0x1BE JUMPI DUP1 PUSH4 0x4DDDE78D GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x4DDDE78D EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x587A03C2 EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0x5F84F302 EQ PUSH2 0x45C JUMPI DUP1 PUSH4 0x6198E339 EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0x62965D8E EQ PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x415F1240 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0x425378B4 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x4437152A EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0x484F1371 EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0x49B274ED EQ PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x24A6665E GT PUSH2 0x205 JUMPI DUP1 PUSH4 0x24A6665E EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x2CB2F334 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x333DAAA0 EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0x357BCEF0 EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0x365C7504 EQ PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1D73641 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x833A6C6 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xECBCDAB EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x16F0115B EQ PUSH2 0x285 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24A PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x5E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25F PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0x2841 JUMP JUMPDEST PUSH2 0x9BB JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x298 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x269 JUMP JUMPDEST PUSH2 0x323 PUSH2 0x2BE CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD PUSH1 0xA0 DUP2 ADD DUP6 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x2 DUP5 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP4 ADD SLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE DUP3 MLOAD SWAP1 SWAP4 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 ADD MLOAD DUP4 DUP3 ADD MSTORE DUP2 ADD MLOAD PUSH1 0x60 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 ADD MLOAD PUSH1 0x80 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD MLOAD ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x269 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x380 CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x1039 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x393 CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x109F JUMP JUMPDEST PUSH2 0x3BB PUSH2 0x3A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2705 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x28CC JUMP JUMPDEST PUSH2 0x3DB PUSH2 0x3D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x269 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x3F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x13F1 JUMP JUMPDEST PUSH2 0x25F PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x415 CALLDATASIZE PUSH1 0x4 PUSH2 0x2705 JUMP JUMPDEST PUSH2 0x1694 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x428 CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x3DB PUSH2 0x43B CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x1727 JUMP JUMPDEST PUSH2 0x25F PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x457 CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x1754 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x46A CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x1761 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x47D CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x176E JUMP JUMPDEST PUSH2 0x25F PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x25F PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4BB PUSH2 0x4A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x269 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x1869 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x4E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x187D JUMP JUMPDEST PUSH2 0x25F PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x298 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x515 CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x1988 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x298 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x298 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x25F PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x555 CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x1EB3 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x568 CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x1EDE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x298 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x58E CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x25F PUSH2 0x5A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0x24A PUSH2 0x5B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2841 JUMP JUMPDEST PUSH2 0x20F7 JUMP JUMPDEST PUSH2 0x25F PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x5D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x280F JUMP JUMPDEST PUSH2 0x23E5 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x5E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2705 JUMP JUMPDEST PUSH2 0x2539 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x607 SWAP1 PUSH2 0x708 SWAP1 PUSH2 0x294D JUMP JUMPDEST TIMESTAMP GT PUSH2 0x612 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x62A DUP4 PUSH2 0x8B6 JUMP JUMPDEST SWAP1 POP PUSH2 0x635 DUP4 PUSH2 0x25B2 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 GT ISZERO PUSH2 0x79A JUMPI DUP3 SLOAD PUSH2 0x64D SWAP1 DUP4 PUSH2 0x294D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xB SLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 PUSH4 0xA9059CBB SWAP2 AND PUSH1 0x64 PUSH2 0x676 DUP6 PUSH1 0x5A PUSH2 0x292E JUMP JUMPDEST PUSH2 0x680 SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST DUP7 SLOAD PUSH2 0x68C SWAP2 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A9 SWAP3 SWAP2 SWAP1 PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6FB SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH1 0x64 PUSH2 0x71B DUP6 PUSH1 0xA PUSH2 0x292E JUMP JUMPDEST PUSH2 0x725 SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x742 SWAP3 SWAP2 SWAP1 PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x75C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x770 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x794 SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST POP PUSH2 0x824 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH2 0x7D0 SWAP3 SWAP2 AND SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x822 SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 SLOAD DUP6 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x7510F2E218F218A66429C54A712775C000C398117E38B240BE7EF52310A51E82 SWAP1 PUSH1 0x64 PUSH2 0x870 DUP7 PUSH1 0x5A PUSH2 0x292E JUMP JUMPDEST PUSH2 0x87A SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST PUSH1 0x64 PUSH2 0x887 DUP8 PUSH1 0xA PUSH2 0x292E JUMP JUMPDEST PUSH2 0x891 SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3755269B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x3755269B SWAP1 PUSH1 0x24 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x911 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x935 SWAP2 SWAP1 PUSH2 0x2761 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x7632BFFB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE SWAP2 SWAP4 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 POP PUSH4 0x7632BFFB SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x97C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x990 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B4 SWAP2 SWAP1 PUSH2 0x2828 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAE3050E1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA1D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA41 SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST PUSH2 0xA82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1C185D5CD95119511953195B99 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0xA9A DUP5 PUSH2 0x1EB3 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3755269B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x3755269B SWAP1 PUSH1 0x24 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAF6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB1A SWAP2 SWAP1 PUSH2 0x2761 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x12B58349 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB84 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA8 SWAP2 SWAP1 PUSH2 0x2828 JUMP JUMPDEST SWAP1 POP PUSH1 0x8 SLOAD DUP6 LT ISZERO PUSH2 0xBFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616D6F756E74206C657373206D696E426F72726F774C696D6974000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST DUP4 SLOAD DUP4 SWAP1 PUSH2 0xC0A SWAP1 DUP8 PUSH2 0x28F4 JUMP JUMPDEST GT ISZERO PUSH2 0xC64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x616D6F756E74202B20646174612E626F72726F776564206C657373206D61784C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1A5B5A5D PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xC78 JUMPI PUSH2 0xC78 PUSH2 0x297A JUMP JUMPDEST EQ PUSH2 0xCB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x696E76616C6964207374617465 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x3CB7BA9030B932903737BA103A34329037BBB732B9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xD71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7468657265206973206E6F7420656E6F756768206D6F6E657920696E20746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x81C1BDBDB PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0xD90 SWAP1 PUSH2 0xE10 SWAP1 PUSH2 0x294D JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0xDCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x746F6F206C617465 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE3F JUMPI PUSH2 0xDED DUP7 PUSH2 0x23E5 JUMP JUMPDEST PUSH2 0xDF6 DUP8 PUSH2 0x187D JUMP JUMPDEST GT PUSH2 0xE3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x74686520707269636520697320746F6F206C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH2 0xE96 JUMP JUMPDEST PUSH2 0xE48 DUP7 PUSH2 0x23E5 JUMP JUMPDEST PUSH2 0xE51 DUP8 PUSH2 0x187D JUMP JUMPDEST LT PUSH2 0xE96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0xE8D0CA40E0E4D2C6CA40D2E640E8DEDE40D0D2CED PUSH1 0x5B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA1 DUP8 PUSH2 0x16BE JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP8 PUSH1 0x0 ADD SLOAD DUP10 PUSH2 0xEBF SWAP2 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST PUSH2 0xEC9 SWAP2 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST DUP2 MSTORE TIMESTAMP PUSH1 0x20 SWAP2 DUP3 ADD MSTORE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0xD DUP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 MLOAD DUP2 SSTORE SWAP2 ADD MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2BC355CA PUSH2 0xF07 DUP4 DUP10 PUSH2 0x28F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF25 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0xB SLOAD PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x3419E74D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP5 POP PUSH4 0xD0679D34 SWAP4 POP PUSH2 0xF9B SWAP3 SWAP1 SWAP2 AND SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 MLOAD DUP11 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE TIMESTAMP DUP2 DUP4 ADD MSTORE SWAP1 MLOAD DUP10 SWAP3 POP CALLER SWAP2 PUSH32 0x1FDBEE5D1BD2901710E8945918B1A052CE67662661A2CCBF68420E4E430F8DAB SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x107E JUMPI PUSH2 0x105D DUP4 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0x1066 DUP5 PUSH2 0x23E5 JUMP JUMPDEST GT ISZERO PUSH2 0x1075 JUMPI PUSH2 0x9B4 DUP4 PUSH2 0x23E5 JUMP JUMPDEST PUSH2 0x9B4 DUP4 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0x1087 DUP4 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0x1090 DUP5 PUSH2 0x23E5 JUMP JUMPDEST LT ISZERO PUSH2 0x1075 JUMPI PUSH2 0x9B4 DUP4 PUSH2 0x23E5 JUMP JUMPDEST PUSH2 0x10A8 DUP2 PUSH2 0x13A0 JUMP JUMPDEST PUSH2 0x10E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x696E76616C6964207072696365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x10FC DUP4 PUSH2 0x8B6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1107 DUP4 PUSH2 0x25B2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xB SLOAD DUP4 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH2 0x113D SWAP4 SWAP2 AND SWAP2 PUSH1 0x4 ADD PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x116B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x118F SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0xA9059CBB SWAP3 AND SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x11C6 SWAP1 PUSH1 0xA PUSH2 0x292E JUMP JUMPDEST PUSH2 0x11D0 SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST DUP6 SLOAD PUSH2 0x11DC SWAP2 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST PUSH2 0x11E6 SWAP1 DUP6 PUSH2 0x294D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1203 SWAP3 SWAP2 SWAP1 PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x121D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1231 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1255 SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST POP PUSH1 0x5 SLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 CALLER SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x127D SWAP1 PUSH1 0xA PUSH2 0x292E JUMP JUMPDEST PUSH2 0x1287 SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A4 SWAP3 SWAP2 SWAP1 PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12F6 SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SLOAD DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xF28455920A5BCB3AEFF7A6BBDD4FED497E6F159330FE161026128B5C381BDD90 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x1344 SWAP1 PUSH1 0xA PUSH2 0x292E JUMP JUMPDEST PUSH2 0x134E SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST DUP6 SLOAD PUSH2 0x135A SWAP2 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST PUSH2 0x1364 SWAP1 DUP6 PUSH2 0x294D JUMP JUMPDEST DUP6 SLOAD PUSH1 0x64 PUSH2 0x1373 DUP3 PUSH1 0xA PUSH2 0x292E JUMP JUMPDEST PUSH2 0x137D SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x13D6 JUMPI PUSH2 0x13C4 DUP4 PUSH2 0x23E5 JUMP JUMPDEST PUSH2 0x13CD DUP5 PUSH2 0x187D JUMP JUMPDEST GT ISZERO SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x13DF DUP4 PUSH2 0x23E5 JUMP JUMPDEST PUSH2 0x13E8 DUP5 PUSH2 0x187D JUMP JUMPDEST LT ISZERO SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x13FA DUP2 PUSH2 0x1727 JUMP JUMPDEST PUSH2 0x1436 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x696E76616C6964207072696365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x144E DUP4 PUSH2 0x8B6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1459 DUP4 PUSH2 0x25B2 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 GT ISZERO PUSH2 0x15BE JUMPI DUP3 SLOAD PUSH2 0x1471 SWAP1 DUP4 PUSH2 0x294D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xB SLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 PUSH4 0xA9059CBB SWAP2 AND PUSH1 0x64 PUSH2 0x149A DUP6 PUSH1 0x5A PUSH2 0x292E JUMP JUMPDEST PUSH2 0x14A4 SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST DUP7 SLOAD PUSH2 0x14B0 SWAP2 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14CD SWAP3 SWAP2 SWAP1 PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x151F SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH1 0x64 PUSH2 0x153F DUP6 PUSH1 0xA PUSH2 0x292E JUMP JUMPDEST PUSH2 0x1549 SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1566 SWAP3 SWAP2 SWAP1 PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1594 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15B8 SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST POP PUSH2 0x1648 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH2 0x15F4 SWAP3 SWAP2 AND SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x160E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1622 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1646 SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 SLOAD DUP6 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x4E91025E01B2329DF1EC1067D27AAFEC4D1C41F682CCD794DEE04321E0B1E8DC SWAP1 PUSH1 0x64 PUSH2 0x870 DUP7 PUSH1 0x5A PUSH2 0x292E JUMP JUMPDEST PUSH2 0x169C PUSH2 0x2625 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD DUP3 SWAP1 PUSH1 0x3C SWAP1 PUSH2 0x16E0 SWAP1 TIMESTAMP PUSH2 0x294D JUMP JUMPDEST PUSH2 0x16EA SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP3 PUSH2 0x16FD SWAP2 SWAP1 PUSH2 0x292E JUMP JUMPDEST DUP4 SLOAD PUSH2 0x170B SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x290C JUMP JUMPDEST PUSH2 0x1715 SWAP2 SWAP1 PUSH2 0x292E JUMP JUMPDEST PUSH2 0x171F SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x174B JUMPI PUSH2 0x13C4 DUP4 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0x13DF DUP4 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0x175C PUSH2 0x2625 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH2 0x1769 PUSH2 0x2625 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x17BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1BDC1D1A5BDB881A5CC8189B1BD8DAD959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1821 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1835 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP4 SWAP3 POP CALLER SWAP2 POP PUSH32 0x6381D9813CABEB57471B5A7E05078E64845CCDB563146A6911D536F24CE960F1 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x1871 PUSH2 0x2625 JUMP JUMPDEST PUSH2 0x187B PUSH1 0x0 PUSH2 0x267F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD DUP3 MLOAD PUSH4 0x5C4443CF PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 MLOAD SWAP2 SWAP4 DUP6 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0xB888879E SWAP3 PUSH1 0x4 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x190B SWAP2 SWAP1 PUSH2 0x2722 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1943 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1957 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x197B SWAP2 SWAP1 PUSH2 0x2863 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAE3050E1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A0E SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST PUSH2 0x1A4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1C185D5CD95119511953195B99 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3755269B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x3755269B SWAP1 PUSH1 0x24 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AA9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1ACD SWAP2 SWAP1 PUSH2 0x2761 JUMP JUMPDEST SWAP5 POP POP POP SWAP3 POP SWAP3 POP PUSH2 0xE10 DUP2 PUSH4 0xFFFFFFFF AND PUSH2 0x1AE9 SWAP2 SWAP1 PUSH2 0x294D JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x1B23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x746F6F206C617465 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x35B2346D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xD6C8D1B4 SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B9F SWAP2 SWAP1 PUSH2 0x27DC JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 DUP6 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1BB8 JUMPI PUSH2 0x1BB8 PUSH2 0x297A JUMP JUMPDEST EQ PUSH2 0x1BF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x6F7074696F6E20697320616374697665 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C50 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C74 SWAP2 SWAP1 PUSH2 0x2722 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1CBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x3CB7BA903737BA1037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1CE7 JUMPI PUSH2 0x1CE7 PUSH2 0x297A JUMP JUMPDEST EQ ISZERO PUSH2 0x1D2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x1CDD1C985D1959DE481B9BDD081CDD5C1C1BDC9D1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D94 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP PUSH2 0x1DA4 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1DD1 JUMPI PUSH2 0x1DD1 PUSH2 0x297A JUMP JUMPDEST EQ PUSH2 0x1DDD JUMPI PUSH1 0x0 PUSH2 0x1DE0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE CALLER DUP2 MSTORE DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP7 DUP8 AND PUSH1 0x20 DUP3 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP6 SWAP1 SWAP7 AND DUP7 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP7 AND PUSH1 0x60 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x80 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 DUP8 ADD SWAP6 DUP7 MSTORE PUSH1 0x0 SWAP10 DUP11 MSTORE PUSH1 0xC DUP6 MSTORE SWAP9 DUP2 SWAP1 KECCAK256 SWAP6 MLOAD DUP7 SLOAD SWAP1 DUP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP8 SSTORE SWAP5 MLOAD DUP1 MLOAD PUSH1 0x1 DUP9 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP10 AND SWAP7 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP7 SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE POP SWAP3 DUP2 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE SWAP2 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE SWAP3 ADD MLOAD PUSH1 0x5 SWAP1 SWAP3 ADD DUP1 SLOAD SWAP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH2 0x1EC4 DUP5 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x1ECE SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST PUSH2 0x1ED8 SWAP2 SWAP1 PUSH2 0x292E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EE6 PUSH2 0x2625 JUMP JUMPDEST PUSH2 0x1F40 DUP2 GT ISZERO PUSH2 0x1F28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x696E76616C69642076616C7565 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH2 0x1F35 PUSH2 0x2625 JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xC SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x4 DUP1 SLOAD SWAP3 MLOAD PUSH4 0x3755269B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x3755269B SWAP1 PUSH1 0x24 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FAE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FD2 SWAP2 SWAP1 PUSH2 0x2761 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD6C8D1B4 DUP9 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2009 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2020 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2034 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2058 SWAP2 SWAP1 PUSH2 0x27DC JUMP JUMPDEST PUSH1 0x5 DUP7 ADD SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x20B6 JUMPI PUSH1 0x9 SLOAD DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND SWAP2 PUSH2 0x2083 SWAP2 PUSH2 0x292E JUMP JUMPDEST PUSH2 0x208D SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST PUSH2 0x2098 SWAP1 PUSH1 0x78 PUSH2 0x292E JUMP JUMPDEST PUSH2 0x20AB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH2 0x28F4 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND SWAP2 PUSH2 0x20CF SWAP2 PUSH2 0x292E JUMP JUMPDEST PUSH2 0x20D9 SWAP2 SWAP1 PUSH2 0x290C JUMP JUMPDEST PUSH2 0x20E4 SWAP1 PUSH1 0x78 PUSH2 0x292E JUMP JUMPDEST PUSH2 0x20AB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH2 0x294D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2144 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1BDC1D1A5BDB881C995919595B5959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x214F DUP4 PUSH2 0x16BE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x216C SWAP1 DUP3 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x21AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1D1BDBC81B5D58DA08185B5BDD5B9D PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x21D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP4 SWAP1 PUSH2 0x21EC SWAP1 DUP5 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST PUSH2 0x21F6 SWAP2 SWAP1 PUSH2 0x294D JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1B45A68D PUSH2 0x2214 DUP5 DUP7 PUSH2 0x294D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2232 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x224C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2260 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP5 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0xD DUP3 MSTORE DUP5 DUP2 KECCAK256 SWAP4 MLOAD DUP5 SSTORE SWAP2 MLOAD PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x5 SLOAD PUSH1 0xC SWAP1 SWAP3 MSTORE DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP9 SWAP1 MSTORE SWAP2 AND SWAP3 POP PUSH4 0x23B872DD SWAP2 POP PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2303 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2327 SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH2 0x235E SWAP3 SWAP2 AND SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x238C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23B0 SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE DUP5 SWAP1 CALLER SWAP1 PUSH32 0x77C6871227E5D2DEC8DADD5354F78453203E22E669CD0EC4C19D9A8C5EDB31D0 SWAP1 PUSH1 0x20 ADD PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3755269B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x3755269B SWAP1 PUSH1 0x24 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x242C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2440 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2464 SWAP2 SWAP1 PUSH2 0x2761 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x35B2346D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE SWAP2 SWAP4 POP PUSH1 0x0 SWAP3 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xD6C8D1B4 SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24E5 SWAP2 SWAP1 PUSH2 0x27DC JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 SWAP3 POP PUSH1 0xFF AND ISZERO SWAP1 POP PUSH2 0x2528 JUMPI PUSH1 0x64 PUSH1 0xA SLOAD PUSH1 0x64 PUSH2 0x2515 SWAP2 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST PUSH2 0x1715 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND PUSH2 0x292E JUMP JUMPDEST PUSH1 0x64 PUSH1 0xA SLOAD PUSH1 0x64 PUSH2 0x2515 SWAP2 SWAP1 PUSH2 0x294D JUMP JUMPDEST PUSH2 0x2541 PUSH2 0x2625 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x25A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH2 0x25AF DUP2 PUSH2 0x267F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP2 MLOAD PUSH4 0xB07F0A41 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB07F0A41 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x261D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x187B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x26E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2717 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9B4 DUP2 PUSH2 0x2990 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x9B4 DUP2 PUSH2 0x2990 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2751 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x9B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2779 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH1 0x2 DUP2 LT PUSH2 0x2788 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD SWAP1 SWAP6 POP PUSH2 0x2799 DUP2 PUSH2 0x2990 JUMP JUMPDEST SWAP4 POP PUSH2 0x27A7 PUSH1 0x40 DUP8 ADD PUSH2 0x26CF JUMP JUMPDEST SWAP3 POP PUSH2 0x27B5 PUSH1 0x60 DUP8 ADD PUSH2 0x26CF JUMP JUMPDEST SWAP2 POP PUSH1 0x80 DUP7 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x27CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27F8 DUP4 PUSH2 0x26CF JUMP JUMPDEST SWAP2 POP PUSH2 0x2806 PUSH1 0x20 DUP5 ADD PUSH2 0x26CF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2821 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x283A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2854 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x287B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2884 DUP7 PUSH2 0x26EB JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x28A7 PUSH1 0x80 DUP8 ADD PUSH2 0x26EB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0x28EE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2907 JUMPI PUSH2 0x2907 PUSH2 0x2964 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2929 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2948 JUMPI PUSH2 0x2948 PUSH2 0x2964 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x295F JUMPI PUSH2 0x295F PUSH2 0x2964 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x25AF JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xCD 0x4B 0xA8 CALLVALUE PUSH30 0xC5F014920EEEC25A24C97FAF00E60A855779278672FD57480C8C64736F6C PUSH4 0x43000806 STOP CALLER ","sourceMap":"300:13228:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7577:769;;;;;;:::i;:::-;;:::i;:::-;;13132:204;;;;;;:::i;:::-;;:::i;:::-;;;13493:25:21;;;13481:2;13466:18;13132:204:16;;;;;;;;5173:1691;;;;;;:::i;:::-;;:::i;774:20::-;;;;;-1:-1:-1;;;;;774:20:16;;;;;;-1:-1:-1;;;;;3797:32:21;;;3779:51;;3767:2;3752:18;774:20:16;3734:102:21;1227:56:16;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1227:56:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4508:15:21;;;4490:34;;4564:13;;4560:22;;;4555:2;4540:18;;;4533:50;;;;4625:15;;4619:22;4599:18;;;4592:50;4684:15;;4678:22;4673:2;4658:18;;;4651:50;;;;4744:15;;4738:22;4732:3;4717:19;;;4710:51;;;;4818:16;4812:23;4805:31;4798:39;4470:3;4777:19;;4770:68;4439:3;4424:19;1227:56:16;4406:438:21;12677:449:16;;;;;;:::i;:::-;;:::i;8352:692::-;;;;;;:::i;:::-;;:::i;1355:57::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;10872:329::-;;;;;;:::i;:::-;;:::i;:::-;;;5293:14:21;;5286:22;5268:41;;5256:2;5241:18;10872:329:16;5223:92:21;6870:701:16;;;;;;:::i;:::-;;:::i;735:32::-;;;;;;3675:90;;;;;;:::i;:::-;;:::i;9050:408::-;;;;;;:::i;:::-;;:::i;10562:304::-;;;;;;:::i;:::-;;:::i;694:34::-;;;;;;3449:114;;;;;;:::i;:::-;;:::i;3347:96::-;;;;;;:::i;:::-;;:::i;10272:284::-;;;;;;:::i;:::-;;:::i;363:18::-;;;;;;606:46;;;;;;1289:60;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;14053:25:21;;;14109:2;14094:18;;14087:34;;;;14026:18;1289:60:16;14008:119:21;1831:101:1;;;:::i;11207:315:16:-;;;;;;:::i;:::-;;:::i;544:56::-;;;;;;519:18;;;;;-1:-1:-1;;;;;519:18:16;;;3771:1259;;;;;;:::i;:::-;;:::i;1201:85:1:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:1;1201:85;;465:48:16;;;;;-1:-1:-1;;;;;465:48:16;;;387:35;;;;;;5036:131;;;;;;:::i;:::-;;:::i;3214:127::-;;;;;;:::i;:::-;;:::i;429:30::-;;;;;-1:-1:-1;;;;;429:30:16;;;3569:100;;;;;;:::i;:::-;;:::i;12000:671::-;;;;;;:::i;:::-;;:::i;9464:802::-;;;;;;:::i;:::-;;:::i;659:29::-;;;;;;11528:467;;;;;;:::i;:::-;;:::i;2081:198:1:-;;;;;;:::i;:::-;;:::i;7577:769:16:-;7671:18;;;;:14;:18;;;;;:38;;;:48;;7712:7;;7671:48;:::i;:::-;7653:15;:66;7632:97;;;;;;7739:29;7771:20;;;:16;:20;;;;;;7818:18;7788:2;7818:14;:18::i;:::-;7801:35;;7846:18;7861:2;7846:14;:18::i;:::-;7913:13;;7874:12;;7904:22;;7900:270;;;7958:13;;7949:22;;:6;:22;:::i;:::-;7985:4;;8007;;7942:29;;-1:-1:-1;;;;;;7985:4:16;;;;:13;;8007:4;8036:3;8028:7;7942:29;8033:2;8028:7;:::i;:::-;:11;;;;:::i;:::-;8014:13;;:25;;;;:::i;:::-;7985:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8054:4:16;;-1:-1:-1;;;;;8054:4:16;:13;8068:10;8088:3;8080:7;:4;8085:2;8080:7;:::i;:::-;:11;;;;:::i;:::-;8054:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7900:270;;;8123:4;;8145;;8123:36;;-1:-1:-1;;;8123:36:16;;-1:-1:-1;;;;;8123:4:16;;;;:13;;:36;;8145:4;;;8152:6;;8123:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7900:270;8212:18;;;;:14;:18;;;;;:24;8266:13;;8250:2;;-1:-1:-1;;;;;8212:24:16;;8184:155;;8301:3;8293:7;:4;8298:2;8293:7;:::i;:::-;:11;;;;:::i;:::-;8326:3;8318:7;:4;8323:2;8318:7;:::i;:::-;:11;;;;:::i;:::-;8184:155;;;14334:25:21;;;14390:2;14375:18;;14368:34;;;;14418:18;;;14411:34;14322:2;14307:18;8184:155:16;;;;;;;;7622:724;;;7577:769;:::o;13132:204::-;13240:15;;;:35;;-1:-1:-1;;;13240:35:16;;;;;13493:25:21;;;13189:14:16;;;;-1:-1:-1;;;;;13240:15:16;;:31;;13466:18:21;;13240:35:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;13292:37:16;;-1:-1:-1;;;13292:37:16;;;;;13493:25:21;;;13215:60:16;;-1:-1:-1;;;;;;;13292:33:16;;;-1:-1:-1;13292:33:16;;13466:18:21;;13292:37:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13285:44;13132:204;-1:-1:-1;;;13132:204:16:o;5173:1691::-;5244:4;;;;;;;;;-1:-1:-1;;;;;5244:4:16;-1:-1:-1;;;;;5244:17:16;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5236:45;;;;-1:-1:-1;;;5236:45:16;;8979:2:21;5236:45:16;;;8961:21:21;9018:2;8998:18;;;8991:30;-1:-1:-1;;;9037:18:21;;;9030:43;9090:18;;5236:45:16;;;;;;;;;5291:29;5323:20;;;:16;:20;;;;;;5372:18;5340:2;5372:14;:18::i;:::-;5523:15;;;:35;;-1:-1:-1;;;5523:35:16;;;;;13493:25:21;;;5353:37:16;;-1:-1:-1;5414:52:16;;-1:-1:-1;;;;;5523:15:16;;:31;;13466:18:21;;5523:35:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5400:158;;;;;;5568:20;5591:4;;;;;;;;;-1:-1:-1;;;;;5591:4:16;-1:-1:-1;;;;;5591:20:16;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5568:45;;5642:14;;5632:6;:24;;5624:63;;;;-1:-1:-1;;;5624:63:16;;10356:2:21;5624:63:16;;;10338:21:21;10395:2;10375:18;;;10368:30;10434:28;10414:18;;;10407:56;10480:18;;5624:63:16;10328:176:21;5624:63:16;5714:13;;5731:8;;5705:22;;:6;:22;:::i;:::-;:34;;5697:83;;;;-1:-1:-1;;;5697:83:16;;6790:2:21;5697:83:16;;;6772:21:21;6829:2;6809:18;;;6802:30;6868:34;6848:18;;;6841:62;-1:-1:-1;;;6919:18:21;;;6912:34;6963:19;;5697:83:16;6762:226:21;5697:83:16;5807:53;5798:5;:62;;;;;;;;:::i;:::-;;5790:88;;;;-1:-1:-1;;;5790:88:16;;12801:2:21;5790:88:16;;;12783:21:21;12840:2;12820:18;;;12813:30;-1:-1:-1;;;12859:18:21;;;12852:43;12912:18;;5790:88:16;12773:163:21;5790:88:16;5910:18;;;;:14;:18;;;;;:24;-1:-1:-1;;;;;5910:24:16;5896:10;:38;5888:72;;;;-1:-1:-1;;;5888:72:16;;11061:2:21;5888:72:16;;;11043:21:21;11100:2;11080:18;;;11073:30;-1:-1:-1;;;11119:18:21;;;11112:51;11180:18;;5888:72:16;11033:171:21;5888:72:16;5988:12;5978:6;:22;;5970:72;;;;-1:-1:-1;;;5970:72:16;;13143:2:21;5970:72:16;;;13125:21:21;13182:2;13162:18;;;13155:30;13221:34;13201:18;;;13194:62;-1:-1:-1;;;13272:18:21;;;13265:35;13317:19;;5970:72:16;13115:227:21;5970:72:16;6079:18;;;;:14;:18;;;;;:38;;;:46;;6120:5;;6079:46;:::i;:::-;6060:15;:65;;6052:86;;;;-1:-1:-1;;;6052:86:16;;12465:2:21;6052:86:16;;;12447:21:21;12504:1;12484:18;;;12477:29;-1:-1:-1;;;12522:18:21;;;12515:38;12570:18;;6052:86:16;12437:157:21;6052:86:16;6152:18;;;;:14;:18;;;;;:34;;;;;6148:235;;;6229:17;6243:2;6229:13;:17::i;:::-;6210:16;6223:2;6210:12;:16::i;:::-;:36;6202:69;;;;-1:-1:-1;;;6202:69:16;;9663:2:21;6202:69:16;;;9645:21:21;9702:2;9682:18;;;9675:30;-1:-1:-1;;;9721:18:21;;;9714:50;9781:18;;6202:69:16;9635:170:21;6202:69:16;6148:235;;;6329:17;6343:2;6329:13;:17::i;:::-;6310:16;6323:2;6310:12;:16::i;:::-;:36;6302:70;;;;-1:-1:-1;;;6302:70:16;;10711:2:21;6302:70:16;;;10693:21:21;10750:2;10730:18;;;10723:30;-1:-1:-1;;;10769:18:21;;;10762:51;10830:18;;6302:70:16;10683:171:21;6302:70:16;6392:19;6414:24;6435:2;6414:20;:24::i;:::-;6392:46;;6471:105;;;;;;;;6526:11;6510:4;:13;;;6501:6;:22;;;;:::i;:::-;:36;;;;:::i;:::-;6471:105;;6551:15;6471:105;;;;;-1:-1:-1;6448:20:16;;;:16;:20;;;;;:128;;;;;;;;;;;;6586:4;;-1:-1:-1;;;;;6586:4:16;:19;6606:20;6615:11;6606:6;:20;:::i;:::-;6586:41;;;;;;;;;;;;;13493:25:21;;13481:2;13466:18;;13448:76;6586:41:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6637:4:16;;;6647:18;;;:14;:18;;;;;;;:24;6637:43;;-1:-1:-1;;;6637:43:16;;-1:-1:-1;;;;;6637:4:16;;;;-1:-1:-1;6637:9:16;;-1:-1:-1;6637:43:16;;6647:24;;;;6673:6;;6637:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6775:18:16;;;;:14;:18;;;;;;;;;:27;;:43;6695:162;;13731:25:21;;;-1:-1:-1;;;;;6775:43:16;;;13772:18:21;;;13765:60;;;;6832:15:16;13841:18:21;;;13834:34;6695:162:16;;6775:18;;-1:-1:-1;6715:10:16;;6695:162;;;;;;13719:2:21;6695:162:16;;;5226:1638;;;;;5173:1691;;:::o;12677:449::-;12735:13;12790:18;;;:14;:18;;;;;12822:20;;;;;;12818:177;;;12881:12;12890:2;12881:8;:12::i;:::-;12861:17;12875:2;12861:13;:17::i;:::-;:32;12857:95;;;12920:17;12934:2;12920:13;:17::i;12857:95::-;12972:12;12981:2;12972:8;:12::i;12818:177::-;13028:12;13037:2;13028:8;:12::i;:::-;13008:17;13022:2;13008:13;:17::i;:::-;:32;13004:87;;;13063:17;13077:2;13063:13;:17::i;8352:692::-;8424:28;8449:2;8424:24;:28::i;:::-;8416:54;;;;-1:-1:-1;;;8416:54:16;;9321:2:21;8416:54:16;;;9303:21:21;9360:2;9340:18;;;9333:30;-1:-1:-1;;;9379:18:21;;;9372:43;9432:18;;8416:54:16;9293:163:21;8416:54:16;8480:29;8512:20;;;:16;:20;;;;;;8559:18;8529:2;8559:14;:18::i;:::-;8542:35;;8587:18;8602:2;8587:14;:18::i;:::-;8615:4;;8637;;8644:13;;8615:43;;-1:-1:-1;;;8615:43:16;;-1:-1:-1;;;;;8615:4:16;;;;:13;;:43;;8637:4;;;8615:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8668:4:16;;;8682:18;;;:14;:18;;;;;:24;8734:13;;-1:-1:-1;;;;;8668:4:16;;;;:13;;8682:24;;8751:3;;8734:16;;8748:2;8734:16;:::i;:::-;:20;;;;:::i;:::-;8718:13;;:36;;;;:::i;:::-;8708:47;;:6;:47;:::i;:::-;8668:88;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8766:4:16;;8792:13;;-1:-1:-1;;;;;8766:4:16;;;;:13;;8780:10;;8809:3;;8792:16;;8806:2;8792:16;:::i;:::-;:20;;;;:::i;:::-;8766:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8865:18:16;;;;:14;:18;;;;;:24;8945:13;;8903:2;;-1:-1:-1;;;;;8865:24:16;;8828:209;;8962:3;;8945:16;;8959:2;8945:16;:::i;:::-;:20;;;;:::i;:::-;8929:13;;:36;;;;:::i;:::-;8919:47;;:6;:47;:::i;:::-;8980:13;;9024:3;9007:16;8980:13;9021:2;9007:16;:::i;:::-;:20;;;;:::i;:::-;8828:209;;;14334:25:21;;;14390:2;14375:18;;14368:34;;;;14418:18;;;14411:34;14322:2;14307:18;8828:209:16;;;;;;;8406:638;;8352:692;:::o;10872:329::-;10939:4;10991:18;;;:14;:18;;;;;11023:26;;;;;;11019:176;;;11092:17;11106:2;11092:13;:17::i;:::-;11072:16;11085:2;11072:12;:16::i;:::-;:37;;;10872:329;-1:-1:-1;;;10872:329:16:o;11019:176::-;11167:17;11181:2;11167:13;:17::i;:::-;11147:16;11160:2;11147:12;:16::i;:::-;:37;;;10872:329;-1:-1:-1;;;10872:329:16:o;6870:701::-;6928:13;6938:2;6928:9;:13::i;:::-;6920:39;;;;-1:-1:-1;;;6920:39:16;;9321:2:21;6920:39:16;;;9303:21:21;9360:2;9340:18;;;9333:30;-1:-1:-1;;;9379:18:21;;;9372:43;9432:18;;6920:39:16;9293:163:21;6920:39:16;6969:29;7001:20;;;:16;:20;;;;;;7048:18;7018:2;7048:14;:18::i;:::-;7031:35;;7076:18;7091:2;7076:14;:18::i;:::-;7143:13;;7104:12;;7134:22;;7130:270;;;7188:13;;7179:22;;:6;:22;:::i;:::-;7215:4;;7237;;7172:29;;-1:-1:-1;;;;;;7215:4:16;;;;:13;;7237:4;7266:3;7258:7;7172:29;7263:2;7258:7;:::i;:::-;:11;;;;:::i;:::-;7244:13;;:25;;;;:::i;:::-;7215:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7284:4:16;;-1:-1:-1;;;;;7284:4:16;:13;7298:10;7318:3;7310:7;:4;7315:2;7310:7;:::i;:::-;:11;;;;:::i;:::-;7284:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7130:270;;;7353:4;;7375;;7353:36;;-1:-1:-1;;;7353:36:16;;-1:-1:-1;;;;;7353:4:16;;;;:13;;:36;;7375:4;;;7382:6;;7353:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7130:270;7437:18;;;;:14;:18;;;;;:24;7491:13;;7475:2;;-1:-1:-1;;;;;7437:24:16;;7414:150;;7526:3;7518:7;:4;7523:2;7518:7;:::i;3675:90::-;1094:13:1;:11;:13::i;:::-;3736:4:16::1;:22:::0;;-1:-1:-1;;;;;;3736:22:16::1;-1:-1:-1::0;;;;;3736:22:16;;;::::1;::::0;;;::::1;::::0;;3675:90::o;9050:408::-;9137:19;9204:20;;;:16;:20;;;;;9279:23;;;;9137:19;;9318:2;;9261:41;;:15;:41;:::i;:::-;9260:60;;;;:::i;:::-;9234:86;;9429:22;;9400:12;;9382:15;:30;;;;:::i;:::-;9358:13;;:19;;9374:3;;9358:19;:::i;:::-;9357:56;;;;:::i;:::-;9356:95;;;;:::i;:::-;9330:121;9050:408;-1:-1:-1;;;;9050:408:16:o;10562:304::-;10614:4;10666:18;;;:14;:18;;;;;10698:26;;;;;;10694:166;;;10767:12;10776:2;10767:8;:12::i;10694:166::-;10837:12;10846:2;10837:8;:12::i;3449:114::-;1094:13:1;:11;:13::i;:::-;3526:22:16::1;:30:::0;3449:114::o;3347:96::-;1094:13:1;:11;:13::i;:::-;3416:12:16::1;:20:::0;3347:96::o;10272:284::-;10327:20;;;;:16;:20;;;;;:29;:34;10319:64;;;;-1:-1:-1;;;10319:64:16;;8633:2:21;10319:64:16;;;8615:21:21;8672:2;8652:18;;;8645:30;-1:-1:-1;;;8691:18:21;;;8684:47;8748:18;;10319:64:16;8605:167:21;10319:64:16;10393:15;;;10462:18;;;:14;:18;;;;;;;:24;10393:119;;-1:-1:-1;;;10393:119:16;;10443:4;10393:119;;;4081:34:21;-1:-1:-1;;;;;10462:24:16;;;4131:18:21;;;4124:43;4183:18;;;4176:34;;;10393:15:16;;;:28;;4016:18:21;;10393:119:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10527:22:16;;10546:2;;-1:-1:-1;10534:10:16;;-1:-1:-1;10527:22:16;;;;;10272:284;:::o;1831:101:1:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;11207:315:16:-;11262:13;11317:18;;;:14;:18;;;;;;;;11404:13;;;:29;11376:83;;-1:-1:-1;;;11376:83:16;;;;11317:18;;11262:13;;-1:-1:-1;;;;;11404:29:16;;;;11376:81;;:83;;;;;11317:18;11376:83;;;;;;11404:29;11376:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11376:99:16;;:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11345:132:16;;11207:315;-1:-1:-1;;;;;;;11207:315:16:o;3771:1259::-;3830:4;;;;;;;;;-1:-1:-1;;;;;3830:4:16;-1:-1:-1;;;;;3830:17:16;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3822:45;;;;-1:-1:-1;;;3822:45:16;;8979:2:21;3822:45:16;;;8961:21:21;9018:2;8998:18;;;8991:30;-1:-1:-1;;;9037:18:21;;;9030:43;9090:18;;3822:45:16;8951:163:21;3822:45:16;4045:15;;;:35;;-1:-1:-1;;;4045:35:16;;;;;13493:25:21;;;3891:52:16;;;;;;-1:-1:-1;;;;;4045:15:16;;;;:31;;13466:18:21;;4045:35:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3877:203;;;;;;;;4139:5;4125:10;4117:19;;:27;;;;:::i;:::-;4098:15;:46;;4090:67;;;;-1:-1:-1;;;4090:67:16;;12465:2:21;4090:67:16;;;12447:21:21;12504:1;12484:18;;;12477:29;-1:-1:-1;;;12522:18:21;;;12515:38;12570:18;;4090:67:16;12437:157:21;4090:67:16;4202:54;;-1:-1:-1;;;4202:54:16;;;;;13493:25:21;;;4168:14:16;;;;-1:-1:-1;;;;;4202:50:16;;;;;13466:18:21;;4202:54:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4167:89;;-1:-1:-1;4167:89:16;-1:-1:-1;4296:53:16;4287:5;:62;;;;;;;;:::i;:::-;;4266:125;;;;-1:-1:-1;;;4266:125:16;;8288:2:21;4266:125:16;;;8270:21:21;8327:2;8307:18;;;8300:30;-1:-1:-1;;;8346:18:21;;;8339:46;8402:18;;4266:125:16;8260:166:21;4266:125:16;4409:15;;:27;;-1:-1:-1;;;4409:27:16;;;;;13493:25:21;;;4440:10:16;;-1:-1:-1;;;;;4409:15:16;;:23;;13466:18:21;;4409:27:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4409:41:16;;4401:67;;;;-1:-1:-1;;;4401:67:16;;12123:2:21;4401:67:16;;;12105:21:21;12162:2;12142:18;;;12135:30;-1:-1:-1;;;12181:18:21;;;12174:43;12234:18;;4401:67:16;12095:163:21;4401:67:16;-1:-1:-1;;;;;4499:22:16;;4525:25;4499:22;;;:12;:22;;;;;;;;:51;;;;;;;;:::i;:::-;;;4478:120;;;;-1:-1:-1;;;4478:120:16;;11411:2:21;4478:120:16;;;11393:21:21;11450:2;11430:18;;;11423:30;-1:-1:-1;;;11469:18:21;;;11462:52;11531:18;;4478:120:16;11383:172:21;4478:120:16;4608:15;;:59;;-1:-1:-1;;;4608:59:16;;4637:10;4608:59;;;4081:34:21;4657:4:16;4131:18:21;;;4124:43;4183:18;;;4176:34;;;-1:-1:-1;;;;;4608:15:16;;;;:28;;4016:18:21;;4608:59:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4677:11:16;;-1:-1:-1;4717:22:16;;-1:-1:-1;4691:48:16;;-1:-1:-1;4691:48:16;;-1:-1:-1;;;;;4691:22:16;;;;;;:12;:22;;;;;;;;:48;;;;;;;;:::i;:::-;;:62;;4748:5;4691:62;;;4742:4;4691:62;4784:239;;;;;;;;4812:10;4784:239;;4836:177;;;;;;;-1:-1:-1;;;;;4836:177:16;;;;;-1:-1:-1;;;;;4890:15:16;;;4784:239;4836:177;;;;;;;4923:15;;;;4836:177;;;;4956:19;;;;4836:177;;;;;;;;;;;;;;;;;;;4784:239;;;;;;-1:-1:-1;4763:18:16;;;:14;:18;;;;;;:260;;;;;;;-1:-1:-1;;;;;;4763:260:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4763:260:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4763:260:16;;;;;;;;;;-1:-1:-1;3771:1259:16:o;5036:131::-;5093:7;5157:3;;5141:12;;5120:18;5135:2;5120:14;:18::i;:::-;:33;;;;:::i;:::-;5119:41;;;;:::i;:::-;5112:48;5036:131;-1:-1:-1;;5036:131:16:o;3214:127::-;1094:13:1;:11;:13::i;:::-;3291:4:16::1;3282:5;:13;;3274:39;;;::::0;-1:-1:-1;;;3274:39:16;;7946:2:21;3274:39:16::1;::::0;::::1;7928:21:21::0;7985:2;7965:18;;;7958:30;-1:-1:-1;;;8004:18:21;;;7997:43;8057:18;;3274:39:16::1;7918:163:21::0;3274:39:16::1;3323:3;:11:::0;3214:127::o;3569:100::-;1094:13:1;:11;:13::i;:::-;3640:14:16::1;:22:::0;3569:100::o;12000:671::-;12051:13;12114:20;;;:16;:20;;;;;;;;12174:14;:18;;;;;;12288:15;;;:35;;-1:-1:-1;;;12288:35:16;;;;;13493:25:21;;;12174:18:16;;12051:13;;-1:-1:-1;;;;;12288:15:16;;;;:31;;13466:18:21;;12288:35:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12202:121;;;;;;12334:14;12350;12383:8;-1:-1:-1;;;;;12368:46:16;;12415:2;12368:50;;;;;;;;;;;;;13493:25:21;;13481:2;13466:18;;13448:76;12368:50:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12432:20;;;;12333:85;;-1:-1:-1;12333:85:16;-1:-1:-1;12432:20:16;;12428:139;;;12514:19;;12494;;-1:-1:-1;;;;;12536:15:16;;;12494:39;;;:::i;:::-;12493:59;;;;:::i;:::-;:63;;12553:3;12493:63;:::i;:::-;12475:81;;-1:-1:-1;;;;;12475:15:16;;:81;:::i;:::-;12468:88;12000:671;-1:-1:-1;;;;;;;12000:671:16:o;12428:139::-;12622:19;;12602;;-1:-1:-1;;;;;12644:15:16;;;12602:39;;;:::i;:::-;12601:59;;;;:::i;:::-;:63;;12661:3;12601:63;:::i;:::-;12583:81;;-1:-1:-1;;;;;12583:15:16;;:81;:::i;9464:802::-;9566:1;9534:20;;;:16;:20;;;;;:29;9526:61;;;;-1:-1:-1;;;9526:61:16;;10012:2:21;9526:61:16;;;9994:21:21;10051:2;10031:18;;;10024:30;-1:-1:-1;;;10070:18:21;;;10063:45;10125:18;;9526:61:16;9984:165:21;9526:61:16;9597:19;9619:24;9640:2;9619:20;:24::i;:::-;9684:20;;;;:16;:20;;;;;:29;9597:46;;-1:-1:-1;9684:43:16;;9597:46;;9684:43;:::i;:::-;9674:6;:53;;9653:115;;;;-1:-1:-1;;;9653:115:16;;7602:2:21;9653:115:16;;;7584:21:21;7641:2;7621:18;;;7614:30;-1:-1:-1;;;7660:18:21;;;7653:45;7715:18;;9653:115:16;7574:165:21;9653:115:16;9800:18;;;;:14;:18;;;;;:24;-1:-1:-1;;;;;9800:24:16;9786:10;:38;9778:47;;;;;;9835:17;9855:20;;;:16;:20;;;;;:29;9925:6;;9855:55;;9899:11;;9855:55;:::i;:::-;:76;;;;:::i;:::-;9941:4;;9835:96;;-1:-1:-1;;;;;;9941:4:16;:19;9961:20;9970:11;9961:6;:20;:::i;:::-;9941:41;;;;;;;;;;;;;13493:25:21;;13481:2;13466:18;;13448:76;9941:41:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10015:78:16;;;;;;;;;;;10068:15;10015:78;;;;;;;-1:-1:-1;9992:20:16;;;:16;:20;;;;;:101;;;;;;;;;;;;;;10103:4;;10121:14;:18;;;;;;:24;10103:66;;-1:-1:-1;;;10103:66:16;;-1:-1:-1;;;;;10121:24:16;;;10103:66;;;4081:34:21;10155:4:16;4131:18:21;;;4124:43;4183:18;;;4176:34;;;10103:4:16;;;-1:-1:-1;10103:17:16;;-1:-1:-1;4016:18:21;;10103:66:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10179:4:16;;10201;;10179:36;;-1:-1:-1;;;10179:36:16;;-1:-1:-1;;;;;10179:4:16;;;;:13;;:36;;10201:4;;;10208:6;;10179:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10230:29:16;;13493:25:21;;;10248:2:16;;10236:10;;10230:29;;13481:2:21;13466:18;10230:29:16;13448:76:21;11528:467:16;11695:15;;;:35;;-1:-1:-1;;;11695:35:16;;;;;13493:25:21;;;11584:13:16;;;;-1:-1:-1;;;;;11695:15:16;;:31;;13466:18:21;;11695:35:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;11761:41:16;;-1:-1:-1;;;11761:41:16;;;;;13493:25:21;;;11609:121:16;;-1:-1:-1;11743:14:16;;-1:-1:-1;;;;;;;11761:37:16;;;;;13466:18:21;;11761:41:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11816:18;;;;:14;:18;;;;;:34;;;11740:62;;-1:-1:-1;11816:34:16;;11812:116;;-1:-1:-1;11812:116:16;;11913:3;11894:17;;11890:3;:21;;;;:::i;:::-;11873:39;;-1:-1:-1;;;;;11873:15:16;;:39;:::i;11812:116::-;11985:3;11966:17;;11962:3;:21;;;;:::i;2081:198:1:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:1;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:1;;7195:2:21;2161:73:1::1;::::0;::::1;7177:21:21::0;7234:2;7214:18;;;7207:30;7273:34;7253:18;;;7246:62;-1:-1:-1;;;7324:18:21;;;7317:36;7370:19;;2161:73:1::1;7167:228:21::0;2161:73:1::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;13342:184:16:-;13396:27;13426:18;;;:14;:18;;;;;;;13476:13;;;:29;13461:58;;-1:-1:-1;;;13461:58:16;;;;;13493:25:21;;;13426:18:16;;-1:-1:-1;;;;;13476:29:16;;13461:54;;13466:18:21;;13461:58:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13454:65;13342:184;:::o;1359:130:1:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:1;719:10:12;1422:23:1;1414:68;;;;-1:-1:-1;;;1414:68:1;;11762:2:21;1414:68:1;;;11744:21:21;;;11781:18;;;11774:30;11840:34;11820:18;;;11813:62;11892:18;;1414:68:1;11734:182:21;2433:187:1;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:1;;;-1:-1:-1;;;;;;2541:17:1;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:192:21:-;93:13;;-1:-1:-1;;;;;135:46:21;;125:57;;115:2;;196:1;193;186:12;115:2;74:132;;;:::o;211:179::-;289:13;;342:22;331:34;;321:45;;311:2;;380:1;377;370:12;395:247;454:6;507:2;495:9;486:7;482:23;478:32;475:2;;;523:1;520;513:12;475:2;562:9;549:23;581:31;606:5;581:31;:::i;647:251::-;717:6;770:2;758:9;749:7;745:23;741:32;738:2;;;786:1;783;776:12;738:2;818:9;812:16;837:31;862:5;837:31;:::i;903:277::-;970:6;1023:2;1011:9;1002:7;998:23;994:32;991:2;;;1039:1;1036;1029:12;991:2;1071:9;1065:16;1124:5;1117:13;1110:21;1103:5;1100:32;1090:2;;1146:1;1143;1136:12;1469:756;1599:6;1607;1615;1623;1631;1684:3;1672:9;1663:7;1659:23;1655:33;1652:2;;;1701:1;1698;1691:12;1652:2;1733:9;1727:16;1772:1;1765:5;1762:12;1752:2;;1788:1;1785;1778:12;1752:2;1861;1846:18;;1840:25;1811:5;;-1:-1:-1;1874:33:21;1840:25;1874:33;:::i;:::-;1926:7;-1:-1:-1;1952:49:21;1997:2;1982:18;;1952:49;:::i;:::-;1942:59;;2020:49;2065:2;2054:9;2050:18;2020:49;:::i;:::-;2010:59;;2114:3;2103:9;2099:19;2093:26;2163:10;2154:7;2150:24;2141:7;2138:37;2128:2;;2189:1;2186;2179:12;2128:2;2212:7;2202:17;;;1642:583;;;;;;;;:::o;2230:293::-;2309:6;2317;2370:2;2358:9;2349:7;2345:23;2341:32;2338:2;;;2386:1;2383;2376:12;2338:2;2409:40;2439:9;2409:40;:::i;:::-;2399:50;;2468:49;2513:2;2502:9;2498:18;2468:49;:::i;:::-;2458:59;;2328:195;;;;;:::o;2528:180::-;2587:6;2640:2;2628:9;2619:7;2615:23;2611:32;2608:2;;;2656:1;2653;2646:12;2608:2;-1:-1:-1;2679:23:21;;2598:110;-1:-1:-1;2598:110:21:o;2713:184::-;2783:6;2836:2;2824:9;2815:7;2811:23;2807:32;2804:2;;;2852:1;2849;2842:12;2804:2;-1:-1:-1;2875:16:21;;2794:103;-1:-1:-1;2794:103:21:o;2902:248::-;2970:6;2978;3031:2;3019:9;3010:7;3006:23;3002:32;2999:2;;;3047:1;3044;3037:12;2999:2;-1:-1:-1;;3070:23:21;;;3140:2;3125:18;;;3112:32;;-1:-1:-1;2989:161:21:o;3155:473::-;3258:6;3266;3274;3282;3290;3343:3;3331:9;3322:7;3318:23;3314:33;3311:2;;;3360:1;3357;3350:12;3311:2;3383:39;3412:9;3383:39;:::i;:::-;3373:49;;3462:2;3451:9;3447:18;3441:25;3431:35;;3506:2;3495:9;3491:18;3485:25;3475:35;;3550:2;3539:9;3535:18;3529:25;3519:35;;3573:49;3617:3;3606:9;3602:19;3573:49;:::i;:::-;3563:59;;3301:327;;;;;;;;:::o;4849:274::-;-1:-1:-1;;;;;5041:32:21;;;;5023:51;;5105:2;5090:18;;5083:34;5011:2;4996:18;;4978:145::o;6233:350::-;6387:2;6372:18;;6420:1;6409:13;;6399:2;;6465:10;6460:3;6456:20;6453:1;6446:31;6500:4;6497:1;6490:15;6528:4;6525:1;6518:15;6399:2;6552:25;;;6354:229;:::o;14456:128::-;14496:3;14527:1;14523:6;14520:1;14517:13;14514:2;;;14533:18;;:::i;:::-;-1:-1:-1;14569:9:21;;14504:80::o;14589:217::-;14629:1;14655;14645:2;;14699:10;14694:3;14690:20;14687:1;14680:31;14734:4;14731:1;14724:15;14762:4;14759:1;14752:15;14645:2;-1:-1:-1;14791:9:21;;14635:171::o;14811:168::-;14851:7;14917:1;14913;14909:6;14905:14;14902:1;14899:21;14894:1;14887:9;14880:17;14876:45;14873:2;;;14924:18;;:::i;:::-;-1:-1:-1;14964:9:21;;14863:116::o;14984:125::-;15024:4;15052:1;15049;15046:8;15043:2;;;15057:18;;:::i;:::-;-1:-1:-1;15094:9:21;;15033:76::o;15114:127::-;15175:10;15170:3;15166:20;15163:1;15156:31;15206:4;15203:1;15196:15;15230:4;15227:1;15220:15;15246:127;15307:10;15302:3;15298:20;15295:1;15288:31;15338:4;15335:1;15328:15;15362:4;15359:1;15352:15;15378:131;-1:-1:-1;;;;;15453:31:21;;15443:42;;15433:2;;15499:1;15496;15489:12"},"gasEstimates":{"creation":{"codeDepositCost":"2143000","executionCost":"infinite","totalCost":"infinite"},"external":{"COLLATERAL_DECIMALS()":"2329","INTEREST_RATE_DECIMALS()":"2330","LTV()":"2417","LTV_DECIMALS()":"2329","PriorLiqPriceCoef()":"2352","USDC()":"2404","borrow(uint256,uint256)":"infinite","borrowedByOption(uint256)":"4645","calculateUpcomingFee(uint256)":"infinite","collateralInfo(uint256)":"13386","collateralToken()":"2448","currentLiqPrice(uint256)":"infinite","currentPrice(uint256)":"infinite","exerciseByPriorLiqPrice(uint256)":"infinite","forcedExercise(uint256)":"infinite","interestRate()":"2329","liqPrice(uint256)":"infinite","liquidate(uint256)":"infinite","loanState(uint256)":"infinite","loanStateByPriorLiqPrice(uint256)":"infinite","lockOption(uint256)":"infinite","maxBorrowLimit(uint256)":"infinite","minBorrowLimit()":"2372","operationalPool()":"2470","owner()":"2442","pool()":"2450","priorLiqPrice(uint256)":"infinite","profitByOption(uint256)":"infinite","renounceOwnership()":"infinite","repay(uint256,uint256)":"infinite","setInterestRate(uint256)":"24577","setInterestRateDecimals(uint256)":"24555","setLTV(uint256)":"24603","setMinBorrowLimit(uint256)":"24621","setPool(address)":"26819","strategyType(address)":"2678","transferOwnership(address)":"infinite","unlock(uint256)":"infinite"},"internal":{"exerciseOption(uint256)":"infinite"}},"methodIdentifiers":{"COLLATERAL_DECIMALS()":"4ddde78d","INTEREST_RATE_DECIMALS()":"66234ffa","LTV()":"62965d8e","LTV_DECIMALS()":"9d38d064","PriorLiqPriceCoef()":"425378b4","USDC()":"89a30271","borrow(uint256,uint256)":"0ecbcdab","borrowedByOption(uint256)":"6c016c00","calculateUpcomingFee(uint256)":"484f1371","collateralInfo(uint256)":"24a6665e","collateralToken()":"b2016bd4","currentLiqPrice(uint256)":"2cb2f334","currentPrice(uint256)":"7a3c4c17","exerciseByPriorLiqPrice(uint256)":"333daaa0","forcedExercise(uint256)":"01d73641","interestRate()":"7c3a00fd","liqPrice(uint256)":"d88c6910","liquidate(uint256)":"415f1240","loanState(uint256)":"49b274ed","loanStateByPriorLiqPrice(uint256)":"365c7504","lockOption(uint256)":"8ac2edc1","maxBorrowLimit(uint256)":"9e3aa5b1","minBorrowLimit()":"e260d747","operationalPool()":"91319872","owner()":"8da5cb5b","pool()":"16f0115b","priorLiqPrice(uint256)":"f05735db","profitByOption(uint256)":"0833a6c6","renounceOwnership()":"715018a6","repay(uint256,uint256)":"d8aed145","setInterestRate(uint256)":"5f84f302","setInterestRateDecimals(uint256)":"587a03c2","setLTV(uint256)":"b13de266","setMinBorrowLimit(uint256)":"c3707709","setPool(address)":"4437152a","strategyType(address)":"357bcef0","transferOwnership(address)":"f2fde38b","unlock(uint256)":"6198e339"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[4]\",\"name\":\"_arrLongHegicStrategy\",\"type\":\"address[4]\"},{\"internalType\":\"address[4]\",\"name\":\"_arrShortHegicStrategy\",\"type\":\"address[4]\"},{\"internalType\":\"contract IERC721\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"contract IHegicOperationalTreasury\",\"name\":\"_operationalPool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_USDC\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ltv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_COLLATERAL_DECIMALS\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_PriorLiqPriceCoef\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"optionID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"optionID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userReturn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolReturn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liqFee\",\"type\":\"uint256\"}],\"name\":\"ExerciseByPriorLiqPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"optionID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolProfit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liqFee\",\"type\":\"uint256\"}],\"name\":\"ForcedExercise\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"optionID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolProfit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liqFee\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"optionID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"optionID\",\"type\":\"uint256\"}],\"name\":\"Unlock\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COLLATERAL_DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INTEREST_RATE_DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LTV\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LTV_DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PriorLiqPriceCoef\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"borrowedByOption\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"borrowed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBorrowTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"calculateUpcomingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"upcomingFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"collateralInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"strategyAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"strike\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"}],\"internalType\":\"struct DDL.optionInfo\",\"name\":\"strategy\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralToken\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"currentLiqPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"currentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exerciseByPriorLiqPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"forcedExercise\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"liqPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"loanState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"loanStateByPriorLiqPrice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"lockOption\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"maxBorrowLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minBorrowLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operationalPool\",\"outputs\":[{\"internalType\":\"contract IHegicOperationalTreasury\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contract IPoolDDL\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"priorLiqPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"profitByOption\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setInterestRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setInterestRateDecimals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setLTV\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setMinBorrowLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"strategyType\",\"outputs\":[{\"internalType\":\"enum DDL.HegicStrategyType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"unlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DDL.sol\":\"DDL\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0;\\n\\ninterface AggregatorV3Interface {\\n\\n  function decimals() external view returns (uint8);\\n  function description() external view returns (string memory);\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n}\\n\",\"keccak256\":\"0x78af5c13ec137bdbb22ec9d65c730fb6f138d3a61a3fdbb63be4838ce7faf2a6\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/DDL.sol\":{\"content\":\"pragma solidity 0.8.6;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\nimport \\\"./IHegicOperationalTreasury.sol\\\";\\nimport \\\"./IHegicStrategy.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"./IPoolDDL.sol\\\";\\n\\ncontract DDL is Ownable {\\n    using SafeERC20 for IERC20;\\n\\n    uint256 public LTV;\\n    uint256 public LTV_DECIMALS = 10**4;\\n\\n    IERC721 public collateralToken;\\n    IHegicOperationalTreasury public operationalPool;\\n    IERC20 public USDC;\\n\\n    uint256 public interestRate = 19025875190258754083880960;\\n    uint256 public INTEREST_RATE_DECIMALS = 10**30;\\n\\n    uint256 public minBorrowLimit;\\n    uint256 public COLLATERAL_DECIMALS;\\n\\n    uint256 public PriorLiqPriceCoef;\\n\\n    IPoolDDL public pool;\\n\\n    struct BorrowedByOption {\\n        uint256 borrowed;\\n        uint256 newBorrowTimestamp;\\n    }\\n    struct optionInfo {\\n        address strategyAddress;\\n        uint256 amount;\\n        uint256 strike;\\n        uint256 expiration;\\n        bool isLong;\\n    }\\n    struct CollateralInfo {\\n        address owner;\\n        optionInfo strategy;\\n    }\\n\\n    enum HegicStrategyType {\\n        Invalid,\\n        Long,\\n        Short\\n    }\\n\\n    mapping(uint256 => CollateralInfo) public collateralInfo;\\n    mapping(uint256 => BorrowedByOption) public borrowedByOption;\\n    mapping(address => HegicStrategyType) public strategyType;\\n\\n    event Borrow(\\n        address indexed user,\\n        uint256 indexed optionID,\\n        uint256 amount,\\n        address strategy,\\n        uint256 timestamp\\n    );\\n    event Repay(address indexed user, uint256 indexed optionID, uint256 amount);\\n    event Liquidate(\\n        address indexed user,\\n        uint256 indexed optionID,\\n        uint256 amount,\\n        uint256 poolProfit,\\n        uint256 liqFee\\n    );\\n    event Unlock(address indexed user, uint256 indexed optionID);\\n    event ForcedExercise(\\n        address indexed user,\\n        uint256 indexed optionID,\\n        uint256 amount,\\n        uint256 poolProfit,\\n        uint256 liqFee\\n    );\\n    event ExerciseByPriorLiqPrice(\\n        address indexed user,\\n        uint256 indexed optionID,\\n        uint256 userReturn,\\n        uint256 poolReturn,\\n        uint256 liqFee\\n    );\\n\\n    constructor(\\n        address[4] memory _arrLongHegicStrategy,\\n        address[4] memory _arrShortHegicStrategy,\\n        IERC721 _collateralToken,\\n        IHegicOperationalTreasury _operationalPool,\\n        IERC20 _USDC,\\n        uint256 _minBorrowLimit,\\n        uint256 _ltv,\\n        uint256 _COLLATERAL_DECIMALS,\\n        uint256 _PriorLiqPriceCoef\\n    ) {\\n        for (uint256 i = 0; i < _arrLongHegicStrategy.length; i++) {\\n            strategyType[_arrLongHegicStrategy[i]] = HegicStrategyType.Long;\\n        }\\n        for (uint256 i = 0; i < _arrShortHegicStrategy.length; i++) {\\n            strategyType[_arrShortHegicStrategy[i]] = HegicStrategyType.Short;\\n        }\\n        collateralToken = _collateralToken;\\n        operationalPool = _operationalPool;\\n        USDC = _USDC;\\n        minBorrowLimit = _minBorrowLimit;\\n        LTV = _ltv;\\n        COLLATERAL_DECIMALS = 10**_COLLATERAL_DECIMALS;\\n        PriorLiqPriceCoef = _PriorLiqPriceCoef;\\n    }\\n\\n    function setLTV(uint256 value) external onlyOwner {\\n        require(value <= 8000, \\\"invalid value\\\");\\n        LTV = value;\\n    }\\n\\n    function setInterestRate(uint256 value) external onlyOwner {\\n        interestRate = value;\\n    }\\n\\n    function setInterestRateDecimals(uint256 value) external onlyOwner {\\n        INTEREST_RATE_DECIMALS = value;\\n    }\\n\\n    function setMinBorrowLimit(uint256 value) external onlyOwner {\\n        minBorrowLimit = value;\\n    }\\n\\n    function setPool(address value) external onlyOwner {\\n        pool = IPoolDDL(value);\\n    }\\n\\n    function lockOption(uint256 id) external {\\n        require(pool.openDeDeLend(), \\\"pauseDeDeLend\\\");\\n        (\\n            IHegicOperationalTreasury.LockedLiquidityState state,\\n            address strategy,\\n            ,\\n            ,\\n            uint32 expiration\\n        ) = operationalPool.lockedLiquidity(id);\\n        require(block.timestamp <= uint256(expiration) - 60*60, \\\"too late\\\");\\n        (uint128 amount, uint128 strike) = IHegicStrategy(strategy)\\n            .strategyData(id);\\n        require(\\n            state == IHegicOperationalTreasury.LockedLiquidityState.Locked,\\n            \\\"option is active\\\"\\n        );\\n        require(collateralToken.ownerOf(id) == msg.sender, \\\"you not owner\\\");\\n        require(\\n            strategyType[strategy] != HegicStrategyType.Invalid,\\n            \\\"strategy not supported\\\"\\n        );\\n        collateralToken.transferFrom(msg.sender, address(this), id);\\n        bool isLong = strategyType[strategy] == HegicStrategyType.Long ? true: false;\\n        collateralInfo[id] = CollateralInfo(\\n            msg.sender,\\n            optionInfo(\\n                strategy,\\n                uint256(amount),\\n                uint256(strike),\\n                uint256(expiration),\\n                isLong\\n            )\\n        );\\n    }\\n\\n    function maxBorrowLimit(uint256 id) public view returns (uint256) {\\n        return (profitByOption(id) / LTV_DECIMALS) * LTV;\\n    }\\n\\n    function borrow(uint256 id, uint256 amount) external {\\n        require(pool.openDeDeLend(), \\\"pauseDeDeLend\\\");\\n        BorrowedByOption storage data = borrowedByOption[id];\\n        uint256 maxLimit = maxBorrowLimit(id);\\n        (\\n            IHegicOperationalTreasury.LockedLiquidityState state,\\n            ,\\n            ,\\n            ,\\n\\n        ) = operationalPool.lockedLiquidity(id);\\n        uint256 totalBalance = pool.getTotalBalance(); \\n        require(amount >= minBorrowLimit, \\\"amount less minBorrowLimit\\\");\\n        require(amount + data.borrowed <= maxLimit, \\\"amount + data.borrowed less maxLimit\\\");\\n        require(state == IHegicOperationalTreasury.LockedLiquidityState.Locked, \\\"invalid state\\\");\\n        require(msg.sender == collateralInfo[id].owner, \\\"you are not the owner\\\");\\n        require(amount <= totalBalance, \\\"there is not enough money in the pool\\\");\\n        require(block.timestamp <= collateralInfo[id].strategy.expiration - 60*60, \\\"too late\\\");\\n        if (collateralInfo[id].strategy.isLong) {\\n            require(currentPrice(id) > priorLiqPrice(id), \\\"the price is too low\\\");\\n        } else {\\n            require(currentPrice(id) < priorLiqPrice(id), \\\"the price is too high\\\");\\n        }\\n        uint256 upcomingFee = calculateUpcomingFee(id);\\n        borrowedByOption[id] = BorrowedByOption(\\n            amount + data.borrowed + upcomingFee,\\n            block.timestamp\\n        );\\n        pool.addTotalLocked(amount + upcomingFee);\\n        pool.send(collateralInfo[id].owner, amount);\\n        emit Borrow(\\n            msg.sender,\\n            id,\\n            amount,\\n            collateralInfo[id].strategy.strategyAddress,\\n            block.timestamp\\n        );\\n    }\\n\\n    function liquidate(uint256 id) external {\\n        require(loanState(id), \\\"invalid price\\\");\\n        BorrowedByOption storage data = borrowedByOption[id];\\n        uint256 profit = profitByOption(id);\\n        exerciseOption(id);\\n        uint256 diff = 0;\\n        if (profit > data.borrowed) {\\n            diff = profit - data.borrowed;\\n            USDC.transfer(address(pool), data.borrowed+diff*90/100);\\n            USDC.transfer(msg.sender, diff*10/100);\\n        } else {\\n            USDC.transfer(address(pool), profit);\\n        }\\n        emit Liquidate(\\n            collateralInfo[id].owner,\\n            id,\\n            data.borrowed,\\n            diff*90/100,\\n            diff*10/100\\n        );\\n    }\\n\\n    function forcedExercise(uint256 id) external {\\n        require(\\n            block.timestamp > collateralInfo[id].strategy.expiration - 30 * 60\\n        );\\n        BorrowedByOption storage data = borrowedByOption[id];\\n        uint256 profit = profitByOption(id);\\n        exerciseOption(id);\\n        uint256 diff = 0;\\n        if (profit > data.borrowed) {\\n            diff = profit - data.borrowed;\\n            USDC.transfer(address(pool), data.borrowed+diff*90/100);\\n            USDC.transfer(msg.sender, diff*10/100);\\n        } else {\\n            USDC.transfer(address(pool), profit);\\n        }\\n        emit ForcedExercise(\\n            collateralInfo[id].owner,\\n            id,\\n            data.borrowed,\\n            diff*90/100,\\n            diff*10/100\\n        );\\n    }\\n\\n    function exerciseByPriorLiqPrice(uint256 id) external {\\n        require(loanStateByPriorLiqPrice(id), \\\"invalid price\\\");\\n        BorrowedByOption storage data = borrowedByOption[id];\\n        uint256 profit = profitByOption(id);\\n        exerciseOption(id);\\n        USDC.transfer(address(pool), data.borrowed);\\n        USDC.transfer(collateralInfo[id].owner, profit - (data.borrowed + data.borrowed*10/100));\\n        USDC.transfer(msg.sender, data.borrowed*10/100);\\n        emit ExerciseByPriorLiqPrice(\\n            collateralInfo[id].owner,\\n            id,\\n            profit - (data.borrowed + data.borrowed*10/100),\\n            data.borrowed,\\n            data.borrowed*10/100\\n        );\\n    }\\n\\n    function calculateUpcomingFee(uint256 id)\\n        public\\n        view\\n        returns (uint256 upcomingFee)\\n    {\\n        BorrowedByOption storage data = borrowedByOption[id];\\n        uint256 periodInMinutes = (block.timestamp - data.newBorrowTimestamp) /\\n            60;\\n        upcomingFee =\\n            ((data.borrowed / 100) * (periodInMinutes * interestRate)) /\\n            INTEREST_RATE_DECIMALS;\\n    }\\n\\n    function repay(uint256 id, uint256 amount) external {\\n        require(borrowedByOption[id].borrowed > 0, \\\"option redeemed\\\");\\n        uint256 upcomingFee = calculateUpcomingFee(id);\\n        require(\\n            amount <= borrowedByOption[id].borrowed + upcomingFee,\\n            \\\"too much amount\\\"\\n        );\\n        require(msg.sender == collateralInfo[id].owner);\\n        uint256 newBorrow = borrowedByOption[id].borrowed +\\n            upcomingFee -\\n            amount;\\n        pool.subTotalLocked(amount - upcomingFee);\\n        borrowedByOption[id] = BorrowedByOption(\\n            newBorrow,\\n            block.timestamp\\n        );\\n        USDC.transferFrom(collateralInfo[id].owner, address(this), amount);\\n        USDC.transfer(address(pool), amount);\\n        emit Repay(msg.sender, id, amount);\\n    }\\n\\n    function unlock(uint256 id) external {\\n        require(borrowedByOption[id].borrowed == 0, \\\"option is blocked\\\");\\n        collateralToken.transferFrom(\\n            address(this),\\n            collateralInfo[id].owner,\\n            id\\n        );\\n        emit Unlock(msg.sender, id);\\n    }\\n\\n    function loanState(uint256 id) public view returns (bool) {\\n        CollateralInfo storage collateral = collateralInfo[id];\\n        if (collateral.strategy.isLong) {\\n            return currentPrice(id) <= liqPrice(id);\\n        } else {\\n            return currentPrice(id) >= liqPrice(id);\\n        }\\n    }\\n\\n    function loanStateByPriorLiqPrice(uint256 id) public view returns (bool) {\\n        CollateralInfo storage collateral = collateralInfo[id];\\n        if (collateral.strategy.isLong) {\\n            return currentPrice(id) <= priorLiqPrice(id);\\n        } else {\\n            return currentPrice(id) >= priorLiqPrice(id);\\n        }\\n    }\\n\\n    function currentPrice(uint256 id) public view returns (uint256 price) {\\n        CollateralInfo storage data = collateralInfo[id];\\n        (, int256 latestPrice, , , ) = IHegicStrategy(\\n            data.strategy.strategyAddress\\n        ).priceProvider().latestRoundData();\\n        price = uint256(latestPrice);\\n    }\\n\\n    function priorLiqPrice(uint256 id) public view returns (uint256 price) {\\n        (\\n            ,\\n            address strategy,\\n            ,\\n            ,\\n        ) = operationalPool.lockedLiquidity(id);\\n        (, uint128 strike) = IHegicStrategy(strategy).strategyData(id);\\n        if (collateralInfo[id].strategy.isLong) {\\n            return uint256(strike)*(100+PriorLiqPriceCoef)/100; \\n        } \\n        return uint256(strike)*(100-PriorLiqPriceCoef)/100;\\n    }\\n    function liqPrice(uint256 id) public view returns (uint256 price) {\\n        BorrowedByOption storage optionData = borrowedByOption[id];\\n        CollateralInfo storage data = collateralInfo[id];\\n        (\\n            ,\\n            address strategy,\\n            ,\\n            ,\\n        ) = operationalPool.lockedLiquidity(id);\\n        (uint128 amount, uint128 strike) = IHegicStrategy(strategy)\\n        .strategyData(id);\\n        if (data.strategy.isLong) {\\n            return uint256(strike) + (optionData.borrowed*COLLATERAL_DECIMALS)/(uint256(amount))*120;\\n        }\\n        return uint256(strike) - (optionData.borrowed*COLLATERAL_DECIMALS)/(uint256(amount))*120;\\n    }\\n\\n    function currentLiqPrice(uint256 id) public view returns (uint256 price) {\\n        CollateralInfo storage data = collateralInfo[id];\\n        if (data.strategy.isLong){\\n            if (priorLiqPrice(id) > liqPrice(id)) {\\n                return priorLiqPrice(id);\\n            }\\n            return liqPrice(id);\\n        }\\n        if (priorLiqPrice(id) < liqPrice(id)) {\\n            return priorLiqPrice(id);\\n        }\\n        return liqPrice(id);\\n    }\\n\\n    function profitByOption(uint256 id) public view returns (uint256 profit) {\\n        (,address strategy,,,) = operationalPool.lockedLiquidity(id);\\n        return IHegicStrategy(strategy).profitOf(id);\\n    }\\n\\n    function exerciseOption(uint256 id) private {\\n        CollateralInfo storage data = collateralInfo[id];\\n        return IHegicStrategy(data.strategy.strategyAddress).exercise(id);\\n    }\\n}\\n\",\"keccak256\":\"0x23992448b5434a9122573343d76597eebe7cf064231e3bb090180357a9b593eb\"},\"contracts/IHegicOperationalTreasury.sol\":{\"content\":\"pragma solidity 0.8.6;\\n\\ninterface IHegicOperationalTreasury {\\n    enum LockedLiquidityState {Unlocked, Locked}\\n\\n    function lockedLiquidity(uint256 id)\\n        external\\n        view\\n        returns (\\n            LockedLiquidityState state,\\n            address strategy,\\n            uint128 negativepnl,\\n            uint128 positivepnl,\\n            uint32 expiration\\n        );\\n}\\n\",\"keccak256\":\"0x4690046de7111ac32ee484fa830e015b8071268b183da10bc6e7a4af5486166e\"},\"contracts/IHegicStrategy.sol\":{\"content\":\"pragma solidity 0.8.6;\\n\\n import \\\"@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol\\\";\\n\\ninterface IHegicStrategy {\\n    function exercise(uint256 optionID) external;\\n\\n    function profitOf(uint256 optionID) external view returns (uint256 amount);\\n\\n    function priceProvider() external view returns (AggregatorV3Interface priceProvider);\\n\\n    function strategyData(uint256 id) external view returns (uint128 amount, uint128 strike);\\n}\\n\",\"keccak256\":\"0x263af5040cf9a86c1490a47077d1517a9726026216aa85643133d82282c0d886\"},\"contracts/IPoolDDL.sol\":{\"content\":\"pragma solidity 0.8.6;\\n\\ninterface IPoolDDL {\\n    function send(address to, uint amount) external;\\n    function getTotalBalance() external view returns (uint256 balance);\\n    function addTotalLocked(uint256 value) external;\\n    function subTotalLocked(uint256 value) external; \\n    function openDeDeLend() external view returns (bool openDeDeLend);\\n}\",\"keccak256\":\"0xc8ac2c3446c29742ebf558b0e7b67c715d00fd3db64455f83d730f72d6dbcd5c\"}},\"version\":1}","storageLayout":{"storage":[{"astId":53,"contract":"contracts/DDL.sol:DDL","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":2787,"contract":"contracts/DDL.sol:DDL","label":"LTV","offset":0,"slot":"1","type":"t_uint256"},{"astId":2792,"contract":"contracts/DDL.sol:DDL","label":"LTV_DECIMALS","offset":0,"slot":"2","type":"t_uint256"},{"astId":2795,"contract":"contracts/DDL.sol:DDL","label":"collateralToken","offset":0,"slot":"3","type":"t_contract(IERC721)2147"},{"astId":2798,"contract":"contracts/DDL.sol:DDL","label":"operationalPool","offset":0,"slot":"4","type":"t_contract(IHegicOperationalTreasury)4305"},{"astId":2801,"contract":"contracts/DDL.sol:DDL","label":"USDC","offset":0,"slot":"5","type":"t_contract(IERC20)822"},{"astId":2804,"contract":"contracts/DDL.sol:DDL","label":"interestRate","offset":0,"slot":"6","type":"t_uint256"},{"astId":2809,"contract":"contracts/DDL.sol:DDL","label":"INTEREST_RATE_DECIMALS","offset":0,"slot":"7","type":"t_uint256"},{"astId":2811,"contract":"contracts/DDL.sol:DDL","label":"minBorrowLimit","offset":0,"slot":"8","type":"t_uint256"},{"astId":2813,"contract":"contracts/DDL.sol:DDL","label":"COLLATERAL_DECIMALS","offset":0,"slot":"9","type":"t_uint256"},{"astId":2815,"contract":"contracts/DDL.sol:DDL","label":"PriorLiqPriceCoef","offset":0,"slot":"10","type":"t_uint256"},{"astId":2818,"contract":"contracts/DDL.sol:DDL","label":"pool","offset":0,"slot":"11","type":"t_contract(IPoolDDL)4366"},{"astId":2849,"contract":"contracts/DDL.sol:DDL","label":"collateralInfo","offset":0,"slot":"12","type":"t_mapping(t_uint256,t_struct(CollateralInfo)2840_storage)"},{"astId":2854,"contract":"contracts/DDL.sol:DDL","label":"borrowedByOption","offset":0,"slot":"13","type":"t_mapping(t_uint256,t_struct(BorrowedByOption)2823_storage)"},{"astId":2859,"contract":"contracts/DDL.sol:DDL","label":"strategyType","offset":0,"slot":"14","type":"t_mapping(t_address,t_enum(HegicStrategyType)2844)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IERC20)822":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_contract(IERC721)2147":{"encoding":"inplace","label":"contract IERC721","numberOfBytes":"20"},"t_contract(IHegicOperationalTreasury)4305":{"encoding":"inplace","label":"contract IHegicOperationalTreasury","numberOfBytes":"20"},"t_contract(IPoolDDL)4366":{"encoding":"inplace","label":"contract IPoolDDL","numberOfBytes":"20"},"t_enum(HegicStrategyType)2844":{"encoding":"inplace","label":"enum DDL.HegicStrategyType","numberOfBytes":"1"},"t_mapping(t_address,t_enum(HegicStrategyType)2844)":{"encoding":"mapping","key":"t_address","label":"mapping(address => enum DDL.HegicStrategyType)","numberOfBytes":"32","value":"t_enum(HegicStrategyType)2844"},"t_mapping(t_uint256,t_struct(BorrowedByOption)2823_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct DDL.BorrowedByOption)","numberOfBytes":"32","value":"t_struct(BorrowedByOption)2823_storage"},"t_mapping(t_uint256,t_struct(CollateralInfo)2840_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct DDL.CollateralInfo)","numberOfBytes":"32","value":"t_struct(CollateralInfo)2840_storage"},"t_struct(BorrowedByOption)2823_storage":{"encoding":"inplace","label":"struct DDL.BorrowedByOption","members":[{"astId":2820,"contract":"contracts/DDL.sol:DDL","label":"borrowed","offset":0,"slot":"0","type":"t_uint256"},{"astId":2822,"contract":"contracts/DDL.sol:DDL","label":"newBorrowTimestamp","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_struct(CollateralInfo)2840_storage":{"encoding":"inplace","label":"struct DDL.CollateralInfo","members":[{"astId":2836,"contract":"contracts/DDL.sol:DDL","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":2839,"contract":"contracts/DDL.sol:DDL","label":"strategy","offset":0,"slot":"1","type":"t_struct(optionInfo)2834_storage"}],"numberOfBytes":"192"},"t_struct(optionInfo)2834_storage":{"encoding":"inplace","label":"struct DDL.optionInfo","members":[{"astId":2825,"contract":"contracts/DDL.sol:DDL","label":"strategyAddress","offset":0,"slot":"0","type":"t_address"},{"astId":2827,"contract":"contracts/DDL.sol:DDL","label":"amount","offset":0,"slot":"1","type":"t_uint256"},{"astId":2829,"contract":"contracts/DDL.sol:DDL","label":"strike","offset":0,"slot":"2","type":"t_uint256"},{"astId":2831,"contract":"contracts/DDL.sol:DDL","label":"expiration","offset":0,"slot":"3","type":"t_uint256"},{"astId":2833,"contract":"contracts/DDL.sol:DDL","label":"isLong","offset":0,"slot":"4","type":"t_bool"}],"numberOfBytes":"160"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/IHegicOperationalTreasury.sol":{"IHegicOperationalTreasury":{"abi":[{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"lockedLiquidity","outputs":[{"internalType":"enum IHegicOperationalTreasury.LockedLiquidityState","name":"state","type":"uint8"},{"internalType":"address","name":"strategy","type":"address"},{"internalType":"uint128","name":"negativepnl","type":"uint128"},{"internalType":"uint128","name":"positivepnl","type":"uint128"},{"internalType":"uint32","name":"expiration","type":"uint32"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"lockedLiquidity(uint256)":"3755269b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"lockedLiquidity\",\"outputs\":[{\"internalType\":\"enum IHegicOperationalTreasury.LockedLiquidityState\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"negativepnl\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"positivepnl\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"expiration\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IHegicOperationalTreasury.sol\":\"IHegicOperationalTreasury\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IHegicOperationalTreasury.sol\":{\"content\":\"pragma solidity 0.8.6;\\n\\ninterface IHegicOperationalTreasury {\\n    enum LockedLiquidityState {Unlocked, Locked}\\n\\n    function lockedLiquidity(uint256 id)\\n        external\\n        view\\n        returns (\\n            LockedLiquidityState state,\\n            address strategy,\\n            uint128 negativepnl,\\n            uint128 positivepnl,\\n            uint32 expiration\\n        );\\n}\\n\",\"keccak256\":\"0x4690046de7111ac32ee484fa830e015b8071268b183da10bc6e7a4af5486166e\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/IHegicStrategy.sol":{"IHegicStrategy":{"abi":[{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"exercise","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"priceProvider","outputs":[{"internalType":"contract AggregatorV3Interface","name":"priceProvider","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"profitOf","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"strategyData","outputs":[{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"uint128","name":"strike","type":"uint128"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"exercise(uint256)":"b07f0a41","priceProvider()":"b888879e","profitOf(uint256)":"7632bffb","strategyData(uint256)":"d6c8d1b4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"optionID\",\"type\":\"uint256\"}],\"name\":\"exercise\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceProvider\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"priceProvider\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"optionID\",\"type\":\"uint256\"}],\"name\":\"profitOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"strategyData\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"strike\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IHegicStrategy.sol\":\"IHegicStrategy\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0;\\n\\ninterface AggregatorV3Interface {\\n\\n  function decimals() external view returns (uint8);\\n  function description() external view returns (string memory);\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n}\\n\",\"keccak256\":\"0x78af5c13ec137bdbb22ec9d65c730fb6f138d3a61a3fdbb63be4838ce7faf2a6\",\"license\":\"MIT\"},\"contracts/IHegicStrategy.sol\":{\"content\":\"pragma solidity 0.8.6;\\n\\n import \\\"@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol\\\";\\n\\ninterface IHegicStrategy {\\n    function exercise(uint256 optionID) external;\\n\\n    function profitOf(uint256 optionID) external view returns (uint256 amount);\\n\\n    function priceProvider() external view returns (AggregatorV3Interface priceProvider);\\n\\n    function strategyData(uint256 id) external view returns (uint128 amount, uint128 strike);\\n}\\n\",\"keccak256\":\"0x263af5040cf9a86c1490a47077d1517a9726026216aa85643133d82282c0d886\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/IPoolDDL.sol":{"IPoolDDL":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"addTotalLocked","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getTotalBalance","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"openDeDeLend","outputs":[{"internalType":"bool","name":"openDeDeLend","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"send","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"subTotalLocked","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"addTotalLocked(uint256)":"2bc355ca","getTotalBalance()":"12b58349","openDeDeLend()":"ae3050e1","send(address,uint256)":"d0679d34","subTotalLocked(uint256)":"1b45a68d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"addTotalLocked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openDeDeLend\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"openDeDeLend\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"subTotalLocked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IPoolDDL.sol\":\"IPoolDDL\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IPoolDDL.sol\":{\"content\":\"pragma solidity 0.8.6;\\n\\ninterface IPoolDDL {\\n    function send(address to, uint amount) external;\\n    function getTotalBalance() external view returns (uint256 balance);\\n    function addTotalLocked(uint256 value) external;\\n    function subTotalLocked(uint256 value) external; \\n    function openDeDeLend() external view returns (bool openDeDeLend);\\n}\",\"keccak256\":\"0xc8ac2c3446c29742ebf558b0e7b67c715d00fd3db64455f83d730f72d6dbcd5c\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/PoolDDL.sol":{"PoolDDL":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"_token","type":"address"},{"internalType":"address","name":"ddlContract1","type":"address"},{"internalType":"address","name":"ddlContract2","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Provide","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"INITIAL_RATE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"addTotalLocked","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"value","type":"bool"}],"name":"changeOpenDeDeLend","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"ddlContracts","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getTotalBalance","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"maxDepositAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"openDeDeLend","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"minShare","type":"uint256"}],"name":"provideFrom","outputs":[{"internalType":"uint256","name":"share","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"send","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"shareOf","outputs":[{"internalType":"uint256","name":"share","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"subTotalLocked","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalLocked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_203":{"entryPoint":null,"id":203,"parameterSlots":2,"returnSlots":0},"@_4529":{"entryPoint":null,"id":4529,"parameterSlots":3,"returnSlots":0},"@_69":{"entryPoint":null,"id":69,"parameterSlots":0,"returnSlots":0},"@_msgSender_2499":{"entryPoint":293,"id":2499,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_157":{"entryPoint":297,"id":157,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_contract$_IERC20_$822t_addresst_address_fromMemory":{"entryPoint":543,"id":null,"parameterSlots":2,"returnSlots":3},"extract_byte_array_length":{"entryPoint":627,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_address":{"entryPoint":688,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1070:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"143:404:21","statements":[{"body":{"nodeType":"YulBlock","src":"189:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"198:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"201:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"191:6:21"},"nodeType":"YulFunctionCall","src":"191:12:21"},"nodeType":"YulExpressionStatement","src":"191:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"164:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"160:3:21"},"nodeType":"YulFunctionCall","src":"160:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"185:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"156:3:21"},"nodeType":"YulFunctionCall","src":"156:32:21"},"nodeType":"YulIf","src":"153:2:21"},{"nodeType":"YulVariableDeclaration","src":"214:29:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"233:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"227:5:21"},"nodeType":"YulFunctionCall","src":"227:16:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"218:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"277:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"252:24:21"},"nodeType":"YulFunctionCall","src":"252:31:21"},"nodeType":"YulExpressionStatement","src":"252:31:21"},{"nodeType":"YulAssignment","src":"292:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"302:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"292:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"316:40:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"341:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"352:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"337:3:21"},"nodeType":"YulFunctionCall","src":"337:18:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"331:5:21"},"nodeType":"YulFunctionCall","src":"331:25:21"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"320:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"390:7:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"365:24:21"},"nodeType":"YulFunctionCall","src":"365:33:21"},"nodeType":"YulExpressionStatement","src":"365:33:21"},{"nodeType":"YulAssignment","src":"407:17:21","value":{"name":"value_1","nodeType":"YulIdentifier","src":"417:7:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"407:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"433:40:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"469:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:21"},"nodeType":"YulFunctionCall","src":"454:18:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"448:5:21"},"nodeType":"YulFunctionCall","src":"448:25:21"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"437:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"507:7:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"482:24:21"},"nodeType":"YulFunctionCall","src":"482:33:21"},"nodeType":"YulExpressionStatement","src":"482:33:21"},{"nodeType":"YulAssignment","src":"524:17:21","value":{"name":"value_2","nodeType":"YulIdentifier","src":"534:7:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"524:6:21"}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$822t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"93:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"104:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"116:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"124:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"132:6:21","type":""}],"src":"14:533:21"},{"body":{"nodeType":"YulBlock","src":"607:325:21","statements":[{"nodeType":"YulAssignment","src":"617:22:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:1:21","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"634:4:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"627:3:21"},"nodeType":"YulFunctionCall","src":"627:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"617:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"648:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"678:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"684:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"674:3:21"},"nodeType":"YulFunctionCall","src":"674:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"652:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"725:31:21","statements":[{"nodeType":"YulAssignment","src":"727:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"741:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"749:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"737:3:21"},"nodeType":"YulFunctionCall","src":"737:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"727:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"705:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"698:6:21"},"nodeType":"YulFunctionCall","src":"698:26:21"},"nodeType":"YulIf","src":"695:2:21"},{"body":{"nodeType":"YulBlock","src":"815:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"836:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"843:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"848:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"839:3:21"},"nodeType":"YulFunctionCall","src":"839:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"829:6:21"},"nodeType":"YulFunctionCall","src":"829:31:21"},"nodeType":"YulExpressionStatement","src":"829:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"880:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"883:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"873:6:21"},"nodeType":"YulFunctionCall","src":"873:15:21"},"nodeType":"YulExpressionStatement","src":"873:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"908:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"911:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"901:6:21"},"nodeType":"YulFunctionCall","src":"901:15:21"},"nodeType":"YulExpressionStatement","src":"901:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"771:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"794:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"802:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"791:2:21"},"nodeType":"YulFunctionCall","src":"791:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"768:2:21"},"nodeType":"YulFunctionCall","src":"768:38:21"},"nodeType":"YulIf","src":"765:2:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"587:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"596:6:21","type":""}],"src":"552:380:21"},{"body":{"nodeType":"YulBlock","src":"982:86:21","statements":[{"body":{"nodeType":"YulBlock","src":"1046:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1055:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1058:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1048:6:21"},"nodeType":"YulFunctionCall","src":"1048:12:21"},"nodeType":"YulExpressionStatement","src":"1048:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1005:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1016:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1031:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1027:3:21"},"nodeType":"YulFunctionCall","src":"1027:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"1040:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1023:3:21"},"nodeType":"YulFunctionCall","src":"1023:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1012:3:21"},"nodeType":"YulFunctionCall","src":"1012:31:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1002:2:21"},"nodeType":"YulFunctionCall","src":"1002:42:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"995:6:21"},"nodeType":"YulFunctionCall","src":"995:50:21"},"nodeType":"YulIf","src":"992:2:21"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"971:5:21","type":""}],"src":"937:131:21"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_contract$_IERC20_$822t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6080604052600019600655600a805460ff191660011790553480156200002457600080fd5b50604051620018603803806200186083398101604081905262000047916200021f565b6040518060400160405280600b81526020016a15dc9a5d1a5b99c811111360aa1b8152506040518060400160405280600381526020016211111360ea1b815250620000a16200009b6200012560201b60201c565b62000129565b8151620000b690600490602085019062000179565b508051620000cc90600590602084019062000179565b5050600880546001600160a01b0319166001600160a01b0395861617905550908216600090815260076020526040808220805460ff199081166001908117909255939094168252902080549091169091179055620002c9565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620001879062000273565b90600052602060002090601f016020900481019282620001ab5760008555620001f6565b82601f10620001c657805160ff1916838001178555620001f6565b82800160010185558215620001f6579182015b82811115620001f6578251825591602001919060010190620001d9565b506200020492915062000208565b5090565b5b8082111562000204576000815560010162000209565b6000806000606084860312156200023557600080fd5b83516200024281620002b0565b60208501519093506200025581620002b0565b60408501519092506200026881620002b0565b809150509250925092565b600181811c908216806200028857607f821691505b60208210811415620002aa57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b0381168114620002c657600080fd5b50565b61158780620002d96000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806356891412116100f9578063a9059cbb11610097578063dd62ed3e11610071578063dd62ed3e146103a6578063e3b86a5e146103b9578063f2fde38b146103cc578063fc0c546a146103df57600080fd5b8063a9059cbb14610373578063ae3050e114610386578063d0679d341461039357600080fd5b80638da5cb5b116100d35780638da5cb5b1461032a5780638ed832711461034f57806395d89b4114610358578063a457c2d71461036057600080fd5b806356891412146102f057806370a08231146102f9578063715018a61461032257600080fd5b806323b872dd11610166578063313ce56711610140578063313ce5671461029c57806332f13d8c146102ab57806339509351146102ce5780634dbac733146102e157600080fd5b806323b872dd146102635780632bc355ca146102765780632e1a7d4d1461028957600080fd5b806313bdde8b116101a257806313bdde8b1461022057806318160ddd146102335780631b45a68d1461023b57806321e5e2c41461025057600080fd5b806306fdde03146101c9578063095ea7b3146101e757806312b583491461020a575b600080fd5b6101d16103f2565b6040516101de919061142d565b60405180910390f35b6101fa6101f5366004611364565b610484565b60405190151581526020016101de565b61021261049c565b6040519081526020016101de565b61021261022e36600461138e565b61051d565b600354610212565b61024e6102493660046113fb565b6107e2565b005b61021261025e3660046112d3565b610818565b6101fa610271366004611328565b610871565b61024e6102843660046113fb565b610895565b61024e6102973660046113fb565b6108c3565b604051601281526020016101de565b6101fa6102b93660046112d3565b60076020526000908152604090205460ff1681565b6101fa6102dc366004611364565b610a31565b610212670de0b6b3a764000081565b61021260095481565b6102126103073660046112d3565b6001600160a01b031660009081526001602052604090205490565b61024e610a53565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016101de565b61021260065481565b6101d1610a67565b6101fa61036e366004611364565b610a76565b6101fa610381366004611364565b610af1565b600a546101fa9060ff1681565b61024e6103a1366004611364565b610aff565b6102126103b43660046112f5565b610bba565b61024e6103c73660046113c1565b610be5565b61024e6103da3660046112d3565b610c00565b600854610337906001600160a01b031681565b606060048054610401906114f2565b80601f016020809104026020016040519081016040528092919081815260200182805461042d906114f2565b801561047a5780601f1061044f5761010080835404028352916020019161047a565b820191906000526020600020905b81548152906001019060200180831161045d57829003601f168201915b5050505050905090565b600033610492818585610c79565b5060019392505050565b6008546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b1580156104e057600080fd5b505afa1580156104f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105189190611414565b905090565b600a5460009060ff166105675760405162461bcd60e51b815260206004820152600d60248201526c1c185d5cd95119511953195b99609a1b60448201526064015b60405180910390fd5b600060095461057461049c565b61057e9190611482565b9050600061058b60035490565b1180156105985750600081115b6105b3576105ae670de0b6b3a7640000856114bc565b6105d1565b806105bd60035490565b6105c790866114bc565b6105d1919061149a565b91506000816006546105e391906114db565b9050838310156106455760405162461bcd60e51b815260206004820152602760248201527f506f6f6c204572726f723a20546865206d696e74206c696d697420697320746f6044820152666f206c6172676560c81b606482015260840161055e565b600083116106a15760405162461bcd60e51b815260206004820152602360248201527f506f6f6c204572726f723a2054686520616d6f756e7420697320746f6f20736d604482015262185b1b60ea1b606482015260840161055e565b8085111561070f5760405162461bcd60e51b815260206004820152603560248201527f506f6f6c204572726f723a204465706f736974696e6720696e746f2074686520604482015274706f6f6c206973206e6f7420617661696c61626c6560581b606482015260840161055e565b6008546040516323b872dd60e01b8152336004820152306024820152604481018790526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801561076157600080fd5b505af1158015610775573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079991906113de565b506107a43384610d9d565b60405185815233907fa63d9d1536f0a17779061a910d29ff26af4aa035bbd6c128b55bfde21d6a2b409060200160405180910390a250509392505050565b3360009081526007602052604090205460ff166107fe57600080fd5b806009600082825461081091906114db565b909155505050565b60008061082460035490565b1115610868576003546001600160a01b03831660009081526001602052604090205461084e61049c565b61085891906114bc565b610862919061149a565b92915050565b5060005b919050565b60003361087f858285610e7c565b61088a858585610ef6565b506001949350505050565b3360009081526007602052604090205460ff166108b157600080fd5b80600960008282546108109190611482565b60006009546108d061049c565b6108da9190611482565b90506108e461049c565b8211156108f057600080fd5b6000816108fc60035490565b61090690856114bc565b610910919061149a565b336000908152600160205260409020549091508111156109685760405162461bcd60e51b8152602060048201526013602482015272416d6f756e7420697320746f6f206c6172676560681b604482015260640161055e565b61097233826110c4565b60085460405163a9059cbb60e01b8152336004820152602481018590526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156109be57600080fd5b505af11580156109d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f691906113de565b5060405183815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a2505050565b600033610492818585610a448383610bba565b610a4e9190611482565b610c79565b610a5b611212565b610a65600061126c565b565b606060058054610401906114f2565b60003381610a848286610bba565b905083811015610ae45760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161055e565b61088a8286868403610c79565b600033610492818585610ef6565b3360009081526007602052604090205460ff16610b1b57600080fd5b610b2361049c565b811115610b2f57600080fd5b60085460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b158015610b7d57600080fd5b505af1158015610b91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb591906113de565b505050565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b610bed611212565b600a805460ff1916911515919091179055565b610c08611212565b6001600160a01b038116610c6d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161055e565b610c768161126c565b50565b6001600160a01b038316610cdb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161055e565b6001600160a01b038216610d3c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161055e565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038216610df35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161055e565b8060036000828254610e059190611482565b90915550506001600160a01b03821660009081526001602052604081208054839290610e32908490611482565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000610e888484610bba565b90506000198114610ef05781811015610ee35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161055e565b610ef08484848403610c79565b50505050565b6001600160a01b038316610f5a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161055e565b6001600160a01b038216610fbc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161055e565b6001600160a01b038316600090815260016020526040902054818110156110345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161055e565b6001600160a01b0380851660009081526001602052604080822085850390559185168152908120805484929061106b908490611482565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110b791815260200190565b60405180910390a3610ef0565b6001600160a01b0382166111245760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161055e565b6001600160a01b038216600090815260016020526040902054818110156111985760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161055e565b6001600160a01b03831660009081526001602052604081208383039055600380548492906111c79084906114db565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6000546001600160a01b03163314610a655760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161055e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461086c57600080fd5b6000602082840312156112e557600080fd5b6112ee826112bc565b9392505050565b6000806040838503121561130857600080fd5b611311836112bc565b915061131f602084016112bc565b90509250929050565b60008060006060848603121561133d57600080fd5b611346846112bc565b9250611354602085016112bc565b9150604084013590509250925092565b6000806040838503121561137757600080fd5b611380836112bc565b946020939093013593505050565b6000806000606084860312156113a357600080fd5b6113ac846112bc565b95602085013595506040909401359392505050565b6000602082840312156113d357600080fd5b81356112ee81611543565b6000602082840312156113f057600080fd5b81516112ee81611543565b60006020828403121561140d57600080fd5b5035919050565b60006020828403121561142657600080fd5b5051919050565b600060208083528351808285015260005b8181101561145a5785810183015185820160400152820161143e565b8181111561146c576000604083870101525b50601f01601f1916929092016040019392505050565b600082198211156114955761149561152d565b500190565b6000826114b757634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156114d6576114d661152d565b500290565b6000828210156114ed576114ed61152d565b500390565b600181811c9082168061150657607f821691505b6020821081141561152757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8015158114610c7657600080fdfea2646970667358221220fea850941bdf1ef1a35f2a61fd3618033761b490cac2c4532bd86a53ff80618264736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 NOT PUSH1 0x6 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1860 CODESIZE SUB DUP1 PUSH3 0x1860 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x47 SWAP2 PUSH3 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x15DC9A5D1A5B99C8111113 PUSH1 0xAA SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x111113 PUSH1 0xEA SHL DUP2 MSTORE POP PUSH3 0xA1 PUSH3 0x9B PUSH3 0x125 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x129 JUMP JUMPDEST DUP2 MLOAD PUSH3 0xB6 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x179 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0xCC SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x179 JUMP JUMPDEST POP POP PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND OR SWAP1 SSTORE POP SWAP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0x2C9 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x187 SWAP1 PUSH3 0x273 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1AB JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1F6 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1C6 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1F6 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1F6 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1F6 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1D9 JUMP JUMPDEST POP PUSH3 0x204 SWAP3 SWAP2 POP PUSH3 0x208 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x204 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x209 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x242 DUP2 PUSH3 0x2B0 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH3 0x255 DUP2 PUSH3 0x2B0 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH3 0x268 DUP2 PUSH3 0x2B0 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x288 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2AA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1587 DUP1 PUSH3 0x2D9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x56891412 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xE3B86A5E EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xAE3050E1 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0xD0679D34 EQ PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x8ED83271 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x56891412 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x313CE567 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x32F13D8C EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x4DBAC733 EQ PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x2BC355CA EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13BDDE8B GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x13BDDE8B EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x1B45A68D EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x21E5E2C4 EQ PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x12B58349 EQ PUSH2 0x20A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D1 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x142D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FA PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1364 JUMP JUMPDEST PUSH2 0x484 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x212 PUSH2 0x49C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x212 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0x138E JUMP JUMPDEST PUSH2 0x51D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x212 JUMP JUMPDEST PUSH2 0x24E PUSH2 0x249 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FB JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x212 PUSH2 0x25E CALLDATASIZE PUSH1 0x4 PUSH2 0x12D3 JUMP JUMPDEST PUSH2 0x818 JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0x1328 JUMP JUMPDEST PUSH2 0x871 JUMP JUMPDEST PUSH2 0x24E PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FB JUMP JUMPDEST PUSH2 0x895 JUMP JUMPDEST PUSH2 0x24E PUSH2 0x297 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FB JUMP JUMPDEST PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D3 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x1364 JUMP JUMPDEST PUSH2 0xA31 JUMP JUMPDEST PUSH2 0x212 PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH2 0x212 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x212 PUSH2 0x307 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x24E PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x212 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0xA67 JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x1364 JUMP JUMPDEST PUSH2 0xA76 JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x381 CALLDATASIZE PUSH1 0x4 PUSH2 0x1364 JUMP JUMPDEST PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1FA SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x24E PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1364 JUMP JUMPDEST PUSH2 0xAFF JUMP JUMPDEST PUSH2 0x212 PUSH2 0x3B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x12F5 JUMP JUMPDEST PUSH2 0xBBA JUMP JUMPDEST PUSH2 0x24E PUSH2 0x3C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C1 JUMP JUMPDEST PUSH2 0xBE5 JUMP JUMPDEST PUSH2 0x24E PUSH2 0x3DA CALLDATASIZE PUSH1 0x4 PUSH2 0x12D3 JUMP JUMPDEST PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x337 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x401 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x42D SWAP1 PUSH2 0x14F2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x47A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x47A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x45D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x492 DUP2 DUP6 DUP6 PUSH2 0xC79 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x518 SWAP2 SWAP1 PUSH2 0x1414 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0x567 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1C185D5CD95119511953195B99 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD PUSH2 0x574 PUSH2 0x49C JUMP JUMPDEST PUSH2 0x57E SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x58B PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x598 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x5B3 JUMPI PUSH2 0x5AE PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x14BC JUMP JUMPDEST PUSH2 0x5D1 JUMP JUMPDEST DUP1 PUSH2 0x5BD PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5C7 SWAP1 DUP7 PUSH2 0x14BC JUMP JUMPDEST PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x149A JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP2 PUSH1 0x6 SLOAD PUSH2 0x5E3 SWAP2 SWAP1 PUSH2 0x14DB JUMP JUMPDEST SWAP1 POP DUP4 DUP4 LT ISZERO PUSH2 0x645 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C204572726F723A20546865206D696E74206C696D697420697320746F PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x6F206C61726765 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x6A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C204572726F723A2054686520616D6F756E7420697320746F6F20736D PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x185B1B PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x55E JUMP JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x70F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C204572726F723A204465706F736974696E6720696E746F2074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x706F6F6C206973206E6F7420617661696C61626C65 PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x761 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x775 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x799 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST POP PUSH2 0x7A4 CALLER DUP5 PUSH2 0xD9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE CALLER SWAP1 PUSH32 0xA63D9D1536F0A17779061A910D29FF26AF4AA035BBD6C128B55BFDE21D6A2B40 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x7FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x810 SWAP2 SWAP1 PUSH2 0x14DB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x824 PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0x868 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x84E PUSH2 0x49C JUMP JUMPDEST PUSH2 0x858 SWAP2 SWAP1 PUSH2 0x14BC JUMP JUMPDEST PUSH2 0x862 SWAP2 SWAP1 PUSH2 0x149A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x87F DUP6 DUP3 DUP6 PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x88A DUP6 DUP6 DUP6 PUSH2 0xEF6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x8B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x810 SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD PUSH2 0x8D0 PUSH2 0x49C JUMP JUMPDEST PUSH2 0x8DA SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST SWAP1 POP PUSH2 0x8E4 PUSH2 0x49C JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x8F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x8FC PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x906 SWAP1 DUP6 PUSH2 0x14BC JUMP JUMPDEST PUSH2 0x910 SWAP2 SWAP1 PUSH2 0x149A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 GT ISZERO PUSH2 0x968 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x416D6F756E7420697320746F6F206C61726765 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55E JUMP JUMPDEST PUSH2 0x972 CALLER DUP3 PUSH2 0x10C4 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9F6 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x492 DUP2 DUP6 DUP6 PUSH2 0xA44 DUP4 DUP4 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0xA4E SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST PUSH2 0xC79 JUMP JUMPDEST PUSH2 0xA5B PUSH2 0x1212 JUMP JUMPDEST PUSH2 0xA65 PUSH1 0x0 PUSH2 0x126C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x401 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0xA84 DUP3 DUP7 PUSH2 0xBBA JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xAE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x55E JUMP JUMPDEST PUSH2 0x88A DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xC79 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x492 DUP2 DUP6 DUP6 PUSH2 0xEF6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB23 PUSH2 0x49C JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xB2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB91 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBB5 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xBED PUSH2 0x1212 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xC08 PUSH2 0x1212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x55E JUMP JUMPDEST PUSH2 0xC76 DUP2 PUSH2 0x126C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55E JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE05 SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xE32 SWAP1 DUP5 SWAP1 PUSH2 0x1482 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE88 DUP5 DUP5 PUSH2 0xBBA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0xEF0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xEE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55E JUMP JUMPDEST PUSH2 0xEF0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xC79 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFBC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1034 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x106B SWAP1 DUP5 SWAP1 PUSH2 0x1482 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x10B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xEF0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1124 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x11C7 SWAP1 DUP5 SWAP1 PUSH2 0x14DB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x86C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12EE DUP3 PUSH2 0x12BC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1311 DUP4 PUSH2 0x12BC JUMP JUMPDEST SWAP2 POP PUSH2 0x131F PUSH1 0x20 DUP5 ADD PUSH2 0x12BC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x133D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1346 DUP5 PUSH2 0x12BC JUMP JUMPDEST SWAP3 POP PUSH2 0x1354 PUSH1 0x20 DUP6 ADD PUSH2 0x12BC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1380 DUP4 PUSH2 0x12BC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13AC DUP5 PUSH2 0x12BC JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x12EE DUP2 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x12EE DUP2 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x140D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x145A JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x143E JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x146C JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1495 JUMPI PUSH2 0x1495 PUSH2 0x152D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x14B7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x14D6 JUMPI PUSH2 0x14D6 PUSH2 0x152D JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x14ED JUMPI PUSH2 0x14ED PUSH2 0x152D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1506 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1527 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC76 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xA8 POP SWAP5 SHL 0xDF 0x1E CALL LOG3 0x5F 0x2A PUSH2 0xFD36 XOR SUB CALLDATACOPY PUSH2 0xB490 0xCA 0xC2 0xC4 MSTORE8 0x2B 0xD8 PUSH11 0x53FF80618264736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"134:2843:20:-:0;;;-1:-1:-1;;246:51:20;;410:31;;;-1:-1:-1;;410:31:20;437:4;410:31;;;1276:218;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1978:113:2;;;;;;;;;;;;;-1:-1:-1;;;1978:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:113:2;;;936:32:1;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;2044:13:2;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2067:17:2;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;1387:5:20;:14;;-1:-1:-1;;;;;;1387:14:20;-1:-1:-1;;;;;1387:14:20;;;;;;-1:-1:-1;1411:26:20;;;-1:-1:-1;1411:26:20;;;:12;:26;;;;;;:33;;-1:-1:-1;;1411:33:20;;;-1:-1:-1;1411:33:20;;;;;;1454:26;;;;;;;;:33;;;;;;;;;;134:2843;;640:96:12;719:10;;640:96::o;2433:187:1:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:1;;;-1:-1:-1;;;;;;2541:17:1;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;134:2843:20:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;134:2843:20;;;-1:-1:-1;134:2843:20;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:533:21;116:6;124;132;185:2;173:9;164:7;160:23;156:32;153:2;;;201:1;198;191:12;153:2;233:9;227:16;252:31;277:5;252:31;:::i;:::-;352:2;337:18;;331:25;302:5;;-1:-1:-1;365:33:21;331:25;365:33;:::i;:::-;469:2;454:18;;448:25;417:7;;-1:-1:-1;482:33:21;448:25;482:33;:::i;:::-;534:7;524:17;;;143:404;;;;;:::o;552:380::-;631:1;627:12;;;;674;;;695:2;;749:4;741:6;737:17;727:27;;695:2;802;794:6;791:14;771:18;768:38;765:2;;;848:10;843:3;839:20;836:1;829:31;883:4;880:1;873:15;911:4;908:1;901:15;765:2;;607:325;;;:::o;937:131::-;-1:-1:-1;;;;;1012:31:21;;1002:42;;992:2;;1058:1;1055;1048:12;992:2;982:86;:::o;:::-;134:2843:20;;;;;;"},"deployedBytecode":{"functionDebugData":{"@INITIAL_RATE_4379":{"entryPoint":null,"id":4379,"parameterSlots":0,"returnSlots":0},"@_afterTokenTransfer_743":{"entryPoint":null,"id":743,"parameterSlots":3,"returnSlots":0},"@_approve_678":{"entryPoint":3193,"id":678,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_732":{"entryPoint":null,"id":732,"parameterSlots":3,"returnSlots":0},"@_burn_633":{"entryPoint":4292,"id":633,"parameterSlots":2,"returnSlots":0},"@_checkOwner_100":{"entryPoint":4626,"id":100,"parameterSlots":0,"returnSlots":0},"@_mint_561":{"entryPoint":3485,"id":561,"parameterSlots":2,"returnSlots":0},"@_msgSender_2499":{"entryPoint":null,"id":2499,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_721":{"entryPoint":3708,"id":721,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_157":{"entryPoint":4716,"id":157,"parameterSlots":1,"returnSlots":0},"@_transfer_505":{"entryPoint":3830,"id":505,"parameterSlots":3,"returnSlots":0},"@addTotalLocked_4439":{"entryPoint":2197,"id":4439,"parameterSlots":1,"returnSlots":0},"@allowance_300":{"entryPoint":3002,"id":300,"parameterSlots":2,"returnSlots":1},"@approve_325":{"entryPoint":1156,"id":325,"parameterSlots":2,"returnSlots":1},"@balanceOf_257":{"entryPoint":null,"id":257,"parameterSlots":1,"returnSlots":1},"@changeOpenDeDeLend_4422":{"entryPoint":3045,"id":4422,"parameterSlots":1,"returnSlots":0},"@ddlContracts_4390":{"entryPoint":null,"id":4390,"parameterSlots":0,"returnSlots":0},"@decimals_233":{"entryPoint":null,"id":233,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_428":{"entryPoint":2678,"id":428,"parameterSlots":2,"returnSlots":1},"@getTotalBalance_4472":{"entryPoint":1180,"id":4472,"parameterSlots":0,"returnSlots":1},"@increaseAllowance_387":{"entryPoint":2609,"id":387,"parameterSlots":2,"returnSlots":1},"@maxDepositAmount_4386":{"entryPoint":null,"id":4386,"parameterSlots":0,"returnSlots":0},"@name_213":{"entryPoint":1010,"id":213,"parameterSlots":0,"returnSlots":1},"@openDeDeLend_4398":{"entryPoint":null,"id":4398,"parameterSlots":0,"returnSlots":0},"@owner_86":{"entryPoint":null,"id":86,"parameterSlots":0,"returnSlots":1},"@provideFrom_4626":{"entryPoint":1309,"id":4626,"parameterSlots":3,"returnSlots":1},"@renounceOwnership_114":{"entryPoint":2643,"id":114,"parameterSlots":0,"returnSlots":0},"@send_4715":{"entryPoint":2815,"id":4715,"parameterSlots":2,"returnSlots":0},"@shareOf_4502":{"entryPoint":2072,"id":4502,"parameterSlots":1,"returnSlots":1},"@subTotalLocked_4456":{"entryPoint":2018,"id":4456,"parameterSlots":1,"returnSlots":0},"@symbol_223":{"entryPoint":2663,"id":223,"parameterSlots":0,"returnSlots":1},"@token_4393":{"entryPoint":null,"id":4393,"parameterSlots":0,"returnSlots":0},"@totalLocked_4395":{"entryPoint":null,"id":4395,"parameterSlots":0,"returnSlots":0},"@totalSupply_243":{"entryPoint":null,"id":243,"parameterSlots":0,"returnSlots":1},"@transferFrom_358":{"entryPoint":2161,"id":358,"parameterSlots":3,"returnSlots":1},"@transferOwnership_137":{"entryPoint":3072,"id":137,"parameterSlots":1,"returnSlots":0},"@transfer_282":{"entryPoint":2801,"id":282,"parameterSlots":2,"returnSlots":1},"@withdraw_4686":{"entryPoint":2243,"id":4686,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":4796,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4819,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4853,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":4904,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":4964,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":5006,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool":{"entryPoint":5057,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":5086,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5115,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":5140,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$822__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5165,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_33e2b1f84abe46a3fc0645ff9d05c4355790ff6c0ca7542300a6e6f0867cd147__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_374e68e173e86f595df5cf495ac0ac4f9128724fe573c888db944b89d7cc2af8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_53c8d4b505fc4a6062e9676e98edcc8d1715f5765c94eec04006fa629d8118d0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_92aacf893d2b78594d88afacb0b9e3fb8ba3272d88dc07c1b2cb0b3f742f8ed6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b87bd4f8ab6cab4e05b627666c690eac70070f778ac6ae87e78c887e9456ebc1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5250,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":5274,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":5308,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5339,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":5362,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5421,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bool":{"entryPoint":5443,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:12632:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:21","statements":[{"nodeType":"YulAssignment","src":"73:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:21"},"nodeType":"YulFunctionCall","src":"82:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:21"}]},{"body":{"nodeType":"YulBlock","src":"165:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:21"},"nodeType":"YulFunctionCall","src":"167:12:21"},"nodeType":"YulExpressionStatement","src":"167:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:21"},"nodeType":"YulFunctionCall","src":"146:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:21"},"nodeType":"YulFunctionCall","src":"142:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:21"},"nodeType":"YulFunctionCall","src":"131:31:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:21"},"nodeType":"YulFunctionCall","src":"121:42:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:21"},"nodeType":"YulFunctionCall","src":"114:50:21"},"nodeType":"YulIf","src":"111:2:21"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:21","type":""}],"src":"14:173:21"},{"body":{"nodeType":"YulBlock","src":"262:116:21","statements":[{"body":{"nodeType":"YulBlock","src":"308:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:21"},"nodeType":"YulFunctionCall","src":"310:12:21"},"nodeType":"YulExpressionStatement","src":"310:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"283:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"292:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"279:3:21"},"nodeType":"YulFunctionCall","src":"279:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"304:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"275:3:21"},"nodeType":"YulFunctionCall","src":"275:32:21"},"nodeType":"YulIf","src":"272:2:21"},{"nodeType":"YulAssignment","src":"333:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"362:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"343:18:21"},"nodeType":"YulFunctionCall","src":"343:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"333:6:21"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"228:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"239:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"251:6:21","type":""}],"src":"192:186:21"},{"body":{"nodeType":"YulBlock","src":"470:173:21","statements":[{"body":{"nodeType":"YulBlock","src":"516:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"525:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"528:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"518:6:21"},"nodeType":"YulFunctionCall","src":"518:12:21"},"nodeType":"YulExpressionStatement","src":"518:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"491:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"500:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"487:3:21"},"nodeType":"YulFunctionCall","src":"487:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"512:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"483:3:21"},"nodeType":"YulFunctionCall","src":"483:32:21"},"nodeType":"YulIf","src":"480:2:21"},{"nodeType":"YulAssignment","src":"541:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"570:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"551:18:21"},"nodeType":"YulFunctionCall","src":"551:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"541:6:21"}]},{"nodeType":"YulAssignment","src":"589:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"622:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"633:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"618:3:21"},"nodeType":"YulFunctionCall","src":"618:18:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"599:18:21"},"nodeType":"YulFunctionCall","src":"599:38:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"589:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"428:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"439:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"451:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"459:6:21","type":""}],"src":"383:260:21"},{"body":{"nodeType":"YulBlock","src":"752:224:21","statements":[{"body":{"nodeType":"YulBlock","src":"798:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"807:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"810:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"800:6:21"},"nodeType":"YulFunctionCall","src":"800:12:21"},"nodeType":"YulExpressionStatement","src":"800:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"773:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"782:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"769:3:21"},"nodeType":"YulFunctionCall","src":"769:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"794:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"765:3:21"},"nodeType":"YulFunctionCall","src":"765:32:21"},"nodeType":"YulIf","src":"762:2:21"},{"nodeType":"YulAssignment","src":"823:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"852:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"833:18:21"},"nodeType":"YulFunctionCall","src":"833:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"823:6:21"}]},{"nodeType":"YulAssignment","src":"871:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"904:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"915:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"900:3:21"},"nodeType":"YulFunctionCall","src":"900:18:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"881:18:21"},"nodeType":"YulFunctionCall","src":"881:38:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"871:6:21"}]},{"nodeType":"YulAssignment","src":"928:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"955:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"966:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"951:3:21"},"nodeType":"YulFunctionCall","src":"951:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"938:12:21"},"nodeType":"YulFunctionCall","src":"938:32:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"928:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"702:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"713:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"725:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"733:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"741:6:21","type":""}],"src":"648:328:21"},{"body":{"nodeType":"YulBlock","src":"1068:167:21","statements":[{"body":{"nodeType":"YulBlock","src":"1114:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1123:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1126:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1116:6:21"},"nodeType":"YulFunctionCall","src":"1116:12:21"},"nodeType":"YulExpressionStatement","src":"1116:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1089:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1098:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1085:3:21"},"nodeType":"YulFunctionCall","src":"1085:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1110:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1081:3:21"},"nodeType":"YulFunctionCall","src":"1081:32:21"},"nodeType":"YulIf","src":"1078:2:21"},{"nodeType":"YulAssignment","src":"1139:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1149:18:21"},"nodeType":"YulFunctionCall","src":"1149:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1139:6:21"}]},{"nodeType":"YulAssignment","src":"1187:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1214:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1225:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1210:3:21"},"nodeType":"YulFunctionCall","src":"1210:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1197:12:21"},"nodeType":"YulFunctionCall","src":"1197:32:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1187:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1026:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1037:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1049:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1057:6:21","type":""}],"src":"981:254:21"},{"body":{"nodeType":"YulBlock","src":"1344:218:21","statements":[{"body":{"nodeType":"YulBlock","src":"1390:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1399:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1402:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1392:6:21"},"nodeType":"YulFunctionCall","src":"1392:12:21"},"nodeType":"YulExpressionStatement","src":"1392:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1365:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1374:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1361:3:21"},"nodeType":"YulFunctionCall","src":"1361:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1386:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1357:3:21"},"nodeType":"YulFunctionCall","src":"1357:32:21"},"nodeType":"YulIf","src":"1354:2:21"},{"nodeType":"YulAssignment","src":"1415:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1444:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1425:18:21"},"nodeType":"YulFunctionCall","src":"1425:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1415:6:21"}]},{"nodeType":"YulAssignment","src":"1463:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1490:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1501:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1486:3:21"},"nodeType":"YulFunctionCall","src":"1486:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1473:12:21"},"nodeType":"YulFunctionCall","src":"1473:32:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1463:6:21"}]},{"nodeType":"YulAssignment","src":"1514:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1541:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1552:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1537:3:21"},"nodeType":"YulFunctionCall","src":"1537:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1524:12:21"},"nodeType":"YulFunctionCall","src":"1524:32:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1514:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1294:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1305:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1317:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1325:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1333:6:21","type":""}],"src":"1240:322:21"},{"body":{"nodeType":"YulBlock","src":"1634:174:21","statements":[{"body":{"nodeType":"YulBlock","src":"1680:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1689:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1692:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1682:6:21"},"nodeType":"YulFunctionCall","src":"1682:12:21"},"nodeType":"YulExpressionStatement","src":"1682:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1655:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1664:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1651:3:21"},"nodeType":"YulFunctionCall","src":"1651:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1676:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1647:3:21"},"nodeType":"YulFunctionCall","src":"1647:32:21"},"nodeType":"YulIf","src":"1644:2:21"},{"nodeType":"YulVariableDeclaration","src":"1705:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1731:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1718:12:21"},"nodeType":"YulFunctionCall","src":"1718:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1709:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1772:5:21"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"1750:21:21"},"nodeType":"YulFunctionCall","src":"1750:28:21"},"nodeType":"YulExpressionStatement","src":"1750:28:21"},{"nodeType":"YulAssignment","src":"1787:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"1797:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1787:6:21"}]}]},"name":"abi_decode_tuple_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1600:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1611:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1623:6:21","type":""}],"src":"1567:241:21"},{"body":{"nodeType":"YulBlock","src":"1891:167:21","statements":[{"body":{"nodeType":"YulBlock","src":"1937:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1946:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1949:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1939:6:21"},"nodeType":"YulFunctionCall","src":"1939:12:21"},"nodeType":"YulExpressionStatement","src":"1939:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1912:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1921:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1908:3:21"},"nodeType":"YulFunctionCall","src":"1908:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1933:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1904:3:21"},"nodeType":"YulFunctionCall","src":"1904:32:21"},"nodeType":"YulIf","src":"1901:2:21"},{"nodeType":"YulVariableDeclaration","src":"1962:29:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1981:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1975:5:21"},"nodeType":"YulFunctionCall","src":"1975:16:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1966:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2022:5:21"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"2000:21:21"},"nodeType":"YulFunctionCall","src":"2000:28:21"},"nodeType":"YulExpressionStatement","src":"2000:28:21"},{"nodeType":"YulAssignment","src":"2037:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"2047:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2037:6:21"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1857:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1868:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1880:6:21","type":""}],"src":"1813:245:21"},{"body":{"nodeType":"YulBlock","src":"2133:110:21","statements":[{"body":{"nodeType":"YulBlock","src":"2179:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2188:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2191:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2181:6:21"},"nodeType":"YulFunctionCall","src":"2181:12:21"},"nodeType":"YulExpressionStatement","src":"2181:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2154:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2163:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2150:3:21"},"nodeType":"YulFunctionCall","src":"2150:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2175:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2146:3:21"},"nodeType":"YulFunctionCall","src":"2146:32:21"},"nodeType":"YulIf","src":"2143:2:21"},{"nodeType":"YulAssignment","src":"2204:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2227:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2214:12:21"},"nodeType":"YulFunctionCall","src":"2214:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2204:6:21"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2099:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2110:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2122:6:21","type":""}],"src":"2063:180:21"},{"body":{"nodeType":"YulBlock","src":"2329:103:21","statements":[{"body":{"nodeType":"YulBlock","src":"2375:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2384:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2387:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2377:6:21"},"nodeType":"YulFunctionCall","src":"2377:12:21"},"nodeType":"YulExpressionStatement","src":"2377:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2350:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2359:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2346:3:21"},"nodeType":"YulFunctionCall","src":"2346:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2371:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2342:3:21"},"nodeType":"YulFunctionCall","src":"2342:32:21"},"nodeType":"YulIf","src":"2339:2:21"},{"nodeType":"YulAssignment","src":"2400:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2416:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2410:5:21"},"nodeType":"YulFunctionCall","src":"2410:16:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2400:6:21"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2295:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2306:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2318:6:21","type":""}],"src":"2248:184:21"},{"body":{"nodeType":"YulBlock","src":"2538:102:21","statements":[{"nodeType":"YulAssignment","src":"2548:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2560:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2571:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2556:3:21"},"nodeType":"YulFunctionCall","src":"2556:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2548:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2590:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2605:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2621:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2626:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2617:3:21"},"nodeType":"YulFunctionCall","src":"2617:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"2630:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2613:3:21"},"nodeType":"YulFunctionCall","src":"2613:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2601:3:21"},"nodeType":"YulFunctionCall","src":"2601:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2583:6:21"},"nodeType":"YulFunctionCall","src":"2583:51:21"},"nodeType":"YulExpressionStatement","src":"2583:51:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2507:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2518:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2529:4:21","type":""}],"src":"2437:203:21"},{"body":{"nodeType":"YulBlock","src":"2802:218:21","statements":[{"nodeType":"YulAssignment","src":"2812:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2824:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2835:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2820:3:21"},"nodeType":"YulFunctionCall","src":"2820:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2812:4:21"}]},{"nodeType":"YulVariableDeclaration","src":"2847:29:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2865:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2870:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2861:3:21"},"nodeType":"YulFunctionCall","src":"2861:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"2874:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2857:3:21"},"nodeType":"YulFunctionCall","src":"2857:19:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2851:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2892:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2907:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"2915:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2903:3:21"},"nodeType":"YulFunctionCall","src":"2903:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2885:6:21"},"nodeType":"YulFunctionCall","src":"2885:34:21"},"nodeType":"YulExpressionStatement","src":"2885:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2939:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2950:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2935:3:21"},"nodeType":"YulFunctionCall","src":"2935:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2959:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"2967:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2955:3:21"},"nodeType":"YulFunctionCall","src":"2955:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2928:6:21"},"nodeType":"YulFunctionCall","src":"2928:43:21"},"nodeType":"YulExpressionStatement","src":"2928:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2991:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3002:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2987:3:21"},"nodeType":"YulFunctionCall","src":"2987:18:21"},{"name":"value2","nodeType":"YulIdentifier","src":"3007:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2980:6:21"},"nodeType":"YulFunctionCall","src":"2980:34:21"},"nodeType":"YulExpressionStatement","src":"2980:34:21"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2755:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2766:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2774:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2782:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2793:4:21","type":""}],"src":"2645:375:21"},{"body":{"nodeType":"YulBlock","src":"3154:145:21","statements":[{"nodeType":"YulAssignment","src":"3164:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3176:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3187:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3172:3:21"},"nodeType":"YulFunctionCall","src":"3172:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3164:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3206:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3221:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3237:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3242:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3233:3:21"},"nodeType":"YulFunctionCall","src":"3233:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"3246:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3229:3:21"},"nodeType":"YulFunctionCall","src":"3229:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3217:3:21"},"nodeType":"YulFunctionCall","src":"3217:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3199:6:21"},"nodeType":"YulFunctionCall","src":"3199:51:21"},"nodeType":"YulExpressionStatement","src":"3199:51:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:21"},"nodeType":"YulFunctionCall","src":"3266:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"3286:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3259:6:21"},"nodeType":"YulFunctionCall","src":"3259:34:21"},"nodeType":"YulExpressionStatement","src":"3259:34:21"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3115:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3126:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3134:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3145:4:21","type":""}],"src":"3025:274:21"},{"body":{"nodeType":"YulBlock","src":"3399:92:21","statements":[{"nodeType":"YulAssignment","src":"3409:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3421:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3432:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3417:3:21"},"nodeType":"YulFunctionCall","src":"3417:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3409:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3451:9:21"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3476:6:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3469:6:21"},"nodeType":"YulFunctionCall","src":"3469:14:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3462:6:21"},"nodeType":"YulFunctionCall","src":"3462:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3444:6:21"},"nodeType":"YulFunctionCall","src":"3444:41:21"},"nodeType":"YulExpressionStatement","src":"3444:41:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3368:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3379:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3390:4:21","type":""}],"src":"3304:187:21"},{"body":{"nodeType":"YulBlock","src":"3611:102:21","statements":[{"nodeType":"YulAssignment","src":"3621:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3633:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3644:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3629:3:21"},"nodeType":"YulFunctionCall","src":"3629:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3621:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3663:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3678:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3694:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3699:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3690:3:21"},"nodeType":"YulFunctionCall","src":"3690:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"3703:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3686:3:21"},"nodeType":"YulFunctionCall","src":"3686:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3674:3:21"},"nodeType":"YulFunctionCall","src":"3674:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3656:6:21"},"nodeType":"YulFunctionCall","src":"3656:51:21"},"nodeType":"YulExpressionStatement","src":"3656:51:21"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$822__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3580:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3591:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3602:4:21","type":""}],"src":"3496:217:21"},{"body":{"nodeType":"YulBlock","src":"3839:476:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3849:12:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3859:2:21","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3853:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3877:9:21"},{"name":"_1","nodeType":"YulIdentifier","src":"3888:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3870:6:21"},"nodeType":"YulFunctionCall","src":"3870:21:21"},"nodeType":"YulExpressionStatement","src":"3870:21:21"},{"nodeType":"YulVariableDeclaration","src":"3900:27:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3920:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3914:5:21"},"nodeType":"YulFunctionCall","src":"3914:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3904:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3947:9:21"},{"name":"_1","nodeType":"YulIdentifier","src":"3958:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3943:3:21"},"nodeType":"YulFunctionCall","src":"3943:18:21"},{"name":"length","nodeType":"YulIdentifier","src":"3963:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3936:6:21"},"nodeType":"YulFunctionCall","src":"3936:34:21"},"nodeType":"YulExpressionStatement","src":"3936:34:21"},{"nodeType":"YulVariableDeclaration","src":"3979:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3988:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3983:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"4048:90:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4077:9:21"},{"name":"i","nodeType":"YulIdentifier","src":"4088:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4073:3:21"},"nodeType":"YulFunctionCall","src":"4073:17:21"},{"kind":"number","nodeType":"YulLiteral","src":"4092:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4069:3:21"},"nodeType":"YulFunctionCall","src":"4069:26:21"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4111:6:21"},{"name":"i","nodeType":"YulIdentifier","src":"4119:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4107:3:21"},"nodeType":"YulFunctionCall","src":"4107:14:21"},{"name":"_1","nodeType":"YulIdentifier","src":"4123:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4103:3:21"},"nodeType":"YulFunctionCall","src":"4103:23:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4097:5:21"},"nodeType":"YulFunctionCall","src":"4097:30:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4062:6:21"},"nodeType":"YulFunctionCall","src":"4062:66:21"},"nodeType":"YulExpressionStatement","src":"4062:66:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4009:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"4012:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4006:2:21"},"nodeType":"YulFunctionCall","src":"4006:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4020:19:21","statements":[{"nodeType":"YulAssignment","src":"4022:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4031:1:21"},{"name":"_1","nodeType":"YulIdentifier","src":"4034:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4027:3:21"},"nodeType":"YulFunctionCall","src":"4027:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4022:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"4002:3:21","statements":[]},"src":"3998:140:21"},{"body":{"nodeType":"YulBlock","src":"4172:66:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4201:9:21"},{"name":"length","nodeType":"YulIdentifier","src":"4212:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4197:3:21"},"nodeType":"YulFunctionCall","src":"4197:22:21"},{"kind":"number","nodeType":"YulLiteral","src":"4221:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4193:3:21"},"nodeType":"YulFunctionCall","src":"4193:31:21"},{"kind":"number","nodeType":"YulLiteral","src":"4226:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4186:6:21"},"nodeType":"YulFunctionCall","src":"4186:42:21"},"nodeType":"YulExpressionStatement","src":"4186:42:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4153:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"4156:6:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4150:2:21"},"nodeType":"YulFunctionCall","src":"4150:13:21"},"nodeType":"YulIf","src":"4147:2:21"},{"nodeType":"YulAssignment","src":"4247:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4263:9:21"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4282:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4290:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4278:3:21"},"nodeType":"YulFunctionCall","src":"4278:15:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4299:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4295:3:21"},"nodeType":"YulFunctionCall","src":"4295:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4274:3:21"},"nodeType":"YulFunctionCall","src":"4274:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4259:3:21"},"nodeType":"YulFunctionCall","src":"4259:45:21"},{"kind":"number","nodeType":"YulLiteral","src":"4306:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4255:3:21"},"nodeType":"YulFunctionCall","src":"4255:54:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4247:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3808:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3819:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3830:4:21","type":""}],"src":"3718:597:21"},{"body":{"nodeType":"YulBlock","src":"4494:225:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4511:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4522:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4504:6:21"},"nodeType":"YulFunctionCall","src":"4504:21:21"},"nodeType":"YulExpressionStatement","src":"4504:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4545:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4556:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4541:3:21"},"nodeType":"YulFunctionCall","src":"4541:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"4561:2:21","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4534:6:21"},"nodeType":"YulFunctionCall","src":"4534:30:21"},"nodeType":"YulExpressionStatement","src":"4534:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4584:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4595:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4580:3:21"},"nodeType":"YulFunctionCall","src":"4580:18:21"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"4600:34:21","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4573:6:21"},"nodeType":"YulFunctionCall","src":"4573:62:21"},"nodeType":"YulExpressionStatement","src":"4573:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4655:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4666:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4651:3:21"},"nodeType":"YulFunctionCall","src":"4651:18:21"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"4671:5:21","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4644:6:21"},"nodeType":"YulFunctionCall","src":"4644:33:21"},"nodeType":"YulExpressionStatement","src":"4644:33:21"},{"nodeType":"YulAssignment","src":"4686:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4698:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4709:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4694:3:21"},"nodeType":"YulFunctionCall","src":"4694:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4686:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4471:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4485:4:21","type":""}],"src":"4320:399:21"},{"body":{"nodeType":"YulBlock","src":"4898:224:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4915:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4926:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4908:6:21"},"nodeType":"YulFunctionCall","src":"4908:21:21"},"nodeType":"YulExpressionStatement","src":"4908:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4960:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4945:3:21"},"nodeType":"YulFunctionCall","src":"4945:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"4965:2:21","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4938:6:21"},"nodeType":"YulFunctionCall","src":"4938:30:21"},"nodeType":"YulExpressionStatement","src":"4938:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4988:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4999:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4984:3:21"},"nodeType":"YulFunctionCall","src":"4984:18:21"},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e","kind":"string","nodeType":"YulLiteral","src":"5004:34:21","type":"","value":"ERC20: burn amount exceeds balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4977:6:21"},"nodeType":"YulFunctionCall","src":"4977:62:21"},"nodeType":"YulExpressionStatement","src":"4977:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5059:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5070:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5055:3:21"},"nodeType":"YulFunctionCall","src":"5055:18:21"},{"hexValue":"6365","kind":"string","nodeType":"YulLiteral","src":"5075:4:21","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5048:6:21"},"nodeType":"YulFunctionCall","src":"5048:32:21"},"nodeType":"YulExpressionStatement","src":"5048:32:21"},{"nodeType":"YulAssignment","src":"5089:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5101:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5112:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5097:3:21"},"nodeType":"YulFunctionCall","src":"5097:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5089:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4875:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4889:4:21","type":""}],"src":"4724:398:21"},{"body":{"nodeType":"YulBlock","src":"5301:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5318:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5329:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5311:6:21"},"nodeType":"YulFunctionCall","src":"5311:21:21"},"nodeType":"YulExpressionStatement","src":"5311:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5352:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5363:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5348:3:21"},"nodeType":"YulFunctionCall","src":"5348:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"5368:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5341:6:21"},"nodeType":"YulFunctionCall","src":"5341:30:21"},"nodeType":"YulExpressionStatement","src":"5341:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5391:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5402:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5387:3:21"},"nodeType":"YulFunctionCall","src":"5387:18:21"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"5407:34:21","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5380:6:21"},"nodeType":"YulFunctionCall","src":"5380:62:21"},"nodeType":"YulExpressionStatement","src":"5380:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5462:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5473:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5458:3:21"},"nodeType":"YulFunctionCall","src":"5458:18:21"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"5478:8:21","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5451:6:21"},"nodeType":"YulFunctionCall","src":"5451:36:21"},"nodeType":"YulExpressionStatement","src":"5451:36:21"},{"nodeType":"YulAssignment","src":"5496:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5508:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5519:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5504:3:21"},"nodeType":"YulFunctionCall","src":"5504:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5496:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5278:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5292:4:21","type":""}],"src":"5127:402:21"},{"body":{"nodeType":"YulBlock","src":"5708:224:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5725:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5736:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5718:6:21"},"nodeType":"YulFunctionCall","src":"5718:21:21"},"nodeType":"YulExpressionStatement","src":"5718:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5759:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5770:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5755:3:21"},"nodeType":"YulFunctionCall","src":"5755:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"5775:2:21","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5748:6:21"},"nodeType":"YulFunctionCall","src":"5748:30:21"},"nodeType":"YulExpressionStatement","src":"5748:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5798:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5809:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5794:3:21"},"nodeType":"YulFunctionCall","src":"5794:18:21"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"5814:34:21","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5787:6:21"},"nodeType":"YulFunctionCall","src":"5787:62:21"},"nodeType":"YulExpressionStatement","src":"5787:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5869:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5880:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5865:3:21"},"nodeType":"YulFunctionCall","src":"5865:18:21"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"5885:4:21","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5858:6:21"},"nodeType":"YulFunctionCall","src":"5858:32:21"},"nodeType":"YulExpressionStatement","src":"5858:32:21"},{"nodeType":"YulAssignment","src":"5899:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5911:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5922:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5907:3:21"},"nodeType":"YulFunctionCall","src":"5907:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5899:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5685:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5699:4:21","type":""}],"src":"5534:398:21"},{"body":{"nodeType":"YulBlock","src":"6111:243:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6128:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6139:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6121:6:21"},"nodeType":"YulFunctionCall","src":"6121:21:21"},"nodeType":"YulExpressionStatement","src":"6121:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6162:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6173:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6158:3:21"},"nodeType":"YulFunctionCall","src":"6158:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"6178:2:21","type":"","value":"53"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6151:6:21"},"nodeType":"YulFunctionCall","src":"6151:30:21"},"nodeType":"YulExpressionStatement","src":"6151:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6201:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6212:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6197:3:21"},"nodeType":"YulFunctionCall","src":"6197:18:21"},{"hexValue":"506f6f6c204572726f723a204465706f736974696e6720696e746f2074686520","kind":"string","nodeType":"YulLiteral","src":"6217:34:21","type":"","value":"Pool Error: Depositing into the "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6190:6:21"},"nodeType":"YulFunctionCall","src":"6190:62:21"},"nodeType":"YulExpressionStatement","src":"6190:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6272:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6283:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6268:3:21"},"nodeType":"YulFunctionCall","src":"6268:18:21"},{"hexValue":"706f6f6c206973206e6f7420617661696c61626c65","kind":"string","nodeType":"YulLiteral","src":"6288:23:21","type":"","value":"pool is not available"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6261:6:21"},"nodeType":"YulFunctionCall","src":"6261:51:21"},"nodeType":"YulExpressionStatement","src":"6261:51:21"},{"nodeType":"YulAssignment","src":"6321:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6333:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6344:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6329:3:21"},"nodeType":"YulFunctionCall","src":"6329:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6321:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_33e2b1f84abe46a3fc0645ff9d05c4355790ff6c0ca7542300a6e6f0867cd147__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6088:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6102:4:21","type":""}],"src":"5937:417:21"},{"body":{"nodeType":"YulBlock","src":"6533:169:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6550:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6561:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6543:6:21"},"nodeType":"YulFunctionCall","src":"6543:21:21"},"nodeType":"YulExpressionStatement","src":"6543:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6584:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6595:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6580:3:21"},"nodeType":"YulFunctionCall","src":"6580:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"6600:2:21","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6573:6:21"},"nodeType":"YulFunctionCall","src":"6573:30:21"},"nodeType":"YulExpressionStatement","src":"6573:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6623:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6634:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6619:3:21"},"nodeType":"YulFunctionCall","src":"6619:18:21"},{"hexValue":"416d6f756e7420697320746f6f206c61726765","kind":"string","nodeType":"YulLiteral","src":"6639:21:21","type":"","value":"Amount is too large"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6612:6:21"},"nodeType":"YulFunctionCall","src":"6612:49:21"},"nodeType":"YulExpressionStatement","src":"6612:49:21"},{"nodeType":"YulAssignment","src":"6670:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6682:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6693:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6678:3:21"},"nodeType":"YulFunctionCall","src":"6678:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6670:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_374e68e173e86f595df5cf495ac0ac4f9128724fe573c888db944b89d7cc2af8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6510:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6524:4:21","type":""}],"src":"6359:343:21"},{"body":{"nodeType":"YulBlock","src":"6881:179:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6898:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6909:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6891:6:21"},"nodeType":"YulFunctionCall","src":"6891:21:21"},"nodeType":"YulExpressionStatement","src":"6891:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6932:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6943:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6928:3:21"},"nodeType":"YulFunctionCall","src":"6928:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"6948:2:21","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6921:6:21"},"nodeType":"YulFunctionCall","src":"6921:30:21"},"nodeType":"YulExpressionStatement","src":"6921:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6971:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6982:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6967:3:21"},"nodeType":"YulFunctionCall","src":"6967:18:21"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"6987:31:21","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6960:6:21"},"nodeType":"YulFunctionCall","src":"6960:59:21"},"nodeType":"YulExpressionStatement","src":"6960:59:21"},{"nodeType":"YulAssignment","src":"7028:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7040:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7051:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7036:3:21"},"nodeType":"YulFunctionCall","src":"7036:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7028:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6858:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6872:4:21","type":""}],"src":"6707:353:21"},{"body":{"nodeType":"YulBlock","src":"7239:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7256:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7267:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7249:6:21"},"nodeType":"YulFunctionCall","src":"7249:21:21"},"nodeType":"YulExpressionStatement","src":"7249:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7290:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7301:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7286:3:21"},"nodeType":"YulFunctionCall","src":"7286:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"7306:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7279:6:21"},"nodeType":"YulFunctionCall","src":"7279:30:21"},"nodeType":"YulExpressionStatement","src":"7279:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7329:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7340:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7325:3:21"},"nodeType":"YulFunctionCall","src":"7325:18:21"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"7345:34:21","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7318:6:21"},"nodeType":"YulFunctionCall","src":"7318:62:21"},"nodeType":"YulExpressionStatement","src":"7318:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7400:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7411:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7396:3:21"},"nodeType":"YulFunctionCall","src":"7396:18:21"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"7416:8:21","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7389:6:21"},"nodeType":"YulFunctionCall","src":"7389:36:21"},"nodeType":"YulExpressionStatement","src":"7389:36:21"},{"nodeType":"YulAssignment","src":"7434:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7446:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7457:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7442:3:21"},"nodeType":"YulFunctionCall","src":"7442:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7434:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7216:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7230:4:21","type":""}],"src":"7065:402:21"},{"body":{"nodeType":"YulBlock","src":"7646:163:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7663:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7674:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7656:6:21"},"nodeType":"YulFunctionCall","src":"7656:21:21"},"nodeType":"YulExpressionStatement","src":"7656:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7697:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7708:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7693:3:21"},"nodeType":"YulFunctionCall","src":"7693:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"7713:2:21","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7686:6:21"},"nodeType":"YulFunctionCall","src":"7686:30:21"},"nodeType":"YulExpressionStatement","src":"7686:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7736:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7747:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7732:3:21"},"nodeType":"YulFunctionCall","src":"7732:18:21"},{"hexValue":"7061757365446544654c656e64","kind":"string","nodeType":"YulLiteral","src":"7752:15:21","type":"","value":"pauseDeDeLend"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7725:6:21"},"nodeType":"YulFunctionCall","src":"7725:43:21"},"nodeType":"YulExpressionStatement","src":"7725:43:21"},{"nodeType":"YulAssignment","src":"7777:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7789:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7800:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7785:3:21"},"nodeType":"YulFunctionCall","src":"7785:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7777:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_53c8d4b505fc4a6062e9676e98edcc8d1715f5765c94eec04006fa629d8118d0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7623:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7637:4:21","type":""}],"src":"7472:337:21"},{"body":{"nodeType":"YulBlock","src":"7988:225:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8005:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8016:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7998:6:21"},"nodeType":"YulFunctionCall","src":"7998:21:21"},"nodeType":"YulExpressionStatement","src":"7998:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8039:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8050:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8035:3:21"},"nodeType":"YulFunctionCall","src":"8035:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"8055:2:21","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8028:6:21"},"nodeType":"YulFunctionCall","src":"8028:30:21"},"nodeType":"YulExpressionStatement","src":"8028:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8078:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8089:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8074:3:21"},"nodeType":"YulFunctionCall","src":"8074:18:21"},{"hexValue":"506f6f6c204572726f723a2054686520616d6f756e7420697320746f6f20736d","kind":"string","nodeType":"YulLiteral","src":"8094:34:21","type":"","value":"Pool Error: The amount is too sm"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8067:6:21"},"nodeType":"YulFunctionCall","src":"8067:62:21"},"nodeType":"YulExpressionStatement","src":"8067:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8149:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8160:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8145:3:21"},"nodeType":"YulFunctionCall","src":"8145:18:21"},{"hexValue":"616c6c","kind":"string","nodeType":"YulLiteral","src":"8165:5:21","type":"","value":"all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8138:6:21"},"nodeType":"YulFunctionCall","src":"8138:33:21"},"nodeType":"YulExpressionStatement","src":"8138:33:21"},{"nodeType":"YulAssignment","src":"8180:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8192:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8203:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8188:3:21"},"nodeType":"YulFunctionCall","src":"8188:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8180:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_92aacf893d2b78594d88afacb0b9e3fb8ba3272d88dc07c1b2cb0b3f742f8ed6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7965:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7979:4:21","type":""}],"src":"7814:399:21"},{"body":{"nodeType":"YulBlock","src":"8392:182:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8409:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8420:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8402:6:21"},"nodeType":"YulFunctionCall","src":"8402:21:21"},"nodeType":"YulExpressionStatement","src":"8402:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8443:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8454:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8439:3:21"},"nodeType":"YulFunctionCall","src":"8439:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"8459:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8432:6:21"},"nodeType":"YulFunctionCall","src":"8432:30:21"},"nodeType":"YulExpressionStatement","src":"8432:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8482:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8493:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8478:3:21"},"nodeType":"YulFunctionCall","src":"8478:18:21"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"8498:34:21","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8471:6:21"},"nodeType":"YulFunctionCall","src":"8471:62:21"},"nodeType":"YulExpressionStatement","src":"8471:62:21"},{"nodeType":"YulAssignment","src":"8542:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8554:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8565:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8550:3:21"},"nodeType":"YulFunctionCall","src":"8550:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8542:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8369:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8383:4:21","type":""}],"src":"8218:356:21"},{"body":{"nodeType":"YulBlock","src":"8753:223:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8770:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8781:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8763:6:21"},"nodeType":"YulFunctionCall","src":"8763:21:21"},"nodeType":"YulExpressionStatement","src":"8763:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8804:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8815:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8800:3:21"},"nodeType":"YulFunctionCall","src":"8800:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"8820:2:21","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8793:6:21"},"nodeType":"YulFunctionCall","src":"8793:30:21"},"nodeType":"YulExpressionStatement","src":"8793:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8843:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8854:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8839:3:21"},"nodeType":"YulFunctionCall","src":"8839:18:21"},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"8859:34:21","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8832:6:21"},"nodeType":"YulFunctionCall","src":"8832:62:21"},"nodeType":"YulExpressionStatement","src":"8832:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8914:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8925:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8910:3:21"},"nodeType":"YulFunctionCall","src":"8910:18:21"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"8930:3:21","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8903:6:21"},"nodeType":"YulFunctionCall","src":"8903:31:21"},"nodeType":"YulExpressionStatement","src":"8903:31:21"},{"nodeType":"YulAssignment","src":"8943:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8955:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8966:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8951:3:21"},"nodeType":"YulFunctionCall","src":"8951:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8943:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8730:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8744:4:21","type":""}],"src":"8579:397:21"},{"body":{"nodeType":"YulBlock","src":"9155:229:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9172:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9183:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9165:6:21"},"nodeType":"YulFunctionCall","src":"9165:21:21"},"nodeType":"YulExpressionStatement","src":"9165:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9206:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9217:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9202:3:21"},"nodeType":"YulFunctionCall","src":"9202:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"9222:2:21","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9195:6:21"},"nodeType":"YulFunctionCall","src":"9195:30:21"},"nodeType":"YulExpressionStatement","src":"9195:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9245:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9256:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9241:3:21"},"nodeType":"YulFunctionCall","src":"9241:18:21"},{"hexValue":"506f6f6c204572726f723a20546865206d696e74206c696d697420697320746f","kind":"string","nodeType":"YulLiteral","src":"9261:34:21","type":"","value":"Pool Error: The mint limit is to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9234:6:21"},"nodeType":"YulFunctionCall","src":"9234:62:21"},"nodeType":"YulExpressionStatement","src":"9234:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9316:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9327:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9312:3:21"},"nodeType":"YulFunctionCall","src":"9312:18:21"},{"hexValue":"6f206c61726765","kind":"string","nodeType":"YulLiteral","src":"9332:9:21","type":"","value":"o large"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9305:6:21"},"nodeType":"YulFunctionCall","src":"9305:37:21"},"nodeType":"YulExpressionStatement","src":"9305:37:21"},{"nodeType":"YulAssignment","src":"9351:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9363:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9374:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9359:3:21"},"nodeType":"YulFunctionCall","src":"9359:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9351:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_b87bd4f8ab6cab4e05b627666c690eac70070f778ac6ae87e78c887e9456ebc1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9132:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9146:4:21","type":""}],"src":"8981:403:21"},{"body":{"nodeType":"YulBlock","src":"9563:227:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9580:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9591:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9573:6:21"},"nodeType":"YulFunctionCall","src":"9573:21:21"},"nodeType":"YulExpressionStatement","src":"9573:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9614:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9625:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9610:3:21"},"nodeType":"YulFunctionCall","src":"9610:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"9630:2:21","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9603:6:21"},"nodeType":"YulFunctionCall","src":"9603:30:21"},"nodeType":"YulExpressionStatement","src":"9603:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9653:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9664:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9649:3:21"},"nodeType":"YulFunctionCall","src":"9649:18:21"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"9669:34:21","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9642:6:21"},"nodeType":"YulFunctionCall","src":"9642:62:21"},"nodeType":"YulExpressionStatement","src":"9642:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9724:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9735:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9720:3:21"},"nodeType":"YulFunctionCall","src":"9720:18:21"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"9740:7:21","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9713:6:21"},"nodeType":"YulFunctionCall","src":"9713:35:21"},"nodeType":"YulExpressionStatement","src":"9713:35:21"},{"nodeType":"YulAssignment","src":"9757:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9769:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9780:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9765:3:21"},"nodeType":"YulFunctionCall","src":"9765:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9757:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9540:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9554:4:21","type":""}],"src":"9389:401:21"},{"body":{"nodeType":"YulBlock","src":"9969:226:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9986:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9997:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9979:6:21"},"nodeType":"YulFunctionCall","src":"9979:21:21"},"nodeType":"YulExpressionStatement","src":"9979:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10020:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10031:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10016:3:21"},"nodeType":"YulFunctionCall","src":"10016:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"10036:2:21","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10009:6:21"},"nodeType":"YulFunctionCall","src":"10009:30:21"},"nodeType":"YulExpressionStatement","src":"10009:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10059:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10070:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10055:3:21"},"nodeType":"YulFunctionCall","src":"10055:18:21"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"10075:34:21","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10048:6:21"},"nodeType":"YulFunctionCall","src":"10048:62:21"},"nodeType":"YulExpressionStatement","src":"10048:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10130:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10141:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10126:3:21"},"nodeType":"YulFunctionCall","src":"10126:18:21"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"10146:6:21","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10119:6:21"},"nodeType":"YulFunctionCall","src":"10119:34:21"},"nodeType":"YulExpressionStatement","src":"10119:34:21"},{"nodeType":"YulAssignment","src":"10162:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10174:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10185:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10170:3:21"},"nodeType":"YulFunctionCall","src":"10170:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10162:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9946:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9960:4:21","type":""}],"src":"9795:400:21"},{"body":{"nodeType":"YulBlock","src":"10374:227:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10391:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10402:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10384:6:21"},"nodeType":"YulFunctionCall","src":"10384:21:21"},"nodeType":"YulExpressionStatement","src":"10384:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10425:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10436:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10421:3:21"},"nodeType":"YulFunctionCall","src":"10421:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"10441:2:21","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10414:6:21"},"nodeType":"YulFunctionCall","src":"10414:30:21"},"nodeType":"YulExpressionStatement","src":"10414:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10464:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10475:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10460:3:21"},"nodeType":"YulFunctionCall","src":"10460:18:21"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"10480:34:21","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10453:6:21"},"nodeType":"YulFunctionCall","src":"10453:62:21"},"nodeType":"YulExpressionStatement","src":"10453:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10535:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10546:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10531:3:21"},"nodeType":"YulFunctionCall","src":"10531:18:21"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"10551:7:21","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10524:6:21"},"nodeType":"YulFunctionCall","src":"10524:35:21"},"nodeType":"YulExpressionStatement","src":"10524:35:21"},{"nodeType":"YulAssignment","src":"10568:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10580:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10591:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10576:3:21"},"nodeType":"YulFunctionCall","src":"10576:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10568:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10351:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10365:4:21","type":""}],"src":"10200:401:21"},{"body":{"nodeType":"YulBlock","src":"10780:181:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10797:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10808:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10790:6:21"},"nodeType":"YulFunctionCall","src":"10790:21:21"},"nodeType":"YulExpressionStatement","src":"10790:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10831:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10842:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10827:3:21"},"nodeType":"YulFunctionCall","src":"10827:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"10847:2:21","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10820:6:21"},"nodeType":"YulFunctionCall","src":"10820:30:21"},"nodeType":"YulExpressionStatement","src":"10820:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10870:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10881:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10866:3:21"},"nodeType":"YulFunctionCall","src":"10866:18:21"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"10886:33:21","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10859:6:21"},"nodeType":"YulFunctionCall","src":"10859:61:21"},"nodeType":"YulExpressionStatement","src":"10859:61:21"},{"nodeType":"YulAssignment","src":"10929:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10941:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10952:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10937:3:21"},"nodeType":"YulFunctionCall","src":"10937:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10929:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10757:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10771:4:21","type":""}],"src":"10606:355:21"},{"body":{"nodeType":"YulBlock","src":"11067:76:21","statements":[{"nodeType":"YulAssignment","src":"11077:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11089:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11100:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11085:3:21"},"nodeType":"YulFunctionCall","src":"11085:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11077:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11119:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"11130:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11112:6:21"},"nodeType":"YulFunctionCall","src":"11112:25:21"},"nodeType":"YulExpressionStatement","src":"11112:25:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11036:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11047:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11058:4:21","type":""}],"src":"10966:177:21"},{"body":{"nodeType":"YulBlock","src":"11245:87:21","statements":[{"nodeType":"YulAssignment","src":"11255:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11267:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11278:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11263:3:21"},"nodeType":"YulFunctionCall","src":"11263:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11255:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11297:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11312:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"11320:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11308:3:21"},"nodeType":"YulFunctionCall","src":"11308:17:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11290:6:21"},"nodeType":"YulFunctionCall","src":"11290:36:21"},"nodeType":"YulExpressionStatement","src":"11290:36:21"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11214:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11225:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11236:4:21","type":""}],"src":"11148:184:21"},{"body":{"nodeType":"YulBlock","src":"11385:80:21","statements":[{"body":{"nodeType":"YulBlock","src":"11412:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11414:16:21"},"nodeType":"YulFunctionCall","src":"11414:18:21"},"nodeType":"YulExpressionStatement","src":"11414:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11401:1:21"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11408:1:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11404:3:21"},"nodeType":"YulFunctionCall","src":"11404:6:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11398:2:21"},"nodeType":"YulFunctionCall","src":"11398:13:21"},"nodeType":"YulIf","src":"11395:2:21"},{"nodeType":"YulAssignment","src":"11443:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11454:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"11457:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11450:3:21"},"nodeType":"YulFunctionCall","src":"11450:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"11443:3:21"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11368:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"11371:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"11377:3:21","type":""}],"src":"11337:128:21"},{"body":{"nodeType":"YulBlock","src":"11516:171:21","statements":[{"body":{"nodeType":"YulBlock","src":"11547:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11568:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11575:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"11580:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11571:3:21"},"nodeType":"YulFunctionCall","src":"11571:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11561:6:21"},"nodeType":"YulFunctionCall","src":"11561:31:21"},"nodeType":"YulExpressionStatement","src":"11561:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11612:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11615:4:21","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11605:6:21"},"nodeType":"YulFunctionCall","src":"11605:15:21"},"nodeType":"YulExpressionStatement","src":"11605:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11640:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11643:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11633:6:21"},"nodeType":"YulFunctionCall","src":"11633:15:21"},"nodeType":"YulExpressionStatement","src":"11633:15:21"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11536:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11529:6:21"},"nodeType":"YulFunctionCall","src":"11529:9:21"},"nodeType":"YulIf","src":"11526:2:21"},{"nodeType":"YulAssignment","src":"11667:14:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11676:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"11679:1:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11672:3:21"},"nodeType":"YulFunctionCall","src":"11672:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"11667:1:21"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11501:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"11504:1:21","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"11510:1:21","type":""}],"src":"11470:217:21"},{"body":{"nodeType":"YulBlock","src":"11744:116:21","statements":[{"body":{"nodeType":"YulBlock","src":"11803:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11805:16:21"},"nodeType":"YulFunctionCall","src":"11805:18:21"},"nodeType":"YulExpressionStatement","src":"11805:18:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11775:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11768:6:21"},"nodeType":"YulFunctionCall","src":"11768:9:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11761:6:21"},"nodeType":"YulFunctionCall","src":"11761:17:21"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11783:1:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11794:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11790:3:21"},"nodeType":"YulFunctionCall","src":"11790:6:21"},{"name":"x","nodeType":"YulIdentifier","src":"11798:1:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11786:3:21"},"nodeType":"YulFunctionCall","src":"11786:14:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11780:2:21"},"nodeType":"YulFunctionCall","src":"11780:21:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11757:3:21"},"nodeType":"YulFunctionCall","src":"11757:45:21"},"nodeType":"YulIf","src":"11754:2:21"},{"nodeType":"YulAssignment","src":"11834:20:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11849:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"11852:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11845:3:21"},"nodeType":"YulFunctionCall","src":"11845:9:21"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"11834:7:21"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11723:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"11726:1:21","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"11732:7:21","type":""}],"src":"11692:168:21"},{"body":{"nodeType":"YulBlock","src":"11914:76:21","statements":[{"body":{"nodeType":"YulBlock","src":"11936:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11938:16:21"},"nodeType":"YulFunctionCall","src":"11938:18:21"},"nodeType":"YulExpressionStatement","src":"11938:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11930:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"11933:1:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11927:2:21"},"nodeType":"YulFunctionCall","src":"11927:8:21"},"nodeType":"YulIf","src":"11924:2:21"},{"nodeType":"YulAssignment","src":"11967:17:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11979:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"11982:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11975:3:21"},"nodeType":"YulFunctionCall","src":"11975:9:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"11967:4:21"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11896:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"11899:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"11905:4:21","type":""}],"src":"11865:125:21"},{"body":{"nodeType":"YulBlock","src":"12050:325:21","statements":[{"nodeType":"YulAssignment","src":"12060:22:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12074:1:21","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"12077:4:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"12070:3:21"},"nodeType":"YulFunctionCall","src":"12070:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12060:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"12091:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12121:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"12127:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12117:3:21"},"nodeType":"YulFunctionCall","src":"12117:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"12095:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"12168:31:21","statements":[{"nodeType":"YulAssignment","src":"12170:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12184:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"12192:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12180:3:21"},"nodeType":"YulFunctionCall","src":"12180:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12170:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12148:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12141:6:21"},"nodeType":"YulFunctionCall","src":"12141:26:21"},"nodeType":"YulIf","src":"12138:2:21"},{"body":{"nodeType":"YulBlock","src":"12258:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12279:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12286:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"12291:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12282:3:21"},"nodeType":"YulFunctionCall","src":"12282:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12272:6:21"},"nodeType":"YulFunctionCall","src":"12272:31:21"},"nodeType":"YulExpressionStatement","src":"12272:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12323:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12326:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12316:6:21"},"nodeType":"YulFunctionCall","src":"12316:15:21"},"nodeType":"YulExpressionStatement","src":"12316:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12351:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12354:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12344:6:21"},"nodeType":"YulFunctionCall","src":"12344:15:21"},"nodeType":"YulExpressionStatement","src":"12344:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12214:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12237:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"12245:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12234:2:21"},"nodeType":"YulFunctionCall","src":"12234:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12211:2:21"},"nodeType":"YulFunctionCall","src":"12211:38:21"},"nodeType":"YulIf","src":"12208:2:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"12030:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12039:6:21","type":""}],"src":"11995:380:21"},{"body":{"nodeType":"YulBlock","src":"12412:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12429:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12436:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"12441:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12432:3:21"},"nodeType":"YulFunctionCall","src":"12432:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12422:6:21"},"nodeType":"YulFunctionCall","src":"12422:31:21"},"nodeType":"YulExpressionStatement","src":"12422:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12469:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12472:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12462:6:21"},"nodeType":"YulFunctionCall","src":"12462:15:21"},"nodeType":"YulExpressionStatement","src":"12462:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12493:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12496:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12486:6:21"},"nodeType":"YulFunctionCall","src":"12486:15:21"},"nodeType":"YulExpressionStatement","src":"12486:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"12380:127:21"},{"body":{"nodeType":"YulBlock","src":"12554:76:21","statements":[{"body":{"nodeType":"YulBlock","src":"12608:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12617:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12620:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12610:6:21"},"nodeType":"YulFunctionCall","src":"12610:12:21"},"nodeType":"YulExpressionStatement","src":"12610:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12577:5:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12598:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12591:6:21"},"nodeType":"YulFunctionCall","src":"12591:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12584:6:21"},"nodeType":"YulFunctionCall","src":"12584:21:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12574:2:21"},"nodeType":"YulFunctionCall","src":"12574:32:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12567:6:21"},"nodeType":"YulFunctionCall","src":"12567:40:21"},"nodeType":"YulIf","src":"12564:2:21"}]},"name":"validator_revert_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12543:5:21","type":""}],"src":"12512:118:21"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$822__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_33e2b1f84abe46a3fc0645ff9d05c4355790ff6c0ca7542300a6e6f0867cd147__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"Pool Error: Depositing into the \")\n        mstore(add(headStart, 96), \"pool is not available\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_374e68e173e86f595df5cf495ac0ac4f9128724fe573c888db944b89d7cc2af8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Amount is too large\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_53c8d4b505fc4a6062e9676e98edcc8d1715f5765c94eec04006fa629d8118d0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"pauseDeDeLend\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_92aacf893d2b78594d88afacb0b9e3fb8ba3272d88dc07c1b2cb0b3f742f8ed6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Pool Error: The amount is too sm\")\n        mstore(add(headStart, 96), \"all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b87bd4f8ab6cab4e05b627666c690eac70070f778ac6ae87e78c887e9456ebc1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Pool Error: The mint limit is to\")\n        mstore(add(headStart, 96), \"o large\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101c45760003560e01c806356891412116100f9578063a9059cbb11610097578063dd62ed3e11610071578063dd62ed3e146103a6578063e3b86a5e146103b9578063f2fde38b146103cc578063fc0c546a146103df57600080fd5b8063a9059cbb14610373578063ae3050e114610386578063d0679d341461039357600080fd5b80638da5cb5b116100d35780638da5cb5b1461032a5780638ed832711461034f57806395d89b4114610358578063a457c2d71461036057600080fd5b806356891412146102f057806370a08231146102f9578063715018a61461032257600080fd5b806323b872dd11610166578063313ce56711610140578063313ce5671461029c57806332f13d8c146102ab57806339509351146102ce5780634dbac733146102e157600080fd5b806323b872dd146102635780632bc355ca146102765780632e1a7d4d1461028957600080fd5b806313bdde8b116101a257806313bdde8b1461022057806318160ddd146102335780631b45a68d1461023b57806321e5e2c41461025057600080fd5b806306fdde03146101c9578063095ea7b3146101e757806312b583491461020a575b600080fd5b6101d16103f2565b6040516101de919061142d565b60405180910390f35b6101fa6101f5366004611364565b610484565b60405190151581526020016101de565b61021261049c565b6040519081526020016101de565b61021261022e36600461138e565b61051d565b600354610212565b61024e6102493660046113fb565b6107e2565b005b61021261025e3660046112d3565b610818565b6101fa610271366004611328565b610871565b61024e6102843660046113fb565b610895565b61024e6102973660046113fb565b6108c3565b604051601281526020016101de565b6101fa6102b93660046112d3565b60076020526000908152604090205460ff1681565b6101fa6102dc366004611364565b610a31565b610212670de0b6b3a764000081565b61021260095481565b6102126103073660046112d3565b6001600160a01b031660009081526001602052604090205490565b61024e610a53565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016101de565b61021260065481565b6101d1610a67565b6101fa61036e366004611364565b610a76565b6101fa610381366004611364565b610af1565b600a546101fa9060ff1681565b61024e6103a1366004611364565b610aff565b6102126103b43660046112f5565b610bba565b61024e6103c73660046113c1565b610be5565b61024e6103da3660046112d3565b610c00565b600854610337906001600160a01b031681565b606060048054610401906114f2565b80601f016020809104026020016040519081016040528092919081815260200182805461042d906114f2565b801561047a5780601f1061044f5761010080835404028352916020019161047a565b820191906000526020600020905b81548152906001019060200180831161045d57829003601f168201915b5050505050905090565b600033610492818585610c79565b5060019392505050565b6008546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b1580156104e057600080fd5b505afa1580156104f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105189190611414565b905090565b600a5460009060ff166105675760405162461bcd60e51b815260206004820152600d60248201526c1c185d5cd95119511953195b99609a1b60448201526064015b60405180910390fd5b600060095461057461049c565b61057e9190611482565b9050600061058b60035490565b1180156105985750600081115b6105b3576105ae670de0b6b3a7640000856114bc565b6105d1565b806105bd60035490565b6105c790866114bc565b6105d1919061149a565b91506000816006546105e391906114db565b9050838310156106455760405162461bcd60e51b815260206004820152602760248201527f506f6f6c204572726f723a20546865206d696e74206c696d697420697320746f6044820152666f206c6172676560c81b606482015260840161055e565b600083116106a15760405162461bcd60e51b815260206004820152602360248201527f506f6f6c204572726f723a2054686520616d6f756e7420697320746f6f20736d604482015262185b1b60ea1b606482015260840161055e565b8085111561070f5760405162461bcd60e51b815260206004820152603560248201527f506f6f6c204572726f723a204465706f736974696e6720696e746f2074686520604482015274706f6f6c206973206e6f7420617661696c61626c6560581b606482015260840161055e565b6008546040516323b872dd60e01b8152336004820152306024820152604481018790526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801561076157600080fd5b505af1158015610775573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079991906113de565b506107a43384610d9d565b60405185815233907fa63d9d1536f0a17779061a910d29ff26af4aa035bbd6c128b55bfde21d6a2b409060200160405180910390a250509392505050565b3360009081526007602052604090205460ff166107fe57600080fd5b806009600082825461081091906114db565b909155505050565b60008061082460035490565b1115610868576003546001600160a01b03831660009081526001602052604090205461084e61049c565b61085891906114bc565b610862919061149a565b92915050565b5060005b919050565b60003361087f858285610e7c565b61088a858585610ef6565b506001949350505050565b3360009081526007602052604090205460ff166108b157600080fd5b80600960008282546108109190611482565b60006009546108d061049c565b6108da9190611482565b90506108e461049c565b8211156108f057600080fd5b6000816108fc60035490565b61090690856114bc565b610910919061149a565b336000908152600160205260409020549091508111156109685760405162461bcd60e51b8152602060048201526013602482015272416d6f756e7420697320746f6f206c6172676560681b604482015260640161055e565b61097233826110c4565b60085460405163a9059cbb60e01b8152336004820152602481018590526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156109be57600080fd5b505af11580156109d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f691906113de565b5060405183815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a2505050565b600033610492818585610a448383610bba565b610a4e9190611482565b610c79565b610a5b611212565b610a65600061126c565b565b606060058054610401906114f2565b60003381610a848286610bba565b905083811015610ae45760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161055e565b61088a8286868403610c79565b600033610492818585610ef6565b3360009081526007602052604090205460ff16610b1b57600080fd5b610b2361049c565b811115610b2f57600080fd5b60085460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b158015610b7d57600080fd5b505af1158015610b91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb591906113de565b505050565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b610bed611212565b600a805460ff1916911515919091179055565b610c08611212565b6001600160a01b038116610c6d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161055e565b610c768161126c565b50565b6001600160a01b038316610cdb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161055e565b6001600160a01b038216610d3c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161055e565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038216610df35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161055e565b8060036000828254610e059190611482565b90915550506001600160a01b03821660009081526001602052604081208054839290610e32908490611482565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000610e888484610bba565b90506000198114610ef05781811015610ee35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161055e565b610ef08484848403610c79565b50505050565b6001600160a01b038316610f5a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161055e565b6001600160a01b038216610fbc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161055e565b6001600160a01b038316600090815260016020526040902054818110156110345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161055e565b6001600160a01b0380851660009081526001602052604080822085850390559185168152908120805484929061106b908490611482565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110b791815260200190565b60405180910390a3610ef0565b6001600160a01b0382166111245760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161055e565b6001600160a01b038216600090815260016020526040902054818110156111985760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161055e565b6001600160a01b03831660009081526001602052604081208383039055600380548492906111c79084906114db565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6000546001600160a01b03163314610a655760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161055e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461086c57600080fd5b6000602082840312156112e557600080fd5b6112ee826112bc565b9392505050565b6000806040838503121561130857600080fd5b611311836112bc565b915061131f602084016112bc565b90509250929050565b60008060006060848603121561133d57600080fd5b611346846112bc565b9250611354602085016112bc565b9150604084013590509250925092565b6000806040838503121561137757600080fd5b611380836112bc565b946020939093013593505050565b6000806000606084860312156113a357600080fd5b6113ac846112bc565b95602085013595506040909401359392505050565b6000602082840312156113d357600080fd5b81356112ee81611543565b6000602082840312156113f057600080fd5b81516112ee81611543565b60006020828403121561140d57600080fd5b5035919050565b60006020828403121561142657600080fd5b5051919050565b600060208083528351808285015260005b8181101561145a5785810183015185820160400152820161143e565b8181111561146c576000604083870101525b50601f01601f1916929092016040019392505050565b600082198211156114955761149561152d565b500190565b6000826114b757634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156114d6576114d661152d565b500290565b6000828210156114ed576114ed61152d565b500390565b600181811c9082168061150657607f821691505b6020821081141561152757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8015158114610c7657600080fdfea2646970667358221220fea850941bdf1ef1a35f2a61fd3618033761b490cac2c4532bd86a53ff80618264736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x56891412 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xE3B86A5E EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xAE3050E1 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0xD0679D34 EQ PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x8ED83271 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x56891412 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x313CE567 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x32F13D8C EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x4DBAC733 EQ PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x2BC355CA EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13BDDE8B GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x13BDDE8B EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x1B45A68D EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x21E5E2C4 EQ PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x12B58349 EQ PUSH2 0x20A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D1 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x142D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FA PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1364 JUMP JUMPDEST PUSH2 0x484 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x212 PUSH2 0x49C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x212 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0x138E JUMP JUMPDEST PUSH2 0x51D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x212 JUMP JUMPDEST PUSH2 0x24E PUSH2 0x249 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FB JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x212 PUSH2 0x25E CALLDATASIZE PUSH1 0x4 PUSH2 0x12D3 JUMP JUMPDEST PUSH2 0x818 JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0x1328 JUMP JUMPDEST PUSH2 0x871 JUMP JUMPDEST PUSH2 0x24E PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FB JUMP JUMPDEST PUSH2 0x895 JUMP JUMPDEST PUSH2 0x24E PUSH2 0x297 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FB JUMP JUMPDEST PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D3 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x1364 JUMP JUMPDEST PUSH2 0xA31 JUMP JUMPDEST PUSH2 0x212 PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH2 0x212 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x212 PUSH2 0x307 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x24E PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x212 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0xA67 JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x1364 JUMP JUMPDEST PUSH2 0xA76 JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x381 CALLDATASIZE PUSH1 0x4 PUSH2 0x1364 JUMP JUMPDEST PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1FA SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x24E PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1364 JUMP JUMPDEST PUSH2 0xAFF JUMP JUMPDEST PUSH2 0x212 PUSH2 0x3B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x12F5 JUMP JUMPDEST PUSH2 0xBBA JUMP JUMPDEST PUSH2 0x24E PUSH2 0x3C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C1 JUMP JUMPDEST PUSH2 0xBE5 JUMP JUMPDEST PUSH2 0x24E PUSH2 0x3DA CALLDATASIZE PUSH1 0x4 PUSH2 0x12D3 JUMP JUMPDEST PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x337 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x401 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x42D SWAP1 PUSH2 0x14F2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x47A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x47A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x45D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x492 DUP2 DUP6 DUP6 PUSH2 0xC79 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x518 SWAP2 SWAP1 PUSH2 0x1414 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0x567 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1C185D5CD95119511953195B99 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD PUSH2 0x574 PUSH2 0x49C JUMP JUMPDEST PUSH2 0x57E SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x58B PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x598 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x5B3 JUMPI PUSH2 0x5AE PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x14BC JUMP JUMPDEST PUSH2 0x5D1 JUMP JUMPDEST DUP1 PUSH2 0x5BD PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5C7 SWAP1 DUP7 PUSH2 0x14BC JUMP JUMPDEST PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x149A JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP2 PUSH1 0x6 SLOAD PUSH2 0x5E3 SWAP2 SWAP1 PUSH2 0x14DB JUMP JUMPDEST SWAP1 POP DUP4 DUP4 LT ISZERO PUSH2 0x645 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C204572726F723A20546865206D696E74206C696D697420697320746F PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x6F206C61726765 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x6A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C204572726F723A2054686520616D6F756E7420697320746F6F20736D PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x185B1B PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x55E JUMP JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x70F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C204572726F723A204465706F736974696E6720696E746F2074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x706F6F6C206973206E6F7420617661696C61626C65 PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x761 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x775 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x799 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST POP PUSH2 0x7A4 CALLER DUP5 PUSH2 0xD9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE CALLER SWAP1 PUSH32 0xA63D9D1536F0A17779061A910D29FF26AF4AA035BBD6C128B55BFDE21D6A2B40 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x7FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x810 SWAP2 SWAP1 PUSH2 0x14DB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x824 PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0x868 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x84E PUSH2 0x49C JUMP JUMPDEST PUSH2 0x858 SWAP2 SWAP1 PUSH2 0x14BC JUMP JUMPDEST PUSH2 0x862 SWAP2 SWAP1 PUSH2 0x149A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x87F DUP6 DUP3 DUP6 PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x88A DUP6 DUP6 DUP6 PUSH2 0xEF6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x8B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x810 SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD PUSH2 0x8D0 PUSH2 0x49C JUMP JUMPDEST PUSH2 0x8DA SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST SWAP1 POP PUSH2 0x8E4 PUSH2 0x49C JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x8F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x8FC PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x906 SWAP1 DUP6 PUSH2 0x14BC JUMP JUMPDEST PUSH2 0x910 SWAP2 SWAP1 PUSH2 0x149A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 GT ISZERO PUSH2 0x968 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x416D6F756E7420697320746F6F206C61726765 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55E JUMP JUMPDEST PUSH2 0x972 CALLER DUP3 PUSH2 0x10C4 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9F6 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x492 DUP2 DUP6 DUP6 PUSH2 0xA44 DUP4 DUP4 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0xA4E SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST PUSH2 0xC79 JUMP JUMPDEST PUSH2 0xA5B PUSH2 0x1212 JUMP JUMPDEST PUSH2 0xA65 PUSH1 0x0 PUSH2 0x126C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x401 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0xA84 DUP3 DUP7 PUSH2 0xBBA JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xAE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x55E JUMP JUMPDEST PUSH2 0x88A DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xC79 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x492 DUP2 DUP6 DUP6 PUSH2 0xEF6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB23 PUSH2 0x49C JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xB2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB91 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBB5 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xBED PUSH2 0x1212 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xC08 PUSH2 0x1212 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x55E JUMP JUMPDEST PUSH2 0xC76 DUP2 PUSH2 0x126C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55E JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE05 SWAP2 SWAP1 PUSH2 0x1482 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xE32 SWAP1 DUP5 SWAP1 PUSH2 0x1482 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE88 DUP5 DUP5 PUSH2 0xBBA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0xEF0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xEE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55E JUMP JUMPDEST PUSH2 0xEF0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xC79 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFBC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1034 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x106B SWAP1 DUP5 SWAP1 PUSH2 0x1482 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x10B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xEF0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1124 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x11C7 SWAP1 DUP5 SWAP1 PUSH2 0x14DB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x55E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x86C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12EE DUP3 PUSH2 0x12BC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1311 DUP4 PUSH2 0x12BC JUMP JUMPDEST SWAP2 POP PUSH2 0x131F PUSH1 0x20 DUP5 ADD PUSH2 0x12BC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x133D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1346 DUP5 PUSH2 0x12BC JUMP JUMPDEST SWAP3 POP PUSH2 0x1354 PUSH1 0x20 DUP6 ADD PUSH2 0x12BC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1380 DUP4 PUSH2 0x12BC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13AC DUP5 PUSH2 0x12BC JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x12EE DUP2 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x12EE DUP2 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x140D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x145A JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x143E JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x146C JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1495 JUMPI PUSH2 0x1495 PUSH2 0x152D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x14B7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x14D6 JUMPI PUSH2 0x14D6 PUSH2 0x152D JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x14ED JUMPI PUSH2 0x14ED PUSH2 0x152D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1506 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1527 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC76 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xA8 POP SWAP5 SHL 0xDF 0x1E CALL LOG3 0x5F 0x2A PUSH2 0xFD36 XOR SUB CALLDATACOPY PUSH2 0xB490 0xCA 0xC2 0xC4 MSTORE8 0x2B 0xD8 PUSH11 0x53FF80618264736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"134:2843:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;3469:14:21;;3462:22;3444:41;;3432:2;3417:18;4433:197:2;3399:92:21;930:122:20;;;:::i;:::-;;;11112:25:21;;;11100:2;11085:18;930:122:20;11067:76:21;1500:867:20;;;;;;:::i;:::-;;:::i;3244:106:2:-;3331:12;;3244:106;;798:126:20;;;;;;:::i;:::-;;:::i;:::-;;1058:212;;;;;;:::i;:::-;;:::i;5192:286:2:-;;;;;;:::i;:::-;;:::i;666:126:20:-;;;;;;:::i;:::-;;:::i;2373:415::-;;;;;;:::i;:::-;;:::i;3093:91:2:-;;;3175:2;11290:36:21;;11278:2;11263:18;3093:91:2;11245:87:21;303:44:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5873:234:2;;;;;;:::i;:::-;;:::i;197:43:20:-;;236:4;197:43;;378:26;;;;;;3408:125:2;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:2;3482:7;3508:18;;;:9;:18;;;;;;;3408:125;1831:101:1;;;:::i;1201:85::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:1;1201:85;;;-1:-1:-1;;;;;2601:32:21;;;2583:51;;2571:2;2556:18;1201:85:1;2538:102:21;246:51:20;;;;;;2367:102:2;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;410:31:20:-;;;;;;;;;2794:181;;;;;;:::i;:::-;;:::i;3976:149:2:-;;;;;;:::i;:::-;;:::i;564:96:20:-;;;;;;:::i;:::-;;:::i;2081:198:1:-;;;;;;:::i;:::-;;:::i;353:19:20:-;;;;;-1:-1:-1;;;;;353:19:20;;;2156:98:2;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:12;4570:32:2;719:10:12;4586:7:2;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:2;;4433:197;-1:-1:-1;;;4433:197:2:o;930:122:20:-;1015:5;;:30;;-1:-1:-1;;;1015:30:20;;1039:4;1015:30;;;2583:51:21;978:15:20;;-1:-1:-1;;;;;1015:5:20;;:15;;2556:18:21;;1015:30:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1005:40;;930:122;:::o;1500:867::-;1653:12;;1620:13;;1653:12;;1645:38;;;;-1:-1:-1;;;1645:38:20;;7674:2:21;1645:38:20;;;7656:21:21;7713:2;7693:18;;;7686:30;-1:-1:-1;;;7732:18:21;;;7725:43;7785:18;;1645:38:20;;;;;;;;;1693:20;1736:11;;1716:17;:15;:17::i;:::-;:31;;;;:::i;:::-;1693:54;;1781:1;1765:13;3331:12:2;;;3244:106;1765:13:20;:17;:37;;;;;1801:1;1786:12;:16;1765:37;:127;;1871:21;236:4;1871:6;:21;:::i;:::-;1765:127;;;1844:12;1827:13;3331:12:2;;;3244:106;1827:13:20;1818:22;;:6;:22;:::i;:::-;1817:39;;;;:::i;:::-;1757:135;;1902:13;1937:12;1918:16;;:31;;;;:::i;:::-;1902:47;;1976:8;1967:5;:17;;1959:69;;;;-1:-1:-1;;;1959:69:20;;9183:2:21;1959:69:20;;;9165:21:21;9222:2;9202:18;;;9195:30;9261:34;9241:18;;;9234:62;-1:-1:-1;;;9312:18:21;;;9305:37;9359:19;;1959:69:20;9155:229:21;1959:69:20;2054:1;2046:5;:9;2038:57;;;;-1:-1:-1;;;2038:57:20;;8016:2:21;2038:57:20;;;7998:21:21;8055:2;8035:18;;;8028:30;8094:34;8074:18;;;8067:62;-1:-1:-1;;;8145:18:21;;;8138:33;8188:19;;2038:57:20;7988:225:21;2038:57:20;2136:5;2126:6;:15;;2105:115;;;;-1:-1:-1;;;2105:115:20;;6139:2:21;2105:115:20;;;6121:21:21;6178:2;6158:18;;;6151:30;6217:34;6197:18;;;6190:62;-1:-1:-1;;;6268:18:21;;;6261:51;6329:19;;2105:115:20;6111:243:21;2105:115:20;2231:5;;:53;;-1:-1:-1;;;2231:53:20;;2250:10;2231:53;;;2885:34:21;2270:4:20;2935:18:21;;;2928:43;2987:18;;;2980:34;;;-1:-1:-1;;;;;2231:5:20;;;;:18;;2820::21;;2231:53:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2294:24;2300:10;2312:5;2294;:24::i;:::-;2333:27;;11112:25:21;;;2341:10:20;;2333:27;;11100:2:21;11085:18;2333:27:20;;;;;;;1635:732;;1500:867;;;;;:::o;798:126::-;875:10;862:24;;;;:12;:24;;;;;;;;854:33;;;;;;912:5;897:11;;:20;;;;;;;:::i;:::-;;;;-1:-1:-1;;;798:126:20:o;1058:212::-;1115:13;1160:1;1144:13;3331:12:2;;;3244:106;1144:13:20;:17;1140:123;;;3331:12:2;;-1:-1:-1;;;;;3508:18:2;;3482:7;3508:18;;;:9;:18;;;;;;1184:17:20;:15;:17::i;:::-;:38;;;;:::i;:::-;1183:56;;;;:::i;:::-;1175:64;1058:212;-1:-1:-1;;1058:212:20:o;1140:123::-;-1:-1:-1;1262:1:20;1140:123;1058:212;;;:::o;5192:286:2:-;5319:4;719:10:12;5375:38:2;5391:4;719:10:12;5406:6:2;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:2;;5192:286;-1:-1:-1;;;;5192:286:2:o;666:126:20:-;743:10;730:24;;;;:12;:24;;;;;;;;722:33;;;;;;780:5;765:11;;:20;;;;;;;:::i;2373:415::-;2426:20;2469:11;;2449:17;:15;:17::i;:::-;:31;;;;:::i;:::-;2426:54;;2508:17;:15;:17::i;:::-;2498:6;:27;;2490:36;;;;;;2536:12;2578;2561:13;3331:12:2;;;3244:106;2561:13:20;2552:22;;:6;:22;:::i;:::-;2551:39;;;;:::i;:::-;2626:10;3482:7:2;3508:18;;;:9;:18;;;;;;2536:54:20;;-1:-1:-1;2608:4:20;:29;;2600:61;;;;-1:-1:-1;;;2600:61:20;;6561:2:21;2600:61:20;;;6543:21:21;6600:2;6580:18;;;6573:30;-1:-1:-1;;;6619:18:21;;;6612:49;6678:18;;2600:61:20;6533:169:21;2600:61:20;2671:23;2677:10;2689:4;2671:5;:23::i;:::-;2704:5;;:34;;-1:-1:-1;;;2704:34:20;;2719:10;2704:34;;;3199:51:21;3266:18;;;3259:34;;;-1:-1:-1;;;;;2704:5:20;;;;:14;;3172:18:21;;2704:34:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2753:28:20;;11112:25:21;;;2762:10:20;;2753:28;;11100:2:21;11085:18;2753:28:20;;;;;;;2416:372;;2373:415;:::o;5873:234:2:-;5961:4;719:10:12;6015:64:2;719:10:12;6031:7:2;6068:10;6040:25;719:10:12;6031:7:2;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;1831:101:1:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2367:102:2:-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:12;6687:4:2;6768:25;719:10:12;6785:7:2;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:2;;10402:2:21;6803:85:2;;;10384:21:21;10441:2;10421:18;;;10414:30;10480:34;10460:18;;;10453:62;-1:-1:-1;;;10531:18:21;;;10524:35;10576:19;;6803:85:2;10374:227:21;6803:85:2;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:12;3862:28:2;719:10:12;3879:2:2;3883:6;3862:9;:28::i;2794:181:20:-;2874:10;2861:24;;;;:12;:24;;;;;;;;2853:33;;;;;;2914:17;:15;:17::i;:::-;2904:6;:27;;2896:36;;;;;;2942:5;;:26;;-1:-1:-1;;;2942:26:20;;-1:-1:-1;;;;;3217:32:21;;;2942:26:20;;;3199:51:21;3266:18;;;3259:34;;;2942:5:20;;;;:14;;3172:18:21;;2942:26:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2794:181;;:::o;3976:149:2:-;-1:-1:-1;;;;;4091:18:2;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;564:96:20:-;1094:13:1;:11;:13::i;:::-;633:12:20::1;:20:::0;;-1:-1:-1;;633:20:20::1;::::0;::::1;;::::0;;;::::1;::::0;;564:96::o;2081:198:1:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:1;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:1;;5329:2:21;2161:73:1::1;::::0;::::1;5311:21:21::0;5368:2;5348:18;;;5341:30;5407:34;5387:18;;;5380:62;-1:-1:-1;;;5458:18:21;;;5451:36;5504:19;;2161:73:1::1;5301:228:21::0;2161:73:1::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;10110:370:2:-;-1:-1:-1;;;;;10241:19:2;;10233:68;;;;-1:-1:-1;;;10233:68:2;;9997:2:21;10233:68:2;;;9979:21:21;10036:2;10016:18;;;10009:30;10075:34;10055:18;;;10048:62;-1:-1:-1;;;10126:18:21;;;10119:34;10170:19;;10233:68:2;9969:226:21;10233:68:2;-1:-1:-1;;;;;10319:21:2;;10311:68;;;;-1:-1:-1;;;10311:68:2;;5736:2:21;10311:68:2;;;5718:21:21;5775:2;5755:18;;;5748:30;5814:34;5794:18;;;5787:62;-1:-1:-1;;;5865:18:21;;;5858:32;5907:19;;10311:68:2;5708:224:21;10311:68:2;-1:-1:-1;;;;;10390:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;11112:25:21;;;10441:32:2;;11085:18:21;10441:32:2;;;;;;;10110:370;;;:::o;8402:389::-;-1:-1:-1;;;;;8485:21:2;;8477:65;;;;-1:-1:-1;;;8477:65:2;;10808:2:21;8477:65:2;;;10790:21:21;10847:2;10827:18;;;10820:30;10886:33;10866:18;;;10859:61;10937:18;;8477:65:2;10780:181:21;8477:65:2;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8645:18:2;;;;;;:9;:18;;;;;:28;;8667:6;;8645:18;:28;;8667:6;;8645:28;:::i;:::-;;;;-1:-1:-1;;8688:37:2;;11112:25:21;;;-1:-1:-1;;;;;8688:37:2;;;8705:1;;8688:37;;11100:2:21;11085:18;8688:37:2;;;;;;;8402:389;;:::o;10761:441::-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;-1:-1:-1;;10957:16:2;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;11010:68:2;;6909:2:21;11010:68:2;;;6891:21:21;6948:2;6928:18;;;6921:30;6987:31;6967:18;;;6960:59;7036:18;;11010:68:2;6881:179:21;11010:68:2;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10881:321;10761:441;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:2;;7593:68;;;;-1:-1:-1;;;7593:68:2;;9591:2:21;7593:68:2;;;9573:21:21;9630:2;9610:18;;;9603:30;9669:34;9649:18;;;9642:62;-1:-1:-1;;;9720:18:21;;;9713:35;9765:19;;7593:68:2;9563:227:21;7593:68:2;-1:-1:-1;;;;;7679:16:2;;7671:64;;;;-1:-1:-1;;;7671:64:2;;4522:2:21;7671:64:2;;;4504:21:21;4561:2;4541:18;;;4534:30;4600:34;4580:18;;;4573:62;-1:-1:-1;;;4651:18:21;;;4644:33;4694:19;;7671:64:2;4494:225:21;7671:64:2;-1:-1:-1;;;;;7817:15:2;;7795:19;7817:15;;;:9;:15;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:2;;7267:2:21;7842:72:2;;;7249:21:21;7306:2;7286:18;;;7279:30;7345:34;7325:18;;;7318:62;-1:-1:-1;;;7396:18:21;;;7389:36;7442:19;;7842:72:2;7239:228:21;7842:72:2;-1:-1:-1;;;;;7948:15:2;;;;;;;:9;:15;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:15;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:2;8054:4;-1:-1:-1;;;;;8045:26:2;;8064:6;8045:26;;;;11112:25:21;;11100:2;11085:18;;11067:76;8045:26:2;;;;;;;;8082:37;2794:181:20;9111:576:2;-1:-1:-1;;;;;9194:21:2;;9186:67;;;;-1:-1:-1;;;9186:67:2;;8781:2:21;9186:67:2;;;8763:21:21;8820:2;8800:18;;;8793:30;8859:34;8839:18;;;8832:62;-1:-1:-1;;;8910:18:21;;;8903:31;8951:19;;9186:67:2;8753:223:21;9186:67:2;-1:-1:-1;;;;;9349:18:2;;9324:22;9349:18;;;:9;:18;;;;;;9385:24;;;;9377:71;;;;-1:-1:-1;;;9377:71:2;;4926:2:21;9377:71:2;;;4908:21:21;4965:2;4945:18;;;4938:30;5004:34;4984:18;;;4977:62;-1:-1:-1;;;5055:18:21;;;5048:32;5097:19;;9377:71:2;4898:224:21;9377:71:2;-1:-1:-1;;;;;9482:18:2;;;;;;:9;:18;;;;;9503:23;;;9482:44;;9546:12;:22;;9520:6;;9482:18;9546:22;;9520:6;;9546:22;:::i;:::-;;;;-1:-1:-1;;9584:37:2;;11112:25:21;;;9610:1:2;;-1:-1:-1;;;;;9584:37:2;;;;;11100:2:21;11085:18;9584:37:2;;;;;;;2942:26:20;2794:181;;:::o;1359:130:1:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:1;719:10:12;1422:23:1;1414:68;;;;-1:-1:-1;;;1414:68:1;;8420:2:21;1414:68:1;;;8402:21:21;;;8439:18;;;8432:30;8498:34;8478:18;;;8471:62;8550:18;;1414:68:1;8392:182:21;2433:187:1;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:1;;;-1:-1:-1;;;;;;2541:17:1;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:173:21:-;82:20;;-1:-1:-1;;;;;131:31:21;;121:42;;111:2;;177:1;174;167:12;192:186;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;320:1;317;310:12;272:2;343:29;362:9;343:29;:::i;:::-;333:39;262:116;-1:-1:-1;;;262:116:21:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:2;;;528:1;525;518:12;480:2;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;470:173;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:2;;;810:1;807;800:12;762:2;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;752:224;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:2;;;1126:1;1123;1116:12;1078:2;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;1068:167:21:o;1240:322::-;1317:6;1325;1333;1386:2;1374:9;1365:7;1361:23;1357:32;1354:2;;;1402:1;1399;1392:12;1354:2;1425:29;1444:9;1425:29;:::i;:::-;1415:39;1501:2;1486:18;;1473:32;;-1:-1:-1;1552:2:21;1537:18;;;1524:32;;1344:218;-1:-1:-1;;;1344:218:21:o;1567:241::-;1623:6;1676:2;1664:9;1655:7;1651:23;1647:32;1644:2;;;1692:1;1689;1682:12;1644:2;1731:9;1718:23;1750:28;1772:5;1750:28;:::i;1813:245::-;1880:6;1933:2;1921:9;1912:7;1908:23;1904:32;1901:2;;;1949:1;1946;1939:12;1901:2;1981:9;1975:16;2000:28;2022:5;2000:28;:::i;2063:180::-;2122:6;2175:2;2163:9;2154:7;2150:23;2146:32;2143:2;;;2191:1;2188;2181:12;2143:2;-1:-1:-1;2214:23:21;;2133:110;-1:-1:-1;2133:110:21:o;2248:184::-;2318:6;2371:2;2359:9;2350:7;2346:23;2342:32;2339:2;;;2387:1;2384;2377:12;2339:2;-1:-1:-1;2410:16:21;;2329:103;-1:-1:-1;2329:103:21:o;3718:597::-;3830:4;3859:2;3888;3877:9;3870:21;3920:6;3914:13;3963:6;3958:2;3947:9;3943:18;3936:34;3988:1;3998:140;4012:6;4009:1;4006:13;3998:140;;;4107:14;;;4103:23;;4097:30;4073:17;;;4092:2;4069:26;4062:66;4027:10;;3998:140;;;4156:6;4153:1;4150:13;4147:2;;;4226:1;4221:2;4212:6;4201:9;4197:22;4193:31;4186:42;4147:2;-1:-1:-1;4299:2:21;4278:15;-1:-1:-1;;4274:29:21;4259:45;;;;4306:2;4255:54;;3839:476;-1:-1:-1;;;3839:476:21:o;11337:128::-;11377:3;11408:1;11404:6;11401:1;11398:13;11395:2;;;11414:18;;:::i;:::-;-1:-1:-1;11450:9:21;;11385:80::o;11470:217::-;11510:1;11536;11526:2;;11580:10;11575:3;11571:20;11568:1;11561:31;11615:4;11612:1;11605:15;11643:4;11640:1;11633:15;11526:2;-1:-1:-1;11672:9:21;;11516:171::o;11692:168::-;11732:7;11798:1;11794;11790:6;11786:14;11783:1;11780:21;11775:1;11768:9;11761:17;11757:45;11754:2;;;11805:18;;:::i;:::-;-1:-1:-1;11845:9:21;;11744:116::o;11865:125::-;11905:4;11933:1;11930;11927:8;11924:2;;;11938:18;;:::i;:::-;-1:-1:-1;11975:9:21;;11914:76::o;11995:380::-;12074:1;12070:12;;;;12117;;;12138:2;;12192:4;12184:6;12180:17;12170:27;;12138:2;12245;12237:6;12234:14;12214:18;12211:38;12208:2;;;12291:10;12286:3;12282:20;12279:1;12272:31;12326:4;12323:1;12316:15;12354:4;12351:1;12344:15;12208:2;;12050:325;;;:::o;12380:127::-;12441:10;12436:3;12432:20;12429:1;12422:31;12472:4;12469:1;12462:15;12496:4;12493:1;12486:15;12512:118;12598:5;12591:13;12584:21;12577:5;12574:32;12564:2;;12620:1;12617;12610:12"},"gasEstimates":{"creation":{"codeDepositCost":"1102200","executionCost":"infinite","totalCost":"infinite"},"external":{"INITIAL_RATE()":"306","addTotalLocked(uint256)":"26777","allowance(address,address)":"infinite","approve(address,uint256)":"24670","balanceOf(address)":"2605","changeOpenDeDeLend(bool)":"26753","ddlContracts(address)":"2598","decimals()":"222","decreaseAllowance(address,uint256)":"27061","getTotalBalance()":"infinite","increaseAllowance(address,uint256)":"27067","maxDepositAmount()":"2362","name()":"infinite","openDeDeLend()":"2377","owner()":"2365","provideFrom(address,uint256,uint256)":"infinite","renounceOwnership()":"infinite","send(address,uint256)":"infinite","shareOf(address)":"infinite","subTotalLocked(uint256)":"26796","symbol()":"infinite","token()":"2447","totalLocked()":"2341","totalSupply()":"2360","transfer(address,uint256)":"51221","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"28421","withdraw(uint256)":"infinite"}},"methodIdentifiers":{"INITIAL_RATE()":"4dbac733","addTotalLocked(uint256)":"2bc355ca","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","changeOpenDeDeLend(bool)":"e3b86a5e","ddlContracts(address)":"32f13d8c","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","getTotalBalance()":"12b58349","increaseAllowance(address,uint256)":"39509351","maxDepositAmount()":"8ed83271","name()":"06fdde03","openDeDeLend()":"ae3050e1","owner()":"8da5cb5b","provideFrom(address,uint256,uint256)":"13bdde8b","renounceOwnership()":"715018a6","send(address,uint256)":"d0679d34","shareOf(address)":"21e5e2c4","subTotalLocked(uint256)":"1b45a68d","symbol()":"95d89b41","token()":"fc0c546a","totalLocked()":"56891412","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ddlContract1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ddlContract2\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Provide\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INITIAL_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"addTotalLocked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"changeOpenDeDeLend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ddlContracts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxDepositAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openDeDeLend\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minShare\",\"type\":\"uint256\"}],\"name\":\"provideFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"shareOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"subTotalLocked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PoolDDL.sol\":\"PoolDDL\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/PoolDDL.sol\":{\"content\":\"pragma solidity 0.8.6;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract PoolDDL is Ownable, ERC20(\\\"Writing DDL\\\", \\\"DDL\\\") {\\n    uint256 public constant INITIAL_RATE = 1e18;\\n    uint256 public maxDepositAmount = type(uint256).max;\\n    mapping(address => bool) public ddlContracts;\\n    IERC20 public token;\\n    uint256 public totalLocked;\\n    bool public openDeDeLend = true;\\n\\n    event Provide(address indexed user, uint256 amount);\\n    event Withdraw(address indexed user, uint256 amount);\\n\\n    function changeOpenDeDeLend(bool value) external onlyOwner {\\n        openDeDeLend = value;\\n    }\\n\\n    function addTotalLocked(uint256 value) public {\\n        require(ddlContracts[msg.sender]);\\n        totalLocked += value;\\n    }\\n\\n    function subTotalLocked(uint256 value) public {\\n        require(ddlContracts[msg.sender]);\\n        totalLocked -= value;\\n    }\\n\\n    function getTotalBalance() public view returns (uint256 balance) {\\n        balance = token.balanceOf(address(this));\\n    }\\n\\n    function shareOf(address account) external view returns (uint256 share) {\\n        if (totalSupply() > 0)\\n            share = (getTotalBalance() * balanceOf(account)) / totalSupply();\\n        else share = 0;\\n    }\\n\\n    constructor(\\n        IERC20 _token,\\n        address ddlContract1,\\n        address ddlContract2\\n    ) {\\n        token = _token;\\n        ddlContracts[ddlContract1] = true;\\n        ddlContracts[ddlContract2] = true;\\n    }\\n\\n    function provideFrom(\\n        address account,\\n        uint256 amount,\\n        uint256 minShare\\n    ) external returns (uint256 share) {\\n        require(openDeDeLend, \\\"pauseDeDeLend\\\");\\n        uint256 totalBalance = getTotalBalance() + totalLocked;\\n        share = totalSupply() > 0 && totalBalance > 0\\n            ? (amount * totalSupply()) / totalBalance\\n            : amount * INITIAL_RATE;\\n        uint256 limit = maxDepositAmount - totalBalance;\\n        require(share >= minShare, \\\"Pool Error: The mint limit is too large\\\");\\n        require(share > 0, \\\"Pool Error: The amount is too small\\\");\\n        require(\\n            amount <= limit,\\n            \\\"Pool Error: Depositing into the pool is not available\\\"\\n        );\\n\\n        token.transferFrom(msg.sender, address(this), amount);\\n        _mint(msg.sender, share);\\n        emit Provide(msg.sender, amount);\\n    }\\n\\n    function withdraw(uint256 amount) external {\\n        uint256 totalBalance = getTotalBalance() + totalLocked;\\n        require(amount <= getTotalBalance());\\n        uint256 burn = (amount * totalSupply()) / totalBalance;\\n        require(burn <= balanceOf(msg.sender), \\\"Amount is too large\\\");\\n        _burn(msg.sender, burn);\\n        token.transfer(msg.sender, amount);\\n        emit Withdraw(msg.sender, amount);\\n    }\\n\\n    function send(address to, uint256 amount) public {\\n        require(ddlContracts[msg.sender]);\\n        require(amount <= getTotalBalance());\\n        token.transfer(to, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x618d8aee435b1171f68c57afa7327c079cc7d4a2d821931121580a4ab44cfd8a\"}},\"version\":1}","storageLayout":{"storage":[{"astId":53,"contract":"contracts/PoolDDL.sol:PoolDDL","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":174,"contract":"contracts/PoolDDL.sol:PoolDDL","label":"_balances","offset":0,"slot":"1","type":"t_mapping(t_address,t_uint256)"},{"astId":180,"contract":"contracts/PoolDDL.sol:PoolDDL","label":"_allowances","offset":0,"slot":"2","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":182,"contract":"contracts/PoolDDL.sol:PoolDDL","label":"_totalSupply","offset":0,"slot":"3","type":"t_uint256"},{"astId":184,"contract":"contracts/PoolDDL.sol:PoolDDL","label":"_name","offset":0,"slot":"4","type":"t_string_storage"},{"astId":186,"contract":"contracts/PoolDDL.sol:PoolDDL","label":"_symbol","offset":0,"slot":"5","type":"t_string_storage"},{"astId":4386,"contract":"contracts/PoolDDL.sol:PoolDDL","label":"maxDepositAmount","offset":0,"slot":"6","type":"t_uint256"},{"astId":4390,"contract":"contracts/PoolDDL.sol:PoolDDL","label":"ddlContracts","offset":0,"slot":"7","type":"t_mapping(t_address,t_bool)"},{"astId":4393,"contract":"contracts/PoolDDL.sol:PoolDDL","label":"token","offset":0,"slot":"8","type":"t_contract(IERC20)822"},{"astId":4395,"contract":"contracts/PoolDDL.sol:PoolDDL","label":"totalLocked","offset":0,"slot":"9","type":"t_uint256"},{"astId":4398,"contract":"contracts/PoolDDL.sol:PoolDDL","label":"openDeDeLend","offset":0,"slot":"10","type":"t_bool"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IERC20)822":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}